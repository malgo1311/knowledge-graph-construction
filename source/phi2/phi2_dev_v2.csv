1251,"
    Amdavad | location | Gujarat
    Amdavad | leader | Anandiben Patel
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {ontology[triple[1]]} | {triple[2]}"")
    
    return",10.846541404724121
1252,"
    apoapsis | 259776702.47055 | kilometres
    minimumTemperature | 211.0 | kelvins
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        if relation == '1stRunwaySurfaceType':
            triple.append(example['1stRunwaySurfaceType'])
        elif relation == '2ndRunwaySurfaceType':
            triple.append(example['2ndRunwaySurfaceType'])
        elif relation == '3rdRunwaySurfaceType':
            triple.append(example",11.009717464447021
1253,"
    (410777) | discoveryBy | Spacewatch
    (2009 FD) | discoveredBy | Spacewatch
    (88234300000.0) | periapsis | Spacewatch

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more relations
    # TOD",10.857213020324707
1254,"
    (66063) | 1998 | RO1
    (66063) | with | the
    (66063) | epoch | 2013-11-04
    (66063) | has | an
    (66063) | escapeVelocity | 0.0999 km/s

    """"""
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more triples from the given examples
    # TODO: Add more triples from the given sentences
    # TODO: Add more triples from the given ontology
    # TODO: Add more triples from the given examples and sentences
    # TODO: Add more triples from the given ontology and examples
    # TODO: Add more triples from the given ontology and sentences
    # TODO: Add more triples from the given examples and sentences
    # TODO: Add more triples from the given ontology and examples
    # TODO: Add more triples from the given examples and sentences
    # TODO: Add more triples from",10.876051425933838
1255,"
    1998_RO1 | escapeVelocity | 0.0999 km/sec
    1998_RO1 | epoch | 13th of January 2016
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    triples.append((word, relation, word))
    
    # Filter out the triples that do not match the relations in the ontology
    filtered_triples = []
    for triple in triples:
        if triple[1] in ontology:
            filtered_triples.append(triple)
    
    # Convert",10.866775512695312
1256,"
    epoch | epochType | 1998 RO1
    epoch | epochDate | 2016-01-13
    epoch | escapeVelocity | 0.0999
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startsw",10.889500379562378
1257,"
    1999_KW4 | rotationPeriod | 9953.28
    1999_KW4 | epochDate | July 14th 2004
    """"""
    
    # Get the triples from the sentence
    triples = get_triples(sentence)
    
    # Get the triples from the ontology
    ontology_triples = get_ontology_triples(ontology)
    
    # Get the triples from the sentence and the ontology
    ontology_sentence_triples = get_ontology_sentence_triples(sentence, ontology)
    
    # Get the triples from the sentence and the ontology, but only include the triples that are not in the ontology
    ontology_sentence_triples_not_in_ontology = get_ontology_sentence_triples_not_in_ontology(sentence, ontology)
    
    # Get the triples from the sentence and the ontology, but only include the triples that are in the ontology
    ontology_sentence_triples_in_ontology = get_ontology",10.851667404174805
1258,"
    epochDate | rotationPeriod | 2004-07-14
    epochDate | rotationPeriod | 9953.28
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    triples.append((word, relation, word))
    
    # Filter out the triples that do not match the relations in the ontology
    filtered_triples = []
    for triple in triples:
        if triple[1] in ontology:
            filtered_triples.append(triple)
    
    # Format the output as",10.863013505935669
1259,"
    KW4 | rotationPeriod | 9953.28
    KW4 | epochDate | 2004-07-14
    KW4 | yearOfConstruction | 1999
    KW4 | rotationPeriod | 9953.28
    KW4 | epochDate | 2004-07-14
    KW4 | yearOfConstruction | 1999
    KW4 | rotationPeriod | 9953.28
    KW4 | epochDate | 2004-07-14
    KW4 | yearOfConstruction | 1999
    KW4 | rotationPeriod | 9953.28
    KW4 | epochDate | 2004-07-14
    KW4 | yearOfConstruction | 1999
    KW4 | rotationPeriod | 9953.28
    KW4 | epochDate | 2004-07-14
    KW4 | yearOfConstruction | 1999
    KW4 | rotationPeriod | 9953.28
    KW4 | epochDate | 2004-07-14
    KW4 | yearOfConstruction | 1999
    KW4 | rotationPeriod | 9953.28
    KW4 | epochDate",10.887869834899902
1260,"
    Helena | averageSpeed | 18.44
    Helena | apoapsis | 441092000.0
    """"""
    # TODO: add more test cases
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more ontology
    # TODO: add more triples
    # TODO: add more triples with different relations
    # TODO: add more triples with different entities
    # TODO: add more triples with different entities and relations
    # TODO: add more triples with different entities and relations and different relations
    # TODO: add more triples with different entities and relations and different relations and different entities
    # TODO: add more triples with different entities and relations and different relations and different entities and different relations
    # TODO: add more triples with different entities and relations and different relations and different entities and different relations and different entities
    # TODO: add more triples with different entities and relations and different relations and different entities and different relations and different entities and different relations
    # TODO: add more",10.852471590042114
1261,"
    Helena | averageSpeed | 18.44
    Helena | apoapsis | 441092000.0
    """"""
    def __init__(self, ontology_file, sentence):
        self.ontology = Ontology(ontology_file)
        self.sentence = sentence

    def extract_triples(self):
        triples = []
        for word in self.sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word].relations:
                    if relation in self.ontology.concepts:
                        for concept in self.ontology.concepts[relation].concepts:
                            if concept in self.ontology.concepts:
                                triples.append((word, relation, concept))
        return triples

class Ontology:
    """"""
    This class represents an ontology. It contains concepts and relations.
    """"""
    def __init__(self, ontology_file):
        self.concepts = {}
        self.relations = {}
        self.load_ontology(ontology",10.919466257095337
1262,"
    apoapsis | measurement | 1036 Ganymed
    apoapsis | value | 611961000.0
    apoapsis | unit | kilometres
    apoapsis | speed | 16.86 kilometres per second
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different entities and relations
    # TODO: Add more triples with different entities and relations and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different entities
    # TODO: Add more triples with different entities and relations",10.89877200126648
1263,"
    apoapsis | measurement | 611961000.0
    apoapsis | unit | kilometres
    apoapsis | value | 611961000.0
    apoapsis | unit | metres
    apoapsis | value | 611961000.0
    apoapsis | unit | kilometres
    apoapsis | value | 611961000.0
    apoapsis | unit | metres
    apoapsis | value | 611961000.0
    apoapsis | unit | kilometres
    apoapsis | value | 611961000.0
    apoapsis | unit | metres
    apoapsis | value | 611961000.0
    apoapsis | unit | kilometres
    apoapsis | value | 611961000.0
    apoapsis | unit | metres
    apoapsis | value | 611961000.0
    apoapsis | unit | kilometres
    apoapsis | value | 611961000.0
    apoapsis | unit | metres
    apoapsis | value | 611961000.0
    apoapsis | unit | kilometres
    apo",10.885294675827026
1264,"
    Ganymed | celestialBody | 1036
    Ganymed | apoapsis | 611961000.0
    Ganymed | averageSpeed | 16.86
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities and different entities and",10.832494258880615
1265,"
    James_Craig_Watson | nationality | Canada
    James_Craig_Watson | discoveredByNasa | 1963
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103_Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103_Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103_Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103_Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103_Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103_Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103_Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103_Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103_Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103_Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103_Hera
    James_Craig_Watson |",10.81598949432373
1266,"
    Hera | discoveredBy | JamesCraigWatson
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.320412874221802
1267,"
    Canadian | nationality | Canada
    JamesCraigWatson | name | James Craig Watson
    Hera | entity | 103 Hera

    """"""
    def __init__(self, ontology_file, sentence):
        self.ontology = Ontology(ontology_file)
        self.sentence = sentence

    def extract_triples(self):
        triples = []
        for word in self.sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word]:
                    for entity in self.ontology.concepts[word][relation]:
                        triples.append(entity +'|'+ relation +'|'+ word)
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the concepts and relations in the ontology.

    Attributes:
    concepts: a dictionary of concepts in the ontology. The keys are the names of the concepts and the values are 
    dictionaries of relations and entities. The keys of the inner dictionaries are the relations and the values are 
    ",10.86408543586731
1268,"
    James_Craig_Watson | nationality | Canada
    James_Craig_Watson | discoveredByNasa | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103 Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson",10.876285076141357
1269,"
    Hera | discoveredBy | James Craig Watson
    Hera | cameFrom | Canada

    """"""
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more triples with multiple relations
    # TODO: add more triples with multiple entities
    # TODO: add more triples with multiple entities and relations
    # TODO: add more triples with multiple entities and relations with different relations
    # TODO: add more triples with multiple entities and relations with different relations and different entities
    # TODO: add more triples with multiple entities and relations with different relations and different entities and relations
    # TODO: add more triples with multiple entities and relations with different relations and different entities and relations and relations
    # TODO: add more triples with multiple entities and relations with different relations and different entities and relations and relations and relations
    # TODO: add more triples with multiple entities and relations with different relations and different entities and relations and relations and relations and relations
    # TODO: add more triples with multiple",10.852280616760254
1270,"
    James_Craig_Watson | nationality | Canada
    James_Craig_Watson | discoveredByNasa | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | 103 Hera
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson
    James_Craig_Watson | discoveredByNasaReferenceNumber | James Craig Watson",10.86538815498352
1271,"
    Hera | periapsis | 371240000.0
    Hera | epoch | 31st July 2016
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.870429039001465
1272,"
    Hera | periapsis | 371240000.0
    Hera | epoch | 31-07-2016
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))

    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")

    return output


def extract_triples_",10.884887456893921
1273,"
    Hera | periapsis | 371240000.0
    Hera | epochDate | August 27th 2011
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output",10.846739530563354
1274,"
    Camilla | discoveredBy | N. R. Pogson
    Camilla | epoch | 31st December 2006
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))

    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")

    return output

",10.52836298942566
1275,"
    Discovered | discoveredBy | N.R. Pogson
    Discovered | epochDate | December 31st 2006
    Discovered | discoveredBy | N.R. Pogson
    Discovered | epochDate | December 31st 2006
    Discovered | discoveredBy | N.R. Pogson
    Discovered | epochDate | December 31st 2006
    Discovered | discoveredBy | N.R. Pogson
    Discovered | epochDate | December 31st 2006
    Discovered | discoveredBy | N.R. Pogson
    Discovered | epochDate | December 31st 2006
    Discovered | discoveredBy | N.R. Pogson
    Discovered | epochDate | December 31st 2006
    Discovered | discoveredBy | N.R. Pogson
    Discovered | epochDate | December 31st 2006
    Discovered | discoveredBy | N.R. Pogson
    Discovered | epochDate | December 31st 2006
    Discovered | discoveredBy | N.R. Pogson
    Discovered | epochDate | December 31st 2006
    Discovered | discoveredBy | N.R. Pogson
    Discovered | epochDate |",10.878747701644897
1276,"
    Vicia | orbitalPeriod | 135589000.0
    Vicia | epochDate | 31 December 2006
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.861244678497314
1277,"
    Vicia | epochDate | 31 December 2016
    Vicia | orbitalPeriod | 135589000.0
    Vicia | epochDate | 1097 Vicia
    Vicia | orbitalPeriod | 135589000.0
    Vicia | epochDate | 1097 Vicia
    Vicia | orbitalPeriod | 135589000.0
    Vicia | epochDate | 1097 Vicia
    Vicia | orbitalPeriod | 135589000.0
    Vicia | epochDate | 1097 Vicia
    Vicia | orbitalPeriod | 135589000.0
    Vicia | epochDate | 1097 Vicia
    Vicia | orbitalPeriod | 135589000.0
    Vicia | epochDate | 1097 Vicia
    Vicia | orbitalPeriod | 135589000.0
    Vicia | epochDate | 1097 Vicia
    Vicia | orbitalPeriod | 135589000.0
    Vicia | epochDate | 1097 Vicia
    Vicia | orbitalPeriod | 135589000.0
    Vicia | epochDate | 1097 Vicia
    ",10.878614664077759
1278,"
    Vicia | orbitalPeriod | 135589000.0
    Vicia | epochDate | 2006.12.31
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        if relation == '1stRunwaySurfaceType':
            triple.append(example)
            triple.append(relation)
            triple.append(self.ontology.get_entity(sentence, '1stRunwaySurfaceType'))
        elif relation == '2ndRunwaySurfaceType':
            triple.append(example)
            ",10.825865745544434
1279,"
    1099 Figneria | averageSpeed | 16.37
    1099 Figneria | apoapsis | 605718000
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for word in sentence.split():
        if word in entities:
            for relation in relations:
                if relation in word:
                    triples.append((word, relation, word.replace(relation, '')))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output",10.835818767547607
1280,"
    1099 Figneria | apoapsis | 605718000.0
    1099 Figneria | averageSpeed | 16.37
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    triples.append((word, relation, word))
    
    # Filter out the triples that do not match the relations in the ontology
    filtered_triples = []
    for triple in triples:
        if triple[1] in ontology:
            filtered_triples.append(triple)
    
    #",10.83692741394043
1281,"
    1099 Figneria | 1stRunwaySurfaceType | asphalt
    1099 Figneria | 2ndRunwaySurfaceType | asphalt
    1099 Figneria | 3rdRunwaySurfaceType | asphalt
    1099 Figneria | 4thRunwaySurfaceType | asphalt
    1099 Figneria | LCCN_number | 1099
    1099 Figneria | NationalRegisterOfHistoricPlacesReferenceNumber | 1099
    1099 Figneria | abbreviation | Figneria
    1099 Figneria | academicDiscipline | Aerospace Engineering
    1099 Figneria | academicStaffSize | 1
    1099 Figneria | activeYearsEndDate | 2020-01-01
    1099 Figneria | activeYearsStartDate | 2020-01-01
    1099 Figneria | activeYearsStartYear | 2020
    1099 Figneria | addedToTheNationalRegisterOfHistoricPlaces | 2020-01-01
    1099 Figneria | address | 1099 Figneria, 1099 Figneria, 1099 Figneria, 1099 Figneria, 1099 F",10.830487966537476
1282,"
    Figneria | periapsis | 349206000000.0
    Figneria | epochDate | 31st December 2006
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    ",10.824764728546143
1283,"
    1099_Figneria | epochDate | 31_December_2006
    1099_Figneria | periapsis | 349206000000.0
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO",10.890374183654785
1284,"
    10_Hygiea | epochDate | 27th_June_2015
    10_Hygiea | asteroid | 10
    10_Hygiea | A900_GA | A900_GA
    10_Hygiea | asteroid | Hygiea
    10_Hygiea | asteroid | 10
    10_Hygiea | asteroid | A900_GA
    10_Hygiea | asteroid | Hygiea
    10_Hygiea | asteroid | 10
    10_Hygiea | asteroid | A900_GA
    10_Hygiea | asteroid | Hygiea
    10_Hygiea | asteroid | 10
    10_Hygiea | asteroid | A900_GA
    10_Hygiea | asteroid | Hygiea
    10_Hygiea | asteroid | 10
    10_Hygiea | asteroid | A900_GA
    10_Hygiea | asteroid | Hygiea
    10_Hygiea | asteroid | 10
    10_Hygiea | asteroid | A900_GA
    10_Hygiea | asteroid | Hygiea
    10_Hygiea |",10.833235740661621
1285,"
    Hygiea | epochDate | 2015-06-27
    Hygiea | formerName | A900 GA
    Hygiea | currentName | 10 Hygiea
    Hygiea | currentName | 10 Hygiea
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA
    Hygiea | formerName | A900 GA",10.831486701965332
1286,"
    10_Hygiea | asteroid | 27th_June_2015
    10_Hygiea | epochDate | 27th_June_2015
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900_GA
    10_Hygiea | formalName | A900",10.82910418510437
1287,"
    1101_Clematis | epoch | 2016-07-31
    1101_Clematis | periapsis | 445895000000.0
    """"""
    
    # Split the sentence into words
    words = sentence.split()
    
    # Initialize the output list
    output = []
    
    # Iterate through the words
    for i in range(len(words)):
        
        # Check if the word is a number
        if words[i].isdigit():
            
            # Check if the next word is a relation
            if i+1 < len(words) and words[i+1] in relations:
                
                # Extract the two entities
                entity_1 = words[i]
                entity_2 = words[i+1]
                
                # Add the triple to the output list
                output.append(entity_1 +'|'+ relations[words[i+1]] +'|'+ entity_2)
    
    # Return the output list
    return output

def extract_triples_from_sentence_with_relations(sent",10.83212161064148
1288,"
    1101 | periapsis | 445895000000
    1101 | epoch | 31-07-2016
    1101 | Clematis |
    1101 | has |
    1101 | a |
    1101 | periapsis |
    1101 | of |
    1101 | 445895000000 |
    1101 | and |
    1101 | its |
    1101 | epoch |
    1101 | comes |
    1101 | up |
    1101 | on |
    1101 | the |
    1101 | 31st |
    1101 | of |
    1101 | july |
    1101 | 2016 |

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a",10.82090425491333
1289,"
    1101 | epochDate | 2006-12-31
    1101 | periapsis | 445895000000.0
    1101 | epochDate | 2006-12-31
    1101 | periapsis | 445895000000.0
    1101 | epochDate | 2006-12-31
    1101 | periapsis | 445895000000.0
    1101 | epochDate | 2006-12-31
    1101 | periapsis | 445895000000.0
    1101 | epochDate | 2006-12-31
    1101 | periapsis | 445895000000.0
    1101 | epochDate | 2006-12-31
    1101 | periapsis | 445895000000.0
    1101 | epochDate | 2006-12-31
    1101 | periapsis | 445895000000.0
    1101 | epochDate | 2006-12-31
    1101 | periapsis | 445895000000.0
    1101 | epochDate | 2006-12-31
    1101 | periapsis | 4",10.824474096298218
1290,"
    Lydia | rotationalPeriod | 39332.9
    Lydia | epoch | 31st December 2006
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        if len(triple) == 3:
            triple.append(relation)
        return triple


class Ontology:
    """"""
    This class represents an ontology. It contains the relations and the concepts.
    """"""
    def __init__(self, relations",10.829401969909668
1291,"
    Lydia | rotationPeriod | 39332.9
    Lydia | epoch | 31st December 2006
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.780300378799438
1292,"
    Lydia | rotationPeriod | 39332.9
    Lydia | epochDate | 31 December 2006
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.776666402816772
1293,"
    Claudiomaccone | epochDate | 26 November 2005
    Claudiomaccone | periapsis | 296521000.0
    """"""
    
    # Split the sentence into words
    words = sentence.split()
    
    # Initialize the output list
    triples = []
    
    # Iterate over the words
    for i in range(len(words)):
        
        # Check if the word is a relation
        if words[i] in relations:
            
            # Get the previous and next words
            prev_word = words[i-1] if i > 0 else None
            next_word = words[i+1] if i < len(words)-1 else None
            
            # Check if the previous and next words are entities
            if prev_word and next_word:
                
                # Check if the previous word is an entity
                if prev_word in entities:
                    
                    # Check if the next word is an entity
                    if next_word in entities:
                        
                        # Add the triple to the output list
                        triples.append((prev_word",10.838265895843506
1294,"
    11264 Claudiomaccone | 1stRunwaySurfaceType | 4thRunwaySurfaceType
    11264 Claudiomaccone | 2ndRunwaySurfaceType | 4thRunwaySurfaceType
    11264 Claudiomaccone | 3rdRunwaySurfaceType | 4thRunwaySurfaceType
    11264 Claudiomaccone | 4thRunwaySurfaceType | 4thRunwaySurfaceType
    11264 Claudiomaccone | epochDate | 26 November 2005
    11264 Claudiomaccone | periapsis | 296521000.0
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
",10.866106748580933
1295,"
    Claudiomaccone | epochDate | 26 November 2005
    Claudiomaccone | periapsis | 296521000.0
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.keys():
                triple.append(word)
                triple.append(relation)
                triple.append(example[word])
        return triple
",9.642730236053467
1296,"
    Albany | state | Georgia
    Albany | state | United_States
    Albany | city | Albany,_Georgia
    Albany | city | United_States
    Albany | city | Georgia
    Albany | city | United_States
    Albany | city | Georgia
    Albany | city | United_States
    Albany | city | Georgia
    Albany | city | United_States
    Albany | city | Georgia
    Albany | city | United_States
    Albany | city | Georgia
    Albany | city | United_States
    Albany | city | Georgia
    Albany | city | United_States
    Albany | city | Georgia
    Albany | city | United_States
    Albany | city | Georgia
    Albany | city | United_States
    Albany | city | Georgia
    Albany | city | United_States
    Albany | city | Georgia
    Albany | city | United_States
    Albany | city | Georgia
    Alb",10.836360216140747
1297,"
    Albany | state | Georgia
    Albany | state | United_States
    Albany | state | United_States_of_America
    Albany | state | United_States_of_America_Georgia
    Albany | state | United_States_of_America_Georgia_African_Americans
    Albany | state | United_States_of_America_Georgia_African_Americans_Albany
    Albany | state | United_States_of_America_Georgia_African_Americans_Albany_Georgia
    Albany | state | United_States_of_America_Georgia_African_Americans_Albany_Georgia_African_Americans
    Albany | state | United_States_of_America_Georgia_African_Americans_Albany_Georgia_African_Americans_Albany_Georgia_African_Americans_Albany_Georgia_African_Americans_Albany_Georgia_African_Americans_Albany_Georgia_African_Americans_Albany_Georgia_African_Americans_Albany_Georgia_African_Americans_Albany_Georgia_African_",10.810391664505005
1298,"
    Albany | state | Georgia
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany | state | United_States
    Albany",10.845999717712402
1299,"
    Portland | city | Albany
    Portland | city | Oregon
    Portland | city | largest
    Portland | city | city
    Portland | city | Oregon
    Portland | city | Albany
    Portland | city | Oregon
    Portland | city | largest
    Portland | city | city
    Portland | city | Oregon
    Portland | city | Albany
    Portland | city | Oregon
    Portland | city | largest
    Portland | city | city
    Portland | city | Oregon
    Portland | city | Albany
    Portland | city | Oregon
    Portland | city | largest
    Portland | city | city
    Portland | city | Oregon
    Portland | city | Albany
    Portland | city | Oregon
    Portland | city | largest
    Portland | city | city
    Portland | city | Oregon
    Portland | city | Albany
    Portland | city | Oregon
    Portland | city | largest
    Portland | city | city
    Portland | city | Oregon
    Portland | city | Albany
    Portland | city | Oregon
    Portland | city | largest
    Portland | city | city
    Portland | city | Oregon
    Portland | city | Albany
    Portland |",10.820465564727783
1300,"
    Portland | city | Oregon
    Oregon | state | Albany
    Albany | state | Oregon
    Portland | city | Albany
    Albany | state | Oregon
    Oregon | state | Albany
    Albany | state | Oregon
    Portland | city | Albany
    Albany | state | Oregon
    Oregon | state | Albany
    Albany | state | Oregon
    Portland | city | Albany
    Albany | state | Oregon
    Oregon | state | Albany
    Albany | state | Oregon
    Portland | city | Albany
    Albany | state | Oregon
    Oregon | state | Albany
    Albany | state | Oregon
    Portland | city | Albany
    Albany | state | Oregon
    Oregon | state | Albany
    Albany | state | Oregon
    Portland | city | Albany
    Albany | state | Oregon
    Oregon | state | Albany
    Albany | state | Oregon
    Portland | city | Albany
    Albany | state | Oregon
    Oregon | state | Albany
    Albany | state | Oregon
    Portland | city | Albany
    ",10.828249216079712
1301,"
    Albany | city | Oregon
    Albany | city | Portland
    Albany | city | largest
    Albany | city | Oregon
    Albany | city | Portland
    Albany | city | largest
    Albany | city | Oregon
    Albany | city | Portland
    Albany | city | largest
    Albany | city | Oregon
    Albany | city | Portland
    Albany | city | largest
    Albany | city | Oregon
    Albany | city | Portland
    Albany | city | largest
    Albany | city | Oregon
    Albany | city | Portland
    Albany | city | largest
    Albany | city | Oregon
    Albany | city | Portland
    Albany | city | largest
    Albany | city | Oregon
    Albany | city | Portland
    Albany | city | largest
    Albany | city | Oregon
    Albany | city | Portland
    Albany | city | largest
    Albany | city | Oregon
    Alb",10.800571203231812
1302,"
    Alexandria | state | Indiana
    Alexandria | city | Indiana
    Alexandria | cityServed | Indiana
    Alexandria | state | Indiana
    Alexandria | city | Indiana
    Alexandria | cityServed | Indiana
    Alexandria | state | Indiana
    Alexandria | city | Indiana
    Alexandria | cityServed | Indiana
    Alexandria | state | Indiana
    Alexandria | city | Indiana
    Alexandria | cityServed | Indiana
    Alexandria | state | Indiana
    Alexandria | city | Indiana
    Alexandria | cityServed | Indiana
    Alexandria | state | Indiana
    Alexandria | city | Indiana
    Alexandria | cityServed | Indiana
    Alexandria | state | Indiana
    Alexandria | city | Indiana
    Alexandria | cityServed | Indiana
    Alexandria | state | Indiana
    Alexandria | city | Indiana
    Alexandria | cityServed | Indiana
    Alexandria | state | Indiana
    Alexandria | city | Indiana
    Alexandria |",10.810656547546387
1303,"
    Alexandria | state | Indiana
    Alexandria | area | 6.81 sq km
    Alexandria | populationDensity | 755.3 inhabitants per sq km
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more",10.803581953048706
1304,"
    Alexandria | populationDensity | 755.3
    Alexandria | areaOfLand | 6.81
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate through the words
    for i in range(len(words)):
        # Check if the word is a relation
        if words[i] in relations:
            # Get the entity 1
            entity1 = words[i-1]
            # Get the entity 2
            entity2 = words[i+1]
            # Add the triple to the dictionary
            triples[entity1 +'|'+ words[i] +'|'+ entity2] = True
    
    # Return the triples
    return triples

# Test the function
sentence = ""Edwin E. Aldrin Jr, also known as Buzz Aldrin, is an American born on Jan 20, 1930 in Glen Ridge, New Jersey. He graduated from MIT in 1962 with a doctorate in Science. He began working for NASA in 1963",10.82240080833435
1305,"
    Amarillo | location | Potter_County,_Texas
    Amarillo | location | United_States_of_America
    Potter_County,_Texas | location | Amarillo
    Potter_County,_Texas | location | United_States_of_America
    United_States_of_America | location | Potter_County,_Texas
    United_States_of_America | location | Amarillo

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1,",10.81473422050476
1306,"
    Amarillo | partOf | PotterCounty,Texas,U.S.

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

# Test the function
sent",10.898496627807617
1307,"
    Amarillo | location | Potter_County,_Texas
    Amarillo | location | United_States_of_America

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more test cases
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test cases
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test cases
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test cases
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test cases
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test cases
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test cases
    # TODO: Add more test sentences
    # TODO",10.808908462524414
1308,"
    Anaheim | cityServed | California
    Anaheim | cityServed | 48.0
    Anaheim | cityServed | 131.6
    Anaheim | cityServed | aboveSeaLevel
    Anaheim | cityServed | seaLevel
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilometres
    Anaheim | cityServed | squareKilomet",10.809866666793823
1309,"
    Anaheim | cityServed | California
    Anaheim | cityServed | 48.0
    Anaheim | cityServed | 131.6
    Anaheim | cityServed | aboveSeaLevel
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    Anaheim | cityServed | sqkm
    ",10.814457178115845
1310,"
    Anderson | township | Anderson Township, Madison County, Indiana
    Anderson | county | Madison County, Indiana
    Anderson | state | United_States
    Anderson | country | United_States
    Anderson | continent | North_America
    Anderson | countryRegion | United_States
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion | North_America
    Anderson | countryRegion",10.820802688598633
1311,"
    Anderson | state | Indiana
    Anderson | township | Anderson Township
    Anderson | county | Madison County
    Anderson | state | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_States
    Anderson | country | United_",10.819563388824463
1312,"
    Anderson | township | Anderson_Township,_Madison_County,_Indiana,_United_States
    Anderson | county | Madison_County,_Indiana,_United_States
    Anderson | state | Indiana,_United_States
    Anderson | country | United_States

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TOD",10.809900283813477
1313,"
    Anderson | location | Fall Creek Township, Madison County Indiana, United States
    Anderson | location | Indiana
    Anderson | location | Fall Creek Township
    Anderson | location | Madison County Indiana
    Anderson | location | United States
    Anderson | location | Indiana
    Anderson | location | Fall Creek Township
    Anderson | location | Madison County Indiana
    Anderson | location | United States
    Anderson | location | Indiana
    Anderson | location | Fall Creek Township
    Anderson | location | Madison County Indiana
    Anderson | location | United States
    Anderson | location | Indiana
    Anderson | location | Fall Creek Township
    Anderson | location | Madison County Indiana
    Anderson | location | United States
    Anderson | location | Indiana
    Anderson | location | Fall Creek Township
    Anderson | location | Madison County Indiana
    Anderson | location | United States
    Anderson | location | Indiana
    Anderson | location | Fall Creek Township
    Anderson | location | Madison County Indiana
    Anderson | location | United States
    Anderson | location | Indiana
    Anderson | location | Fall Creek Township
    Anderson | location | Madison County Indiana
    Anderson | location | United States
    Anderson | location | Indiana
    ",10.803160429000854
1314,"
    Anderson | partOf | Fall Creek Township
    Anderson | partOf | Madison County
    Anderson | partOf | Indiana
    Anderson | partOf | United_States

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases",10.81476879119873
1315,"
    Anderson | partOf | Fall Creek Township
    Anderson | county | Madison County
    Anderson | state | Indiana
    Anderson | country | United_States

    """"""
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more test sentences
    # TODO: add more test outputs
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    #",10.8132643699646
1316,"
    Anderson | partOf | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson | location | UnionTownship,MadisonCounty,Indiana,UnitedStates
    Anderson",10.806452751159668
1317,"
    Anderson | partOf | UnionTownship,MadisonCounty,Indiana
    Anderson | location | UnitedStates
    Anderson | location | Indiana
    Anderson | location | MadisonCounty
    Anderson | location | UnionTownship
    Anderson | location | Indiana
    Anderson | location | UnitedStates
    Anderson | location | Indiana
    Anderson | location | MadisonCounty
    Anderson | location | UnionTownship
    Anderson | location | Indiana
    Anderson | location | UnitedStates
    Anderson | location | Indiana
    Anderson | location | MadisonCounty
    Anderson | location | UnionTownship
    Anderson | location | Indiana
    Anderson | location | UnitedStates
    Anderson | location | Indiana
    Anderson | location | MadisonCounty
    Anderson | location | UnionTownship
    Anderson | location | Indiana
    Anderson | location | UnitedStates
    Anderson | location | Indiana
    Anderson | location | MadisonCounty
    Anderson | location | UnionTownship
    Anderson | location | Indiana
    Anderson | location | UnitedStates
    Anderson | location | Indiana
    Anderson | location | MadisonCounty
    Anderson | location | UnionTownship
    Anderson | location | Indiana",10.88090181350708
1318,"
    Ann_Arbor | cityServed | Michigan
    Ann_Arbor | populationDensity | 1580.7
    Ann_Arbor | areaTotal | 74.33
    Ann_Arbor | areaOfLand | 74.33
    Ann_Arbor | areaOfWater | 0
    Ann_Arbor | population | 1580.7
    Ann_Arbor | populationTotal | 1580.7
    Ann_Arbor | populationDensity | 1580.7
    Ann_Arbor | areaOfLand | 74.33
    Ann_Arbor | areaOfWater | 0
    Ann_Arbor | populationDensity | 1580.7
    Ann_Arbor | areaOfLand | 74.33
    Ann_Arbor | areaOfWater | 0
    Ann_Arbor | populationDensity | 1580.7
    Ann_Arbor | areaOfLand | 74.33
    Ann_Arbor | areaOfWater | 0
    Ann_Arbor | populationDensity | 1580.7
    Ann_Arbor | areaOfLand | 74.33
    Ann_Arbor | areaOfWater |",10.827986001968384
1319,"
    United_States | location | Atlanta
    United_States | ethnicGroup | African_Americans
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReferenceNumber'):
            relations",10.823941946029663
1320,"
    United_States | ethnicity | African_Americans
    United_States | location | Atlanta

    """"""
    def __init__(self, ontology_file, sentence):
        self.ontology = Ontology(ontology_file)
        self.sentence = sentence

    def extract_triples(self):
        triples = []
        for word in self.sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word].relations:
                    for concept in self.ontology.concepts[word].relations[relation]:
                        triples.append((word, relation, concept))
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the concepts and relations.
    """"""
    def __init__(self, ontology_file):
        self.concepts = {}
        self.relations = {}
        self.load_ontology(ontology_file)

    def load_ontology(self, ontology_file):
        """"""
        Loads the ontology from the given",10.833691835403442
1321,"
    Atlanta | location | United_States
    Atlanta | location | Georgia
    Atlanta | location | Atlanta
    Atlanta | location | Atlanta_Georgia
    Atlanta | location | Atlanta_Georgia_United_States
    Atlanta | location | Atlanta_Georgia_United_States_Georgia
    Atlanta | location | Atlanta_Georgia_United_States_Georgia_Atlanta
    Atlanta | location | Atlanta_Georgia_United_States_Georgia_Atlanta_Georgia
    Atlanta | location | Atlanta_Georgia_United_States_Georgia_Atlanta_Georgia_Atlanta
    Atlanta | location | Atlanta_Georgia_United_States_Georgia_Atlanta_Georgia_Atlanta_Atlanta
    Atlanta | location | Atlanta_Georgia_United_States_Georgia_Atlanta_Georgia_Atlanta_Atlanta_Atlanta
    Atlanta | location | Atlanta_Georgia_United_States_Georgia_Atlanta_Georgia_Atlanta_Atlanta_Atlanta_Atlanta
    Atlanta | location | Atlanta_Georgia_United_States_Georgia_Atlanta_Georgia_Atlanta_Atlanta_Atlanta_Atlanta_Atlanta
    Atlanta | location | Atlanta_Georgia_United_States_Georgia_Atlanta_Georgia_Atlanta_Atlanta_Atlanta_Atlanta_Atlanta
    Atlanta | location |",10.82449722290039
1322,"
    Atlanta | partOf | Fulton_County
    Atlanta | partOf | Georgia
    Atlanta | partOf | United_States

    """"""
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add more triples
    # TODO: Add",10.823368549346924
1323,"
    Atlanta | partOf | Fulton_County,_Georgia,_US
    Atlanta | partOf | Georgia,_US
    Atlanta | partOf | US
    Atlanta | partOf | Georgia
    Atlanta | partOf | Fulton_County
    Atlanta | partOf | US
    Atlanta | partOf | Georgia
    Atlanta | partOf | Fulton_County,_Georgia,_US
    Atlanta | partOf | Georgia,_US
    Atlanta | partOf | US
    Atlanta | partOf | Georgia
    Atlanta | partOf | Fulton_County
    Atlanta | partOf | US
    Atlanta | partOf | Georgia
    Atlanta | partOf | Fulton_County,_Georgia,_US
    Atlanta | partOf | Georgia,_US
    Atlanta | partOf | US
    Atlanta | partOf | Georgia
    Atlanta | partOf | Fulton_County
    Atlanta | partOf | US
    Atlanta | partOf | Georgia
    Atlanta | partOf | Fulton_County,_Georgia,_US
    Atlanta | partOf | Georgia,_US
    Atlanta | partOf | US
    Atlanta | partOf |",10.936519861221313
1324,"
    Atlanta | partOf | FultonCounty,Georgia
    Atlanta | partOf | Georgia
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    Atlanta | partOf | UnitedStates
    ",10.809316158294678
1325,"
    Attica | location | state | Indiana
    Attica | location | state | U.S.
    Attica | location | state | Indiana
    Attica | location | state | U.S.
    Attica | location | state | Indiana
    Attica | location | state | U.S.
    Attica | location | state | Indiana
    Attica | location | state | U.S.
    Attica | location | state | Indiana
    Attica | location | state | U.S.
    Attica | location | state | Indiana
    Attica | location | state | U.S.
    Attica | location | state | Indiana
    Attica | location | state | U.S.
    Attica | location | state | Indiana
    Attica | location | state | U.S.
    Attica | location | state | Indiana
    Attica | location | state | U.S.
    Attica | location | state | Indiana
    Attica | location | state | U.S.
    Attica | location | state | Indiana
    Attica | location | state | U.S.
    Att",10.811237573623657
1326,"
    Attica | partOf | Indiana
    Attica | partOf | United_States
    Attica | partOf | United_States_of_America
    Attica | partOf | United_States_of_America_in_Indiana
    Attica | partOf | United_States_of_America_in_Indiana_in_Indiana
    Attica | partOf | United_States_of_America_in_Indiana_in_Indiana_in_Indiana_in_Indiana
    Attica | partOf | United_States_of_America_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_in_Indiana_",10.814569473266602
1327,"
    Attica | partOf | Indiana
    Attica | partOf | United_States
    Indiana | partOf | United_States
    United_States | partOf | United_States

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {",10.834942102432251
1328,"
    Washington_DC | capital | United_States
    Washington_DC | location | Auburn,_Alabama
    Auburn,_Alabama | location | Washington_DC
    United_States | location | Auburn,_Alabama
    Auburn,_Alabama | location | Washington_DC
    Washington_DC | location | United_States
    United_States | location | Auburn,_Alabama
    Auburn,_Alabama | location | Washington_DC
    Washington_DC | location | United_States
    United_States | location | Auburn,_Alabama
    Auburn,_Alabama | location | Washington_DC
    Washington_DC | location | United_States
    United_States | location | Auburn,_Alabama
    Auburn,_Alabama | location | Washington_DC
    Washington_DC | location | United_States
    United_States | location | Auburn,_Alabama
    Auburn,_Alabama | location | Washington_DC
    Washington_DC | location | United_States
    United_States | location | Auburn,_Alabama
    Auburn,_Alabama | location | Washington_DC
    Washington_DC | location |",10.883851528167725
1329,"
    Auburn | state | Alabama
    Alabama | state | Auburn
    Alabama | state | United_States
    Alabama | state | Washington,_D.C.
    Alabama | state | capitalOfUnitedStates
    Alabama | state | United_States | Washington,_D.C.
    Alabama | state | United_States | capitalOfUnitedStates
    Alabama | state | United_States | Washington,_D.C.
    Alabama | state | United_States | capitalOfUnitedStates
    Alabama | state | United_States | Washington,_D.C.
    Alabama | state | United_States | capitalOfUnitedStates
    Alabama | state | United_States | Washington,_D.C.
    Alabama | state | United_States | capitalOfUnitedStates
    Alabama | state | United_States | Washington,_D.C.
    Alabama | state | United_States | capitalOfUnitedStates
    Alabama | state | United_States | Washington,_D.C.
    Alabama | state | United_States | capitalOfUnitedStates
    Alabama | state | United_States | Washington,_D.C.
    Alabama | state",10.81936502456665
1330,"
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | ethnicity | Asian_Americans
    Auburn | ethnicity | United_States
    Auburn | ethnicity | Alabama
    Auburn | ethnicity | Asian_Americans
    Auburn | ethnicity | United_States
    Auburn | ethnicity | Alabama
    Auburn | ethnicity | Asian_Americans
    Auburn | ethnicity | United_States
    Auburn | ethnicity | Alabama
    Auburn | ethnicity | Asian_Americans
    Auburn | ethnicity | United_States
    Auburn | ethnicity | Alabama
    Auburn | ethnicity | Asian_Americans
    Auburn | ethnicity | United_States
    Auburn | ethnicity | Alabama
    Auburn | ethnicity | Asian_Americans
    Auburn | ethnicity | United_States
    Auburn | ethnicity | Alabama
    Auburn | ethnicity | Asian_Americans
    Auburn | ethnicity | United_States
    Auburn | ethnicity | Alabama
    Auburn | ethnicity | Asian_Americans
    Auburn | ethnicity |",10.811135292053223
1331,"
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn | location | Alabama
    Auburn | location | United_States
    Auburn",10.811780452728271
1332,"
    Auburn | state | Alabama
    Alabama | state | United_States
    United_States | country | United_States
    Auburn | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
    Alabama | state | Alabama
    Alabama | state | United_States
",10.821824789047241
1333,"
    Austin | area | 703.95km2
    Austin | landArea | 686km2

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))

    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")

    return output


def extract_triples_from_sentence",10.824223279953003
1334,"
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin | city | Texas
    Texas | state | Austin
    Austin |",10.826726913452148
1335,"
    Austin | cityServed | Travis_County,_Texas
    Austin | state | United_States
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {ontology[triple[1]]} | {triple[2]}"")
    
    return",10.823209524154663
1336,"
    Austin | partOf | Travis_County
    Travis_County | partOf | Texas
    Texas | partOf | United_States
    United_States | partOf | 
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[",10.82577633857727
1337,"
    Austin | cityServed | Travis_County,_Texas
    Austin | state | Texas
    Austin | country | United_States
    """"""
    
    # Get the triples from the sentence
    triples = get_triples(sentence, ontology)
    
    # Filter the triples according to the relations in the ontology
    filtered_triples = filter_triples(triples, ontology)
    
    # Output the filtered triples
    for triple in filtered_triples:
        print(triple)

if __name__ == ""__main__"":
    main()",6.136146068572998
1338,"
    Austin | city | Texas
    Texas | state | United_States
    United_States | country | United_States
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager | position | CityManager
    CityManager",10.822373628616333
1339,"
    Austin | city | United_States
    Austin | city | Texas
    Austin | city | Austin
    Austin | city | Texas | United_States
    Austin | city | United_States | Texas
    Austin | city | Texas | United_States | Austin
    Austin | city | United_States | Texas | Austin | city
    Austin | city | United_States | Texas | Austin | city | Texas
    Austin | city | United_States | Texas | Austin | city | Texas | United_States
    Austin | city | United_States | Texas | Austin | city | Texas | United_States | Austin
    Austin | city | United_States | Texas | Austin | city | Texas | United_States | Austin | city | Texas | United_States | Austin
    Austin | city | United_States | Texas | Austin | city | Texas | United_States | Austin | city | Texas | United_States | Austin | city | Texas | United_States | Austin | city | Texas | United_States | Austin | city | Texas | United_States | Austin | city | Texas | United_States | Austin | city | Texas | United_States | Austin | city | Texas | United",10.8698890209198
1340,"
    Austin | city | Texas
    Texas | state | United_States
    United_States | country | United_States
    City | city | Austin
    City | city | Texas
    City | city | United_States
    City | city | Texas
    City | city | United_States
    City | city | Austin
    City | city | Texas
    City | city | United_States
    City | city | Austin
    City | city | Texas
    City | city | United_States
    City | city | Austin
    City | city | Texas
    City | city | United_States
    City | city | Austin
    City | city | Texas
    City | city | United_States
    City | city | Austin
    City | city | Texas
    City | city | United_States
    City | city | Austin
    City | city | Texas
    City | city | United_States
    City | city | Austin
    City | city | Texas
    City | city | United_States
    City | city | Austin
    City | city | Texas
    City | city | United_States
    City | city |",10.831881523132324
1341,"
    Austin | location | Texas
    Austin | location | United_States
    Texas | location | United_States
    Texas | location | United_States
    United_States | location | United_States
    United_States | location | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    United_States | country | United_States
    ",10.797580003738403
1342,"
    Austin | state | Texas
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state | United_States
    Austin | state |",10.814900398254395
1343,"
    Austin | state | Texas
    Austin | state | United_States
    Austin | country | United_States
    Austin | country | Texas
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_States
    Austin | country | United_",10.838710069656372
1344,"
    Attica | partOf | Indiana
    Attica | partOf | Indianapolis
    Indiana | partOf | Attica
    Indiana | partOf | Indianapolis
    Indianapolis | capital | Attica
    Indianapolis | capital | Indiana

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO",10.818114995956421
1345,"
    Attica | partOf | stateOfIndiana
    Attica | partOf | capital
    stateOfIndiana | partOf | Attica
    stateOfIndiana | partOf | capital
    capital | partOf | Attica
    capital | partOf | stateOfIndiana
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:",10.817846298217773
1346,"
    Ann_Arbor | partOf | Michigan
    Ann_Arbor | partOf | United_States
    Michigan | partOf | Ann_Arbor
    Michigan | partOf | United_States
    United_States | partOf | Ann_Arbor
    United_States | partOf | Michigan
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []",10.814635038375854
1347,"
    Ann_Arbor | partOf | Michigan
    Ann_Arbor | partOf | United_States

    """"""
    def __init__(self, ontology, examples, output_format='triples'):
        self.ontology = ontology
        self.examples = examples
        self.output_format = output_format

    def extract_triples(self):
        """"""
        Extract triples from the given examples and sentences according to the relations in the ontology.
        In the output, only include the triples in the given output format

        :return: list of triples
        """"""
        triples = []
        for example in self.examples:
            for sentence in example:
                for triple in self.extract_triples_from_sentence(sentence):
                    triples.append(triple)
        return triples

    def extract_triples_from_sentence(self, sentence):
        """"""
        Extract triples from the given sentence according to the relations in the ontology.
        In the output, only include the triples in the given output format

        :",10.816694498062134
1348,"
    Arlington | partOf | Texas
    Arlington | language | English
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(self.ontology.get_triple(example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the entities.
    """"""
    def __init__(self, relations, entities):
        self.relations = relations
        self.entities = entities

    def get_triple(self, entity1, relation, entity2):
        """"""
        Given an entity1, relation and entity2, this method returns the triple according to the ontology.
        """"""
        if entity1 in self.",10.827559232711792
1349,"
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Arlington | partOf | stateOfTexas
    Ar",10.825365543365479
1350,"
    Arlington | partOf | stateOfTexas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | Texas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | stateOfTexas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | Texas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | stateOfTexas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | Texas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | stateOfTexas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | Texas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | stateOfTexas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | Texas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | stateOfTexas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | Texas
    Arlington | partOf | EnglishLanguage
    Arlington | partOf | stateOfTexas
    Arlington |",10.829748392105103
1351,"
    Albuquerque | location | New_Mexico
    Albuquerque | location | United_States
    Albuquerque | location | Americans
    New_Mexico | location | United_States
    New_Mexico | location | Americans
    United_States | location | Americans

    """"""
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more entities
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more entities
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more entities
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more entities
    # TODO: add more relations
    #",10.888338088989258
1352,"
    Albuquerque | cityServed | United_States
    Albuquerque | cityServed | New_Mexico
    Albuquerque | cityServed | New_Mexico
    Albuquerque | cityServed | United_States
    Albuquerque | cityServed | New_Mexico
    Albuquerque | cityServed | United_States
    Albuquerque | cityServed | New_Mexico
    Albuquerque | cityServed | United_States
    Albuquerque | cityServed | New_Mexico
    Albuquerque | cityServed | United_States
    Albuquerque | cityServed | New_Mexico
    Albuquerque | cityServed | United_States
    Albuquerque | cityServed | New_Mexico
    Albuquerque | cityServed | United_States
    Albuquerque | cityServed | New_Mexico
    Albuquerque | cityServed | United_States
    Albuquerque | cityServed | New_Mexico
    Albuquerque | cityServed | United_States
    Albuquerque | cityServed | New_Mexico
    Albuquerque | cityServed | United_States
    Albuquerque | cityServed | New_Mexico
    Albuquerque",10.82220458984375
1353,"
    United_States | location | Albuquerque,_New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico
    United_States | location | New_Mexico",10.817775011062622
1354,"
    Akron | cityServed | United_States
    Akron | cityServed | Ohio
    Akron | cityServed | Akron
    Akron | cityServed | Ohio
    Akron | cityServed | United_States
    Akron | cityServed | Ohio
    Akron | cityServed | Akron
    Akron | cityServed | Ohio
    Akron | cityServed | United_States
    Akron | cityServed | Ohio
    Akron | cityServed | Akron
    Akron | cityServed | Ohio
    Akron | cityServed | United_States
    Akron | cityServed | Ohio
    Akron | cityServed | Akron
    Akron | cityServed | Ohio
    Akron | cityServed | United_States
    Akron | cityServed | Ohio
    Akron | cityServed | Akron
    Akron | cityServed | Ohio
    Akron | cityServed | United_States
    Akron | cityServed | Ohio
    Akron | cityServed | Akron
    Akron | cityServed | Ohio
    Akron",10.828227281570435
1355,"
    Akron_Ohio | partOf | United_States
    Akron_Ohio | partOf | ethnicGroup
    Akron_Ohio | partOf | Asian_Americans

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for entity in entities:
        for relation in relations:
            triples.append(entity + "" | "" + relation + "" | "" + ontology[relation])

    return triples


def get_triples_from_sentence_with_relations(sentence, ontology):
    """"""
    Given the following ontology, examples and sentences, please extract the triples from the sentence according to the 
    relations in the ontology. In the output, only",10.821668863296509
1356,"
    United_States | location | Akron,_Ohio
    Asian_Americans | ethnicGroup | United_States
    Akron,_Ohio | location | United_States

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases",10.81890082359314
1357,"
    Asterix | creator | Albert Uderzo
    Asterix | creator | Rene Goscinny
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(example +'|'+ relation +'|'+ sentence)
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the following attributes:
    - relations: a list of relations
    - entities: a list of entities
    - entity_to_id: a dictionary that maps entities to ids
    - id_to_entity: a dictionary that maps ids to entities
    """"""
    def __init__(self, relations, entities):
        self.relations = relations
        self.entities",10.966719627380371
1358,"
    Asterix | creator | René Goscinny
    Asterix | creator | Albert Uderzo
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(i+1, len(entities)):
            for relation in relations:
                triples.append(entities[i] + "" | "" + relation + "" | "" + entities[j])
    
    # Return the triples in the given output format
    return triples

# Test the function
sentence = ""Edwin E. Aldrin Jr, also known as Buzz Aldrin, is an American born on",10.850016117095947
1359,"
    Asterix | creator | René Goscinny
    Asterix | creator | Albert Uderzo
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.830113649368286
1360,"
    Aurakles | alternativeName | Len_Wein
    Aurakles | creator | Len_Wein
    Aurakles | alternativeName | Aurakles
    Aurakles | creator | Len_Wein
    Aurakles | alternativeName | Len_Wein
    Aurakles | creator | Len_Wein
    Aurakles | alternativeName | Len_Wein
    Aurakles | creator | Len_Wein
    Aurakles | alternativeName | Len_Wein
    Aurakles | creator | Len_Wein
    Aurakles | alternativeName | Len_Wein
    Aurakles | creator | Len_Wein
    Aurakles | alternativeName | Len_Wein
    Aurakles | creator | Len_Wein
    Aurakles | alternativeName | Len_Wein
    Aurakles | creator | Len_Wein
    Aurakles | alternativeName | Len_Wein
    Aurakles | creator | Len_Wein
    Aurakles | alternativeName | Len_Wein",10.813596248626709
1361,"
    Aurakles | character | Aurakles
    Aurakles | character | Len Wein
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology and triples",10.812084436416626
1362,"
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moen",10.879415035247803
1363,"
    Ballistic | person | Doug_Moench
    Ballistic | person | Kelvin_Mao
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.941596508026123
1364,"
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moench | creator | Ballistic
    Doug_Moench | creator | Kelvin_Mao
    Doug_Moen",10.809813976287842
1365,"
    Bananaman | actor | Graeme Garden
    Bananaman | TVSeries | Starring Graeme Garden, Bananaman, the TV series was shown on the BBC.
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]}",10.828396797180176
1366,"
    Garden | actor | Bananaman
    Garden | TVSeries | Bananaman
    Garden | TVSeries | BBC
    Garden | TVSeries | TV
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVSeries
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries | TVShow
    Garden | TVSeries",10.83241605758667
1367,"
    Bananaman | show | BBC
    Bananaman | star | Graeme Garden
    BBC | broadcaster | Bananaman
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence",10.838954448699951
1368,"
    Bill_Oddie | birthPlace | Lancashire
    Bill_Oddie | nationality | United_States
    Bill_Oddie | birthDate | 1930-01-20
    Bill_Oddie | alternativeName | Bill Oddie, Jr.
    Bill_Oddie | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Bill_Oddie | birthPlace | Lancashire
    Bill_Oddie | birthDate | 1930-01-20
    Bill_Oddie | alternativeName | Bill Oddie, Jr.
    Bill_Oddie | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Bill_Oddie | birthPlace | Lancashire
    Bill_Oddie | birthDate | 1930-01-20
    Bill_Oddie | alternativeName | Bill Oddie, Jr.
    Bill_Oddie | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Bill_Oddie | birthPlace | Lancashire
    Bill_Oddie | birthDate | 1930-01-20
    Bill",10.816997528076172
1369,"
    Bananaman | actor | Bill_Oddie
    Bill_Oddie | actor | Bananaman
    Bill_Oddie | birthplace | Lancashire
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {",10.936542749404907
1370,"
    Bill_Oddie | birthPlace | Lancashire
    Bill_Oddie | alternativeName | Bill Oddie
    Bill_Oddie | nationality | United_States
    Bill_Oddie | selectedByNasa | 1963
    Bill_Oddie | mission | Apollo_11
    Bill_Oddie | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Bill_Oddie | birthDate | 1930-01-20
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySur",10.822041034698486
1371,"
    Bibbo_Bibbowski | creator | Jerry_Ordway
    Bibbo_Bibbowski | nationality | American
    Bibbo_Bibbowski | birthDate | 1980-01-01
    Bibbo_Bibbowski | birthPlace | New_York_City,_New_York
    Bibbo_Bibbowski | alternativeName | Bibbo_Bibbowski
    Bibbo_Bibbowski | occupation | Cartoonist
    Bibbo_Bibbowski | nationality | American
    Bibbo_Bibbowski | birthDate | 1980-01-01
    Bibbo_Bibbowski | birthPlace | New_York_City,_New_York
    Bibbo_Bibbowski | alternativeName | Bibbo_Bibbowski
    Bibbo_Bibbowski | nationality | American
    Bibbo_Bibbowski | birthDate | 1980-01-01
    Bibbo_Bibbowski | birthPlace | New_York_City,_New_York
    Bibbo_Bibbowski |",10.805382490158081
1372,"
    Bibbo_Bibbowski | creator | Jerry_Ordway
    Bibbo_Bibbowski | nationality | American
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    ",10.822617530822754
1373,"
    Jerry_Ordway | nationality | United_States
    Jerry_Ordway | creator | Bibbo_Bibbowski
    Jerry_Ordway | alternativeName | Jerry_Ordway
    Jerry_Ordway | birthPlace | United_States
    Jerry_Ordway | birthDate | 1970-01-01
    Jerry_Ordway | birthYear | 1970
    Jerry_Ordway | almaMater | University_of_Maryland
    Jerry_Ordway | alternativeName | Jerry_Ordway
    Jerry_Ordway | nationality | United_States
    Jerry_Ordway | creator | Bibbo_Bibbowski
    Jerry_Ordway | alternativeName | Jerry_Ordway
    Jerry_Ordway | birthPlace | United_States
    Jerry_Ordway | birthDate | 1970-01-01
    Jerry_Ordway | birthYear | 1970
    Jerry_Ordway | almaMater | University_of_Maryland
    Jerry_Ordway | alternativeName | Jerry_Ordway
    Jerry_Ordway | nationality | United_States
    Jerry_Ordway | creator | Bibbo_Bibbowski
    ",10.922366380691528
1374,"
    Black_Pirate | alternativeName | Jon_Valor
    Black_Pirate | creator | Sheldon_Moldoff
    Black_Pirate | nationality | United_States
    Black_Pirate | birthPlace | New_Jersey
    Black_Pirate | birthDate | 1970-01-01
    Black_Pirate | alternativeName | Jon_Valor
    Black_Pirate | nationality | United_States
    Black_Pirate | birthPlace | New_Jersey
    Black_Pirate | birthDate | 1970-01-01
    Black_Pirate | creator | Sheldon_Moldoff
    Black_Pirate | nationality | United_States
    Black_Pirate | birthPlace | New_Jersey
    Black_Pirate | birthDate | 1970-01-01
    Black_Pirate | creator | Sheldon_Moldoff
    Black_Pirate | nationality | United_States
    Black_Pirate | birthPlace | New_Jersey
    Black_Pirate | birthDate | 1970-01-01
    Black_Pirate | creator | Sheldon_Moldoff
    Black_Pirate | nationality",10.831552505493164
1375,"
    Black_Pirate | creator | Jon_Valor
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black_Pirate | creatorTitle | The_Black_Pirate
    Black",10.966150760650635
1376,"
    Sheldon_Moldoff | creator | Black_Pirate
    Sheldon_Moldoff | creator | Jon_Valor
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
",10.832045555114746
1377,"
    Blockbuster | creator | Roger Stern
    Blockbuster | creator | Tom Lyle
    """"""
    
    def __init__(self, ontology, examples, sentence):
        self.ontology = ontology
        self.examples = examples
        self.sentence = sentence
        self.triples = []
        self.relations = []
        self.entity_1 = None
        self.entity_2 = None
        self.relation = None
        self.entity_1_type = None
        self.entity_2_type = None
        self.relation_type = None
        self.entity_1_id = None
        self.entity_2_id = None
        self.relation_id = None
        self.entity_1_id_type = None
        self.entity_2_id_type = None
        self.relation_id_type = None
        self.entity_1_id_value = None
        self.entity_2_id_value = None
        self.relation_id_value = None
        self.entity_1_id_value_type = None",10.842590093612671
1378,"
    Blockbuster | comicBookCharacter | Roger Stern
    Blockbuster | comicBookCharacter | Tom Lyle

    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        if relation == '1stRunwaySurfaceType':
            triple.append(example)
            triple.append(relation)
            triple.append(self.ontology.get_entity(sentence, '1stRunwaySurfaceType'))
        elif relation == '2ndRunwaySurfaceType':
            triple.append(example)
            triple.append(",10.834381818771362
1379,"
    Blockbuster | creator | Roger Stern
    Blockbuster | creator | Tom Lyle
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        if len(triple) == 3:
            triple.append(relation)
        return triple

class Ontology:
    """"""
    This class represents an ontology. It contains the following attributes:
    - relations: a list of relations
    - concepts: a dictionary of concepts, where the",10.839710474014282
1380,"
    Paris_Cullins | creator | Bolt
    Gary_Cohn | creator | Bolt
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output
```
",10.837830066680908
1381,"
    Paris_Cullins | creator | Gary_Cohn
    Gary_Cohn | creator | Paris_Cullins
    Gary_Cohn | creator | Bolt
    Paris_Cullins | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn | creator | Bolt
    Gary_Cohn |",10.936022996902466
1382,"
    Bolt | creator | Paris Cullins
    Bolt | creator | Gary Cohn
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output
```

Ex",10.818591833114624
1383,"
    Amerigas | location | King of Prussia, Pennsylvania
    Amerigas | industry | energy
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.807799816131592
1384,"
    AmeriGas | company | energy
    AmeriGas | location | King of Prussia, Pennsylvania
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReferenceNumber'",10.894505500793457
1385,"
    AmeriGas | company | energy
    AmeriGas | location | King of Prussia, Pennsylvania
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    #",10.825476884841919
1386,"
    AmeriGas | company | energy
    AmeriGas | company | United_States
    AmeriGas | company | energy
    AmeriGas | company | United_States
    AmeriGas | company | energy
    AmeriGas | company | United_States
    AmeriGas | company | energy
    AmeriGas | company | United_States
    AmeriGas | company | energy
    AmeriGas | company | United_States
    AmeriGas | company | energy
    AmeriGas | company | United_States
    AmeriGas | company | energy
    AmeriGas | company | United_States
    AmeriGas | company | energy
    AmeriGas | company | United_States
    AmeriGas | company | energy
    AmeriGas | company | United_States
    AmeriGas | company | energy
    AmeriGas | company | United_States
    AmeriGas | company | energy
    AmeriGas | company | United_States
    AmeriGas | company | energy
    Amer",10.840827941894531
1387,"
    AmeriGas | business | energy
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas | location | United_States
    AmeriGas",10.924229383468628
1388,"
    AmeriGas | industry | energy
    AmeriGas | serves | United_States

    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the following attributes:
    - relations: a list of relations
    - entities: a dictionary of entities, where the key is the entity name and the value is the entity object
    - entity_to_id: a dictionary that maps entity names to entity ids
    - id_to_entity: a dictionary that maps entity ids to entity names
    - id_to_relation: a dictionary that maps entity ids to relations
    - relation",10.814563274383545
1389,"
    Chinabank | netIncome | 15100000000
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {ontology[triple[1]]} | {triple[2]}"")
    
    return output

",10.482812643051147
1390,"
    Chinabank | provides | banking services
    Chinabank | earns | net income
    Chinabank | to | customers
    Chinabank | of | customers
    Chinabank | earning | 15,100,000,000
    Chinabank | a | net income
    Chinabank | of | customers | earning | 15,100,000,000
    Chinabank | customers | earning | 15,100,000,000
    Chinabank | Chinabank | provides | banking services
    Chinabank | Chinabank | earns | net income
    Chinabank | Chinabank | to | customers
    Chinabank | Chinabank | of | customers
    Chinabank | Chinabank | earning | 15,100,000,000
    Chinabank | Chinabank | a | net income
    Chinabank | Chinabank | of | customers | earning | 15,100,000,000
    Chinabank | Chinabank | customers | earning | 15,100,000,000
    Chinabank | Chinabank",10.811098575592041
1391,"
    Chinabank | offers | banking services
    Chinabank | makes | net income
    Chinabank | of | 15,100,000,000
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for entity in entities:
            for relation in relations:
                if relation in sentence:
                    triples.append((entity, relation, sentence.split(relation)[1].split(' ')[0]))
    
    # Filter out the triples that do not match the given ontology
    filtered_triples = []
    for triple in triples:
        if triple[0] in ontology and triple[2]",10.82210659980774
1392,"
    Chinabank | company | publicly traded company
    Chinabank | foundedIn | the Insular Government of the Philippine Islands
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
",10.852611064910889
1393,"
    Chinabank | company | publicly_traded
    Chinabank | founded | Insular_Government_of_the_Philippines
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the following methods:
    - add_relation: adds a relation to the ontology
    - add_entity: adds an entity to the ontology
    - add_example: adds an example to the ontology
    - get_relations: returns all relations in the ontology
    - get_entities: returns all entities in the ontology
    - get_examples: returns all examples",10.909385442733765
1394,"
    Chinabank | publicCompany | InsularGovernmentOfThePhilippineIslands
    Chinabank | foundationPlace | InsularGovernmentOfThePhilippineIslands
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(example +'|'+ relation +'|'+ sentence)
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the entities.
    """"""
    def __init__(self, relations, entities):
        self.relations = relations
        self.entities = entities

    def get_relations(self):
        return self.relations

    def get_entities(self):
        return self.entities


def load",10.824715852737427
1395,"
    GMA | massMedia | newMedia
    GMA | massMedia | industry
    GMA | massMedia | makes
    GMA | massMedia | mobileApplications
    GMA | massMedia | industry
    GMA | massMedia | makes
    GMA | massMedia | mobileApplications
    """"""
    
    # Get the triples from the sentence
    triples = get_triples(sentence)
    
    # Get the triples from the ontology
    ontology_triples = get_ontology_triples(ontology)
    
    # Get the triples from the sentence and the ontology
    all_triples = set(triples).union(set(ontology_triples))
    
    # Filter the triples to only include the ones in the given output format
    output_triples = []
    for triple in all_triples:
        if triple[0] in entities and triple[2] in entities:
            output_triples.append(triple)
    
    # Print the output
    for triple in output_triples:
        print(triple[0",10.886522054672241
1396,"
    GMA_New_Media | company | mass_media_industry
    GMA_New_Media | company | products
    GMA_New_Media | company | mobile_applications

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and tri",10.818788528442383
1397,"
    GMA_New_Media | massMediaIndustry | 
    GMA_New_Media | 
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append(entity1 + "" | "" + relation + "" | "" + entity2)
    
    # Return the triples in the given output format
    return triples

# Test the function
sentence = ""GMA New Media makes mobile apps and is in the mass media industry.""
print(extract_triples(",10.834463357925415
1398,"
    Hypermarcas | company | pharmaceutical
    Hypermarcas | company | cosmetics
    """"""
    
    # TODO: Add more relations
    # TODO: Add more examples
    
    # TODO: Add more sentences
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples
    
    # TODO: Add more triples",10.915329456329346
1399,"
    Hypermarcas | company | pharmaceuticals
    Hypermarcas | company | cosmetics
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate over the words and extract the triples
    for i in range(len(words) - 2):
        # Get the first word
        entity_1 = words[i]
        
        # Get the relation
        relation = words[i+1]
        
        # Get the second word
        entity_2 = words[i+2]
        
        # Add the triple to the dictionary
        triples[entity_1 +'' + relation +'' + entity_2] = True
    
    # Convert the dictionary to a list of strings in the desired format
    output = []
    for triple in triples:
        output.append(triple.split(' ')[0] +'|'+ triple.split(' ')[1] +'|'+ triple.split(' ')[2])
    
    return output
",10.827373027801514
1400,"
    Hypermarcas | pharmaceutical | cosmetic
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class is responsible for creating the ontology and the relations between the concepts.
    """"""
    def __init__(self, concepts, relations):
        self.concepts = concepts
        self.relations = relations

    def add_concept(self, concept):
        self.concepts.append(concept)

    def add_relation(self, relation):
        self.relations.append(relation)

    def get_concepts(self):
        return self.concepts

    def get_relations(self):
        return",10.822492599487305
1401,"
    Hypermarcas | typeOf | S.A
    Hypermarcas | managedBy | CEO
    """"""
    def __init__(self, ontology, examples, output_format):
        self.ontology = ontology
        self.examples = examples
        self.output_format = output_format

    def extract_triples(self):
        triples = []
        for example in self.examples:
            for sentence in example.sentences:
                for triple in self.extract_triples_from_sentence(sentence):
                    triples.append(triple)
        return triples

    def extract_triples_from_sentence(self, sentence):
        triples = []
        for entity in sentence.entities:
            for relation in self.ontology.get_relations_for_entity(entity):
                for other_entity in sentence.entities:
                    if other_entity!= entity:
                        triples.append((entity, relation, other_entity))
        return triples

    def write_triples(self, triples):
        with open(self",10.847647666931152
1402,"
    Hypermarcas | corporation | S.A.
    Hypermarcas | CEO | keyPerson
    """"""
    def __init__(self, ontology_file, examples_file, output_file):
        self.ontology = Ontology(ontology_file)
        self.examples = Examples(examples_file)
        self.output_file = output_file

    def run(self):
        with open(self.output_file, 'w') as f:
            for example in self.examples.examples:
                for sentence in example.sentences:
                    for triple in self.extract_triples(sentence):
                        f.write(triple + '\n')

    def extract_triples(self, sentence):
        triples = []
        for word in sentence.words:
            if word.word_type == 'entity':
                for relation in self.ontology.get_relations(word.word):
                    for entity in self.ontology.get_entities(relation):
                        triples.append(word.word +'|'+ relation +'|",10.824196338653564
1403,"
    Hypermarcas | corporationType | S.A.
    Hypermarcas | CEO | keyPerson
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept)
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in ontology[concept]:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            for entity in entities:
                if word.lower() == entity.lower():
                    for relation in relations:
                        triples.append((entity, relation, word))
    
    # Filter out the triples that do not match the relations in the ontology
    filtered_triples = []
    for triple in triples:
        if triple[1] in ontology:
            filtered_triples.append(triple)
    
    # Format",10.831685066223145
1404,"
    Hypermarcas | location | Brazil
    Hypermarcas | company | drugs
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {ontology[triple[1]]} | {triple[2]}"")
    
    return output

",10.828072309494019
1405,"
    Hypermarcas | location | Brazil
    Hypermarcas | produces | pharmaceutical drugs
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocatedIn | Brazil
    Hypermarcas | isLocated",10.827338933944702
1406,"
    Hypermarcas | location | Brazil
    Hypermarcas | product | drugs

    """"""
    
    def __init__(self, ontology_file, output_file):
        self.ontology = Ontology(ontology_file)
        self.output_file = output_file
        
    def extract_triples(self, sentence):
        """"""
        Extract triples from the sentence according to the relations in the ontology.
        In the output, only include the triples in the given output format

        Input: sentence
        Output: triples in the given output format
        """"""
        triples = []
        for word in sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word].relations:
                    for concept in self.ontology.concepts:
                        if relation in self.ontology.concepts[concept].relations:
                            triples.append(word +'|'+ relation +'|'+ concept)
        return triples
    
    def write_triples(self, triples):
        """"""",10.91167426109314
1407,"
    Hypermarcas | location | São Paulo
    Hypermarcas | product | drugs
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.624315023422241
1408,"
    Hypermarcas | drug | São Paulo
    Hypermarcas | company | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hypermarcas | location | São Paulo
    Hyper",10.818710088729858
1409,"
    Hypermarcas | company | Sao_Paulo
    Hypermarcas | location | Sao_Paulo
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermarcas | produces | pharmaceutical_drugs
    Hypermar",10.8229238986969
1410,"
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | January 1, 1913
    Trane | founded | 1913
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | January 1, 1913
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | January 1, 1913
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | January 1, 1913
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | January 1, 1913
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | January 1, 1913
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | January 1, 1913
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | January 1, 1913
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | January 1, 1913
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | January 1, 1913
    Trane | founded | La Crosse,Wisconsin
    Trane | founded",10.939594268798828
1411,"
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | 01-01-1913
    Trane | founded | 1913
    Trane | founded | 01-01
    Trane | founded | 01-01-1913
    Trane | founded | La Crosse,Wisconsin
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded | 01-01-1913
    Trane | founded",10.822508811950684
1412,"
    Trane | founded | La Crosse, Wisconsin
    Trane | founded | January 1st, 1913
    Trane | founded | 1913
    Trane | founded | La Crosse, Wisconsin
    Trane | founded | January 1st, 1913
    Trane | founded | La Crosse, Wisconsin
    Trane | founded | January 1st, 1913
    Trane | founded | La Crosse, Wisconsin
    Trane | founded | January 1st, 1913
    Trane | founded | La Crosse, Wisconsin
    Trane | founded | January 1st, 1913
    Trane | founded | La Crosse, Wisconsin
    Trane | founded | January 1st, 1913
    Trane | founded | La Crosse, Wisconsin
    Trane | founded | January 1st, 1913
    Trane | founded | La Crosse, Wisconsin
    Trane | founded | January 1st, 1913
    Trane | founded | La Crosse, Wisconsin
    Trane | founded | January 1st, 1913
    Trane | founded | La Crosse, Wisconsin
    Trane | founded | January 1st, 1913
    Trane | founded | La",10.82597041130066
1413,"
    Trane | location | Swords, Dublin, Ireland
    """"""
    
    # TODO: Add more test cases
    
    # TODO: Add more relations
    
    # TODO: Add more entities
    
    # TODO: Add more sentences
    
    # TODO: Add more ontology
    
    # TODO: Add more triples
    
    # TODO: Add more triples from the test sentence
    
    # TODO: Add more triples from the test sentence
    
    # TODO: Add more triples from the test sentence
    
    # TODO: Add more triples from the test sentence
    
    # TODO: Add more triples from the test sentence
    
    # TODO: Add more triples from the test sentence
    
    # TODO: Add more triples from the test sentence
    
    # TODO: Add more triples from the test sentence
    
    # TODO: Add more triples from the test sentence
    
    # TODO: Add more triples from the test sentence
    
    # TODO: Add more triples",10.8269202709198
1414,"
    Trane | location | Swords, Dublin
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location | Swords, Dublin, Ireland
    Trane | location",10.839600324630737
1415,"
    Trane | location | Swords, Dublin, Ireland
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))

    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")

    return output

",9.96096396446228
1416,"
    Bread | ingredient | Ajoblanco
    Bread | origin | Spain
    """"""
    
    # TODO: Add more relations
    
    # TODO: Add more entities
    
    # TODO: Add more examples
    
    # TODO: Add more sentences
    
    # TODO: Add more test sentences
    
    # TODO: Add more test outputs
    
    # TODO: Add more test entities
    
    # TODO: Add more test relations
    
    # TODO: Add more test examples
    
    # TODO: Add more test sentences
    
    # TODO: Add more test outputs
    
    # TODO: Add more test entities
    
    # TODO: Add more test relations
    
    # TODO: Add more test examples
    
    # TODO: Add more test sentences
    
    # TODO: Add more test outputs
    
    # TODO: Add more test entities
    
    # TODO: Add more test relations
    
    # TODO: Add more test examples
    
    # TODO: Add more",10.953983783721924
1417,"
    bread | ingredient | Ajoblanco
    bread | origin | Spain
    """"""
    
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences
        self.triples = []
        self.relations = []
        self.entity_1 = []
        self.entity_2 = []
        self.relation = []
        self.entity_1_type = []
        self.entity_2_type = []
        self.relation_type = []
        self.entity_1_id = []
        self.entity_2_id = []
        self.relation_id = []
        self.entity_1_id_type = []
        self.entity_2_id_type = []
        self.relation_id_type = []
        self.entity_1_id_type_id = []
        self.entity_2_id_type_id = []
        self.relation_id_type_id = []
        self.entity_1_id_type",10.858843564987183
1418,"
    Bread | ingredient | Ajoblanco
    Bread | country | Spain
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.841264247894287
1419,"
    Ajoblanco | origin | Andalusia
    Ajoblanco | ingredient | almond

    """"""
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more triples from the same sentence
    # TODO: add more triples from different sentences
    # TODO: add more triples from the same sentence with different relations
    # TODO: add more triples from different sentences with different relations
    # TODO: add more triples from the same sentence with different relations and different entities
    # TODO: add more triples from different sentences with different relations and different entities
    # TODO: add more triples from the same sentence with different relations and different entities and different entities
    # TODO: add more triples from different sentences with different relations and different entities and different entities
    # TODO: add more triples from the same sentence with different relations and different entities and different entities and different entities
    # TODO: add more triples from different sentences with different",10.829020261764526
1420,"
    Almond | ingredient | ajoblanco
    Almond | origin | Andalusia
    Almond | food | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond | 
    Almond |",10.879578113555908
1421,"
    Ajoblanco | region | Andalusia
    Ajoblanco | ingredient | almond
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.724563360214233
1422,"
    Tomato | ingredient | Amatriciana
    Tomato | ingredient | Lazio
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(example +'|'+ relation +'|'+ sentence)
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the entities.
    """"""
    def __init__(self, relations, entities):
        self.relations = relations
        self.entities = entities

    def get_relations(self):
        return self.relations

    def get_entities(self):
        return self.entities


def get_relations(ontology):
    """"""
    This function returns the relations in the",10.964064836502075
1423,"
    Amatriciana_sauce | Lazio_region | tomato
    tomato | ingredient | Amatriciana_sauce

    """"""
    def __init__(self, ontology_file, output_file):
        self.ontology = Ontology(ontology_file)
        self.output_file = output_file

    def extract_triples(self, sentence):
        """"""
        Extract triples from the sentence according to the relations in the ontology.
        In the output, only include the triples in the given output format

        Input: sentence
        Output: triples in the given output format
        """"""
        triples = []
        for word in sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word].relations:
                    for concept in self.ontology.concepts[word].relations[relation]:
                        triples.append(concept + "" | "" + relation + "" | "" + word)
        return triples

    def write_triples(self, triples):
        """"""
        Write",10.857586860656738
1424,"
    Tomato | ingredient | Amatriciana sauce
    Tomato | region | Lazio
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReferenceNumber'):
            relations",10.839558601379395
1425,"
    Bandeja_paisa | origin | Antioquia_Department_of_Colombia
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        if len(triple) == 3:
            triple.append(relation)
        return triple


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the entities.
    """"""
    def __init__(self, relations, entities",10.760172843933105
1426,"
    Bandeja_paisa | dish | Antioquia_Department_of_Colombia

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output


def extract",10.850905656814575
1427,"
    Arem-arem | ingredient | banana leaf
    Arem-arem | dish | Indonesia
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReferenceNumber'):
",10.829334259033203
1428,"
    Arem | ingredient | Banana leaf
    Arem | ingredient | arem
    Arem | ingredient | Indonesia
    """"""
    
    # Get the triples from the sentence
    triples = get_triples(sentence)
    
    # Get the triples from the ontology
    ontology_triples = get_ontology_triples(ontology)
    
    # Get the triples from the sentence and the ontology
    all_triples = triples + ontology_triples
    
    # Filter the triples to only include those that are in the ontology
    filtered_triples = [triple for triple in all_triples if triple[1] in ontology]
    
    # Format the triples according to the output format
    formatted_triples = [f""{triple[0]} | {triple[1]} | {triple[2]}"" for triple in filtered_triples]
    
    return formatted_triples


def get_ontology_triples(ontology):
    """"""
    Given an ontology, return the triples from the",10.883025884628296
1429,"
    Arem | food | banana leaf
    Arem | origin | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country | Indonesia
    Arem | country |",10.878748178482056
1430,"
    Olive_oil | ingredient | Arrabbiata_sauce
    Olive_oil | country | Italy
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(len(relations)):
            triples.append(entities[i] + "" | "" + relations[j] + "" | "" + entities[i+1])
    
    # Return the triples
    return triples


def extract_triples_from_sentence_with_relations(sentence, ontology):
    """"""
    Given the following ontology, examples and sentences, please extract the",10.803076267242432
1431,"
    Olive_Oil | food | Italian_Arrabbiata_sauce
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.834951162338257
1432,"
    Olive_oil | ingredient | Arrabbiata_sauce
    Arrabbiata_sauce | contains | Olive_oil
    Arrabbiata_sauce | from | Italy
    Italy | country | Arrabbiata_sauce
    Italy | country | Olive_oil

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('_')[0] in entities:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        entity1 = relation.split('_')[0]
        entity2 = relation.split('_')[1]
        triple = entity1 +'|'+ relation + '",10.854165315628052
1433,"
    Arrabbiata_sauce | food | Italy
    Italy | country | Italy
    Rome | city | Italy
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(self.ontology.get_triple(example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the following methods:
    - get_triple(entity, relation, sentence)
    - get_triples(examples, sentences)
    - get_relations()
    - get_entities()
    - get_entity_type(entity)
    - get_entity_type_name(entity)
    - get_entity_type_",10.828264236450195
1434,"
    Rome | capital | Italy
    Italy | where | Arrabbiata sauce comes from
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReferenceNumber'):
            ",10.931597471237183
1435,"
    Arrabbiata_sauce | food | Italy
    Italy | country | Rome
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(self.ontology.get_triple(example, relation, sentence))
        return triples

    def get_triples(self):
        triples = self.extract_triples()
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the following methods:
    - get_triple(entity_1, relation, entity_2)
    - get_triples(sentence)
    - get_relations(entity_1)
    - get_entities(relation)
    - get_",10.809619903564453
1436,"
    Tomatoes | food | Arrabbiata sauce
    Arrabbiata sauce | food | Italy
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology
    # TOD",10.778432130813599
1437,"
    Tomatoes | ingredient | Arrabbiata sauce
    Tomatoes | origin | Italy
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate over the words
    for i in range(len(words)):
        # Check if the word is a relation
        if words[i] in relations:
            # Get the entity 1 and entity 2
            entity1 = words[i-1]
            entity2 = words[i+1]
            
            # Check if the entities are already in the dictionary
            if entity1 in triples:
                triples[entity1].append((entity2, words[i]))
            else:
                triples[entity1] = [(entity2, words[i])]
    
    # Convert the dictionary to the desired output format
    output = []
    for entity1, entity2_relations in triples.items():
        for entity2, relation in entity2_relations:
            output.append(entity1 +'|",10.84986925125122
1438,"
    Tomatoes | food | Arrabbiata sauce
    Tomatoes | food | Italy
    """"""
    # TODO: Implement the function
    # TODO: Test your function with the test case above
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case below
    # TODO: Test your function with the test case",10.832074403762817
1439,"
    Arròs_negre | origin | Spain
    Arròs_negre | food | squid
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(self.ontology.get_triple(example, relation, sentence))
        return triples

    def get_triples(self):
        return self.extract_triples()


class Ontology:
    """"""
    This class represents an ontology. It contains the following methods:
    - get_triple(entity_1, relation, entity_2)
    - get_triples(sentence)
    - get_relations(entity_1)
    - get_entities(relation)
    - get_entity",10.798163175582886
1440,"
    Arròs_negre | food | Spain
    squid | food | Spain

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))

    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")

    return output


def extract_triples_from",10.966866970062256
1441,"
    Cuttlefish | ingredient | Arros negre
    Cuttlefish | region | Valencian Community
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.808590650558472
1442,"
    cuttlefish | ingredient | arros negre
    arros negre | dish | Valencian community region
    
    """"""
    
    # Get the triples from the sentence
    triples = get_triples(sentence)
    
    # Get the triples from the ontology
    ontology_triples = get_ontology_triples(ontology)
    
    # Get the triples from the sentence and the ontology
    all_triples = triples + ontology_triples
    
    # Filter the triples to only include those that are in the given output format
    output_triples = []
    for triple in all_triples:
        if triple[1] in relations:
            output_triples.append(triple)
    
    # Sort the output triples by the entity 1
    output_triples.sort(key=lambda x: x[0])
    
    # Print the output triples
    for triple in output_triples:
        print(triple[0] + "" | "" + triple[1] + "" | "" + triple[",10.840445280075073
1443,"
    Ayam_penyet | food | Java
    Ayam_penyet | mainIngredient | ""squeezed"" or ""smashed"" chicken
    Ayam_penyet | mainIngredient | ""squeezed"" or ""smashed"" chicken
    Ayam_penyet | mainIngredient | ""squeezed"" or ""smashed"" chicken
    Ayam_penyet | mainIngredient | ""squeezed"" or ""smashed"" chicken
    Ayam_penyet | mainIngredient | ""squeezed"" or ""smashed"" chicken
    Ayam_penyet | mainIngredient | ""squeezed"" or ""smashed"" chicken
    Ayam_penyet | mainIngredient | ""squeezed"" or ""smashed"" chicken
    Ayam_penyet | mainIngredient | ""squeezed"" or ""smashed"" chicken
    Ayam_penyet | mainIngredient | ""squeezed"" or ""smashed"" chicken
    Ayam_penyet | mainIngredient | ""squeezed"" or ""smashed"" chicken
    Ayam_",10.790117025375366
1444,"
    Javanese | food | Ayam penyet
    Javanese | food | sambal
    Javanese | food | fried chicken
    Javanese | food | squeezed/smashed
    Javanese | food | chicken
    Javanese | food | fried
    Javanese | food | chicken
    Javanese | food | sambal
    Javanese | food | squeezed/smashed
    Javanese | food | chicken
    Javanese | food | fried
    Javanese | food | chicken
    Javanese | food | sambal
    Javanese | food | squeezed/smashed
    Javanese | food | chicken
    Javanese | food | fried
    Javanese | food | chicken
    Javanese | food | sambal
    Javanese | food | squeezed/smashed
    Javanese | food | chicken
    Javanese | food | fried
    Javanese | food | chicken
    Javanese | food | sambal
    Javanese | food | squeezed/smashed
    Javanese | food | chicken
    ",10.816487312316895
1445,"
    sausage | 1stRunwaySurfaceType | asphalt
    sausage | 2ndRunwaySurfaceType | asphalt
    sausage | 3rdRunwaySurfaceType | asphalt
    sausage | 4thRunwaySurfaceType | asphalt
    sausage | LCCN_number | 0
    sausage | NationalRegisterOfHistoricPlacesReferenceNumber | 0
    sausage | abbreviation | saus
    sausage | academicDiscipline | food
    sausage | academicStaffSize | 1
    sausage | activeYearsEndDate | 0
    sausage | activeYearsStartDate | 0
    sausage | activeYearsStartYear | 0
    sausage | addedToTheNationalRegisterOfHistoricPlaces | 0
    sausage | address | 0
    sausage | affiliation | 0
    sausage | aircraftFighter | 0
    sausage | almaMater | 0
    sausage | alternativeName | 0
    sausage | anthem | 0
    sausage | apoapsis | 0
    sausage | architect",10.864467859268188
1446,"
    Bacon_Explosion | food | United_States
    Bacon_Explosion | food | sausage

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return",10.831614255905151
1447,"
    Bacon_Explosion | country | United_States
    Bacon_Explosion | ingredient | sausage
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.765255212783813
1448,"
    United_States | country | United_States
    John_Roberts | leader | John_Roberts
    United_States | country | United_States
    Bacon_Explosion | event | Bacon_Explosion
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0",10.842080354690552
1449,"
    John_Roberts | leader | United_States
    United_States | country | United_States
    John_Roberts | name | John_Roberts
    United_States | country | United_States
    John_Roberts | name | John_Roberts
    United_States | country | United_States
    John_Roberts | name | John_Roberts
    United_States | country | United_States
    John_Roberts | name | John_Roberts
    United_States | country | United_States
    John_Roberts | name | John_Roberts
    United_States | country | United_States
    John_Roberts | name | John_Roberts
    United_States | country | United_States
    John_Roberts | name | John_Roberts
    United_States | country | United_States
    John_Roberts | name | John_Roberts
    United_States | country | United_States
    John_Roberts | name | John_Roberts
    United_States | country | United_States
    John_Roberts | name | John_Roberts
    United_States | country | United_States
    John_Roberts | name | John_Roberts
    United",10.790839433670044
1450,"
    United_States | leader | John_Roberts
    United_States | food | Bacon_Explosion
    
    """"""
    
    # Split the sentence into words
    words = sentence.split()
    
    # Initialize the output list
    output = []
    
    # Iterate through the words
    for i in range(len(words)):
        
        # Check if the word is a noun
        if words[i].lower() in ontology['nouns']:
            
            # Check if the next word is a relation
            if i+1 < len(words) and words[i+1].lower() in ontology['relations']:
                
                # Check if the next word is another noun
                if i+2 < len(words) and words[i+2].lower() in ontology['nouns']:
                    
                    # Extract the triples
                    output.append(words[i] +'|'+ words[i+1] +'|'+ words[i+2])
    
    # Return the output list
    return output

def extract_triples",10.81757926940918
1451,"
    Bacon | ingredient | mainCourseDish | Bacon_Explosion
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        if len(triple) == 3:
            triple.append(relation)
        return triple


class Ontology:
    """"""
    This class represents an ontology. It contains the following methods:
    - add_relation: adds a relation to the ontology
    - add_entity: adds an entity",10.89335298538208
1452,"
    Bacon | ingredient | Bacon_Explosion
    """"""
    def __init__(self, ontology, examples, sentence):
        self.ontology = ontology
        self.examples = examples
        self.sentence = sentence

    def extract_triples(self):
        triples = []
        for example in self.examples:
            for sentence in self.sentence:
                triples.extend(self.extract_triples_from_sentence(example, sentence))
        return triples

    def extract_triples_from_sentence(self, example, sentence):
        triples = []
        for relation in self.ontology.relations:
            for entity in self.ontology.entities:
                if relation in sentence:
                    triples.append((entity, relation, example))
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the entities and relations.
    """"""
    def __init__(self, entities, relations):
        self.entities = entities
        self.relations = relations


class Ont",10.658153057098389
1453,"
    Bacon | entree | bacon
    bacon | mainIngredient | bacon
    """"""
    
    # Create a dictionary to store the triples
    triples = {}

    # Split the sentence into words
    words = sentence.split()

    # Iterate over the words
    for i in range(len(words)):
        # Check if the word is a noun
        if words[i].endswith('s'):
            # Check if the word is a proper noun
            if words[i][0].isupper():
                # Check if the word is a relation
                if words[i] in relations:
                    # Check if the word is a noun
                    if words[i+1].endswith('s'):
                        # Check if the word is a proper noun
                        if words[i+1][0].isupper():
                            # Check if the word is a noun
                            if words[i+2].endswith('s'):
                                # Check if the word is a proper noun
                                if words[i+2][0].isupper():
                                    # Check if the word is",10.698832988739014
1454,"
    bacon | food | sandwich
    bacon | food | bacon butty
    bacon | food | bacon sarnie
    bacon | food | bacon sanger
    bacon | food | piece 'n bacon
    bacon | food | bacon cob
    bacon | food | bacon barm
    bacon | food | bacon muffin

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different entities and relations
    # TODO: Add more triples with different entities and relations and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations
    # TODO: Add more triples with different entities",10.68313193321228
1455,"
    bacon | food | sandwich
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon
    bacon | food | bacon",10.700222730636597
1456,"
    Baked_Alaska | origin | United_States
    Baked_Alaska | origin | France
    Baked_Alaska | origin | China
    Baked_Alaska | ingredient | Christmas_pudding
    """"""
    def __init__(self, ontology, examples, sentence):
        self.ontology = ontology
        self.examples = examples
        self.sentence = sentence
        self.triples = []
        self.relations = []
        self.entity_1 = None
        self.entity_2 = None
        self.relation = None

    def extract_triples(self):
        """"""
        Extract triples from the sentence according to the relations in the ontology.
        """"""
        for example in self.examples:
            for relation in self.ontology.relations:
                if relation in example:
                    self.relation = relation
                    self.entity_1 = example[relation][0]
                    self.entity_2 = example[relation][1]
                    self.triples.append(self.entity_1 + "" | "" + self.relation + "" |",10.657776832580566
1457,"
    France | country | United_States
    France | country | China
    United_States | country | France
    United_States | country | China
    China | country | France
    China | country | United_States
    France | country | Baked_Alaska
    France | country | Christmas_pudding
    United_States | country | Baked_Alaska
    United_States | country | Christmas_pudding
    China | country | Baked_Alaska
    China | country | Christmas_pudding

    """"""
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add",10.8432457447052
1458,"
    Christmas_pudding | ingredient | Baked_Alaska
    Baked_Alaska | country | France, United_States, China
    """"""
    def __init__(self, ontology_file, sentence):
        self.ontology = Ontology(ontology_file)
        self.sentence = sentence

    def extract_triples(self):
        triples = []
        for word in self.sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.relations:
                    if relation in self.ontology.concepts[word]:
                        triples.append((word, relation, self.ontology.concepts[word][relation]))
        return triples

class Ontology:
    """"""
    This class represents the ontology. It contains the concepts and relations.
    """"""
    def __init__(self, ontology_file):
        self.concepts = {}
        self.relations = {}
        with open(ontology_file, 'r') as f:
            for line in f:
                if line.start",10.677801132202148
1459,"
    Baked_Alaska | origin | China
    Baked_Alaska | language | Standard_Chinese
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.648308277130127
1460,"
    Standard_Chinese | language | China
    baked_Alaska | food | Standard_Chinese
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {ontology[triple[1]]} | {triple[2]}"")
    
    return output

",10.668358564376831
1461,"
    BakedAlaska | dessert | cookies
    """"""
    def __init__(self, ontology_file, sentence):
        self.ontology = Ontology(ontology_file)
        self.sentence = sentence

    def extract_triples(self):
        triples = []
        for word in self.sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word].relations:
                    for concept in self.ontology.concepts[word].relations[relation]:
                        triples.append(concept +'|'+ relation +'|'+ word)
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the concepts and relations in the ontology.
    """"""
    def __init__(self, ontology_file):
        self.concepts = {}
        self.relations = {}
        self.load_ontology(ontology_file)

    def load_ontology(self, ontology_file):
        """"""
        Loads the ontology from",10.662513017654419
1462,"
    Baked_Alaska | dessert | cookie
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the concepts.
    """"""
    def __init__(self, relations, concepts):
        self.relations = relations
        self.concepts = concepts


class Concept:
    """"""
    This class represents a concept. It contains the name and the properties.
    """"""
    def __init__(self, name, properties):
        self.name = name
        self.properties = properties


class Relation:
    """"""
    This class represents a relation.",10.755792617797852
1463,"
    Baked_Alaska | dessert | cookies
    Baked_Alaska | dessert | A
    Baked_Alaska | dessert | B
    Baked_Alaska | dessert | C
    Baked_Alaska | dessert | D
    Baked_Alaska | dessert | E
    Baked_Alaska | dessert | F
    Baked_Alaska | dessert | G
    Baked_Alaska | dessert | H
    Baked_Alaska | dessert | I
    Baked_Alaska | dessert | J
    Baked_Alaska | dessert | K
    Baked_Alaska | dessert | L
    Baked_Alaska | dessert | M
    Baked_Alaska | dessert | N
    Baked_Alaska | dessert | O
    Baked_Alaska | dessert | P
    Baked_Alaska | dessert | Q
    Baked_Alaska | dessert | R
    Baked_Alaska | dessert | S
    Baked_Alaska | dessert | T
    Baked_Alaska | dessert | U
    Baked_Alaska | dessert | V
    B",10.767292022705078
1464,"
    Bakewell_Pudding | createdBy | Rutland_Arms,_Bakewell
    Bakewell_Pudding | mainIngredient | groundAlmond,jam,butter,eggs
    """"""
    def __init__(self, ontology_file, output_file):
        self.ontology = Ontology(ontology_file)
        self.output_file = output_file

    def run(self):
        with open(self.output_file, 'w') as f:
            for sentence in self.ontology.sentences:
                for triple in self.extract_triples(sentence):
                    f.write(triple + '\n')

    def extract_triples(self, sentence):
        triples = []
        for word in sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word].relations:
                    for concept in self.ontology.concepts[word].concepts:
                        triples.append(concept + '|' + relation + '|' + word)",10.668601989746094
1465,"
    Bakewell | inventedIn | Rutland Arms, Bakewell, in 1820
    Bakewell | mainIngredient | ground almond
    Bakewell | mainIngredient | jam
    Bakewell | mainIngredient | butter
    Bakewell | mainIngredient | eggs
    Bakewell | inventor | Rutland Arms, Bakewell, in 1820
    Bakewell | inventor | ground almond
    Bakewell | inventor | jam
    Bakewell | inventor | butter
    Bakewell | inventor | eggs
    Bakewell | inventor | Rutland Arms, Bakewell, in 1820
    Bakewell | inventedIn | Rutland Arms, Bakewell, in 1820
    Bakewell | inventedIn | Bakewell, in 1820
    Bakewell | inventedIn | Rutland Arms, in 1820
    Bakewell | inventedIn | Bakewell, in 1820
    Bakewell | inventedIn | Rutland Arms, in 1820
    Bakewell | inventedIn | Bakewell, in 1820
    Bakewell | inventedIn | Rutland Arms, in 1820
    B",10.696815252304077
1466,"
    Bakewell_tart | food | shortcrust_pastry
    Bakewell_tart | food | Bakewell_pudding
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        triple.append(relation)
        return triple


class Ontology:
    """"""
    An ontology is a collection of concepts and their relations.
    """"""
    def __init__(self, concepts, relations):
        self",10.671841621398926
1467,"
    bakewell_pudding | variantOf | bakewell_tart
    bakewell_tart | madeWith | shortcrust_pastry

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity in entities:
        for relation in relations:
            triples.append(entity +'|'+ relation +'|'+ ontology[relation])
    
    # Return the triples
    return triples

def extract_triples_from_sentence_with_relations(sentence, ontology):
    """"""
    Given the following ontology, examples and sentences, please extract the triples from the sentence according to the 
    relations",10.66679835319519
1468,"
    bakewell_pudding | food | bakewell_tart
    bakewell_tart | food | shortcrust_pastry

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology and triples from the",10.726943492889404
1469,"
    Lemon | partOfGenus | Citrus
    Lemon | ingredient | Bandeja paisa

    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the concepts.
    """"""
    def __init__(self, relations, concepts):
        self.relations = relations
        self.concepts = concepts


class Concept:
    """"""
    This class represents a concept. It contains the name and the properties.
    """"""
    def __init__(self, name, properties):
        self.name = name
        self.properties = properties


class Rel",10.869485855102539
1470,"
    Lemon | genus | citrus
    Lemon | ingredient | Bandeja paisa
    """"""
    
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences
        self.triples = []
        self.relations = []
        self.entity_1 = []
        self.entity_2 = []
        self.relation = []
        self.relation_type = []
        self.relation_type_id = []
        self.relation_type_name = []
        self.relation_type_description = []
        self.relation_type_synonyms = []
        self.relation_type_examples = []
        self.relation_type_synonyms_examples = []
        self.relation_type_examples_description = []
        self.relation_type_examples_description_synonyms = []
        self.relation_type_examples_description_synonyms_examples = []
        self.relation_type_examples_description_synonyms_examples",10.760670185089111
1471,"
    Lemon | genus | citrus
    Lemon | ingredient | Bandeja paisa
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.695857286453247
1472,"
    Batchoy | food | Philippines
    Batchoy | ingredient | shrimp
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(i+1, len(entities)):
            for relation in relations:
                triples.append(entities[i] + "" | "" + relation + "" | "" + entities[j])
    
    # Return the triples
    return triples

# Test the function
sentence = ""Batchoy is a food in the Philippines and one of its ingredient is shrimp.""
print(extract_triples(ontology, sentence))
``",10.752826929092407
1473,"
    Batchoy | countryOfOrigin | Philippines
    Batchoy | mainIngredient | shrimp

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))

    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")

    return output


def extract_triples_from_sentence",10.803458213806152
1474,"
    Batchoy | country | Philippines
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output


# Function to extract the triples from the sentence according to the relations",10.761619567871094
1475,"
    Chinese Filipino | ethnicGroup | Philippines
    batchoy | traditionalDish | Philippines

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {ontology[triple[1]][triple[2]]}"")
    
    return output

",10.742367267608643
1476,"
    Chinese | Filipino | Philippines
    Chinese | Filipino | batchoy
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output


def extract_triples_from_",10.761559963226318
1477,"
    Batchoy | food | Philippines
    Chinese Filipino | ethnicGroup | Philippines

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the given output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output


def extract_triples_from",10.761236667633057
1478,"
    Beef_kway_teow | origin | Singapore
    Beef_kway_teow | language | Standard Chinese
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    ",10.75230360031128
1479,"
    Standard_Chinese_speaking | origin | Singapore
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf | beef_kway_teow
    Standard_Chinese_speaking | originOf |",10.738353252410889
1480,"
    Beef_kway_teow | food | Singapore
    Tony_Tan | person | Singapore
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReferenceNumber'):
",10.750519752502441
1481,"
    Tony_Tan | leader | Singapore
    Singapore | origin | Beef_kway_teow
    
    """"""
    
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences
        self.triples = []
        self.relations = []
        self.entity_1 = []
        self.entity_2 = []
        self.relation = []
        self.entity_1_type = []
        self.entity_2_type = []
        self.relation_type = []
        self.entity_1_id = []
        self.entity_2_id = []
        self.relation_id = []
        self.entity_1_id_type = []
        self.entity_2_id_type = []
        self.relation_id_type = []
        self.entity_1_id_type_id = []
        self.entity_2_id_type_id = []
        self.relation_id_type_id = []
        self",10.742228984832764
1482,"
    Beef_kway_teow | origin | Singapore
    Beef_kway_teow | leader | Tony_Tan
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
",10.739068031311035
1483,"
    Bhajji | origin | India
    SumitraMahajan | leader | Bhajji
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        if relation == '1stRunwaySurfaceType':
            triple.append(example)
            triple.append(relation)
            triple.append(sentence)
        elif relation == '2ndRunwaySurfaceType':
            triple.append(example)
            triple.append(relation)
            triple.append(sentence)
        elif relation ==",10.745530843734741
1484,"
    Bhajji | country | India
    Bhajji | leader | Sumitra Mahajan
    Bhajji | countryOrigin | India
    Bhajji | leaderOrigin | Sumitra Mahajan
    Bhajji | countryServed | India
    Bhajji | leaderServed | Sumitra Mahajan
    Bhajji | country | India
    Bhajji | leader | Sumitra Mahajan
    Bhajji | countryOrigin | India
    Bhajji | leaderOrigin | Sumitra Mahajan
    Bhajji | countryServed | India
    Bhajji | leaderServed | Sumitra Mahajan
    Bhajji | country | India
    Bhajji | leader | Sumitra Mahajan
    Bhajji | countryOrigin | India
    Bhajji | leaderOrigin | Sumitra Mahajan
    Bhajji | countryServed | India
    Bhajji | leaderServed | Sumitra Mahajan
    Bhajji | country | India
    B",10.741068601608276
1485,"
    Bhajji | origin | India
    SumitraMahajan | leader | India

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more triples from the same sentence
    # TODO: Add more triples from different sentences
    # TODO: Add more triples from the same sentence with different relations
    # TODO: Add more triples from different sentences with different relations
    # TODO: Add more triples from the same sentence with different relations and different entities
    # TODO: Add more triples from different sentences with different relations and different entities
    # TODO: Add more triples from the same sentence with different relations and different entities and different entities
    # TODO: Add more triples from different sentences with different relations and different entities and different entities
    # TODO: Add more triples from the same sentence with different relations and different entities and different entities and different entities
    # TODO: Add more triples from different sentences with different",10.822973012924194
1486,"
    Bhajji | gramFlour | dish
    Bhajji | similarTo | pakora
    Bhajji | similarTo | otherFritters
    Bhajji | madeFrom | gramFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom | wheatOrCornFlour
    Bhajji | madeFrom",10.743329524993896
1487,"
    gram_flour | ingredient | Bhajji
    gram_flour | ingredient | pakora
    gram_flour | ingredient | fritters
    gram_flour | ingredient | wheat
    gram_flour | ingredient | corn
    gram_flour | ingredient | Bhajji
    gram_flour | ingredient | pakora
    gram_flour | ingredient | fritters
    gram_flour | ingredient | wheat
    gram_flour | ingredient | corn
    gram_flour | Bhajji | pakora
    gram_flour | Bhajji | fritters
    gram_flour | Bhajji | wheat
    gram_flour | Bhajji | corn
    gram_flour | pakora | fritters
    gram_flour | pakora | wheat
    gram_flour | pakora | corn
    gram_flour | fritters | wheat
    gram_flour | fritters | corn
    gram_flour | wheat | corn
    gram_flour | wheat | Bhajji
    gram_flour | wheat",10.741384744644165
1488,"
    sweet_potato | ingredient | Binignit
    banana | ingredient | Binignit
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return",10.740883588790894
1489,"
    Banana | mainIngredient | Binignit
    Banana | mainIngredient | sweetPotato
    sweetPotato | mainIngredient | Binignit
    sweetPotato | mainIngredient | sweetPotato

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more triples with multiple relations
    # TODO: Add more triples with multiple entities
    # TODO: Add more triples with multiple entities and relations
    # TODO: Add more triples with multiple entities and relations with different relations
    # TODO: Add more triples with multiple entities and relations with different relations and different entities
    # TODO: Add more triples with multiple entities and relations with different relations and different entities and different relations
    # TODO: Add more triples with multiple entities and relations with different relations and different entities and different relations and different entities
    # TODO: Add more triples with multiple entities and relations with different relations and different entities",10.748325109481812
1490,"
    Binignit | mainIngredient | banana
    Binignit | mainIngredient | sweet potatoes

    """"""
    def __init__(self, ontology_file, output_file):
        self.ontology = Ontology(ontology_file)
        self.output_file = output_file

    def run(self):
        with open(self.output_file, 'w') as f:
            for sentence in self.ontology.sentences:
                for triple in self.extract_triples(sentence):
                    f.write(triple + '\n')

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--ontology', type=str, required=True, help='Path to the ontology file')
    parser.add_argument('--output', type=str, required=True, help='Path to the output file')
    args = parser.parse_args()

    ontology_file = args.ontology
    output_file = args.output

    ontology = Ontology",10.730247497558594
1491,"
    sago | mainIngredient | binignit
    sago | mainIngredient | sweet potatoes
    sweet potatoes | mainIngredient | binignit
    sweet potatoes | mainIngredient | sago

    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        if len(triple) == 3:
            triple.append(relation)
        return triple


class Ontology:
    """"""
    This class represents",10.735400199890137
1492,"
    sweetPotato | ingredient | Binignit
    sago | ingredient | Binignit
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {ontology[triple[1]][triple[2]]}"")
    
    return",10.7357337474823
1493,"
    sweet_potato | food | binignit
    sago | food | binignit
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return",10.744614839553833
1494,"
    sweet_potatoes | food | binignit

    """"""
    def __init__(self, ontology_file, output_file):
        self.ontology = Ontology(ontology_file)
        self.output_file = output_file

    def run(self):
        with open(self.output_file, 'w') as f:
            for sentence in self.ontology.sentences:
                for triple in sentence.triples:
                    f.write(triple.to_output_format() + '\n')

class Ontology:
    """"""
    This class represents an ontology. It contains a list of sentences and a list of triples.
    """"""
    def __init__(self, ontology_file):
        self.sentences = []
        self.triples = []
        with open(ontology_file, 'r') as f:
            for line in f:
                if line.startswith('#'):
                    continue
                sentence = Sentence(line)
                self.sentences.append(sentence)
                for triple in sentence",10.766296863555908
1495,"
    sweet_potato | belongsTo | flowering_plants
    sweet_potato | isAnIngredientOf | Binignit

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2",10.750642538070679
1496,"
    sweet_potatoes | mainIngredient | binignit
    sweet_potatoes | partOf | orderOf | Solanales

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    ",10.824745655059814
1497,"
    sweet_potatoes | plant_order | Solanales
    sweet_potatoes | main_ingredient | binignit
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(len(relations)):
            triples.append(entities[i] +'|'+ relations[j] +'|'+ entities[i])
    
    # Return the triples
    return triples


def extract_triples_from_sentence_with_relations(sentence, ontology):
    """"""
    Given the following ontology, examples and sentences, please extract the",10.735047101974487
1498,"
    sweet_potato | order | Solanales
    sweet_potato | mainIngredient | binignit
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        triple.append(relation)
        return triple

class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the concepts.
    """"""
    def __init__(self, relations, concepts):
        self.relations =",10.73383903503418
1499,"
    Bionico | dessert | granola
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        if len(triple) == 3:
            triple.append(relation)
        return triple


class Ontology:
    """"""
    This class represents an ontology. It contains the relations and the concepts.
    """"""
    def __init__(self, relations, concepts):
        self.relations = relations
        self.concept",10.719797849655151
1500,"
    Bionico | dessert | granola
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(example +'|'+ relation +'|'+ sentence)
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the following attributes:
    - relations: a list of relations
    - concepts: a dictionary of concepts, where the key is the concept name and the value is a list of concepts that are 
    related to the key concept
    - concepts_by_name: a dictionary of concepts, where the key is the concept name and the value is the concept object
    - concepts_by_id: a dictionary of concepts, where the key is the concept id and the value is",10.718713283538818
1501,"
    Bionico | dessert | granola

    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])

    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    triples.append(word +'|'+ relation +'|'+ word)

    # Remove duplicates from the list of triples
    triples = list(set(triples))

    # Return the list of triples
    return triples

def get_triples_from_sentence_with_relations(sentences, ontology):
    """"""
    Given the following ontology, examples and sentences, please extract the triples from the sentence according",10.73017954826355
1502,"
    Bionico | dessert | honey
    """"""
    
    # Get the triples from the sentence
    triples = get_triples(sentence, ontology)

    # Filter the triples to only include the ones in the output format
    triples = filter_triples(triples, ontology)

    # Print the triples
    for triple in triples:
        print(triple)

if __name__ == ""__main__"":
    main()",4.83561897277832
1503,"
    Honey | variation | Bionico
    Bionico | dessert | Honey
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.486060380935669
1504,"
    Honey | food | bionico
    bionico | food | dessertDish
    """"""
    def __init__(self, ontology, examples, output_format):
        self.ontology = ontology
        self.examples = examples
        self.output_format = output_format

    def extract_triples(self, sentence):
        """"""
        Extract triples from the sentence according to the relations in the ontology.
        In the output, only include the triples in the given output format

        Input: sentence
        Output: triples in the given output format
        """"""
        triples = []
        for example in self.examples:
            for relation in self.ontology.relations:
                if relation in example:
                    triples.append(example[relation])
        return triples

    def extract_triples_from_sentence(self, sentence):
        """"""
        Extract triples from the sentence according to the relations in the ontology.
        In the output, only include the triples in the given output format

        Input: sentence
        Output: triples in the",10.735441446304321
1505,"
    Bionico | food | ice cream
    ice cream | food | dessert
    dessert | food | course
    """"""
    def __init__(self, ontology, examples, sentence):
        self.ontology = ontology
        self.examples = examples
        self.sentence = sentence
        self.triples = []
        self.entity_1 = None
        self.relation = None
        self.entity_2 = None

    def extract_triples(self):
        """"""
        Extract triples from the sentence according to the relations in the ontology.
        """"""
        for example in self.examples:
            for relation in self.ontology.relations:
                if relation in example:
                    self.entity_1 = example[relation][0]
                    self.relation = relation
                    self.entity_2 = example[relation][1]
                    self.triples.append((self.entity_1, self.relation, self.entity_2))
                    break

    def output_triples(self):
        """"""
        Output the triples in the given output format.
        ",10.714647769927979
1506,"
    Bionico | food | ice cream
    ice cream | food | Bionico
    
    """"""
    
    def __init__(self, ontology, examples, output_format):
        self.ontology = ontology
        self.examples = examples
        self.output_format = output_format
        self.triples = []
        self.triple_dict = {}
        self.triple_dict_reverse = {}
        self.triple_dict_reverse_reverse = {}
        self.triple_dict_reverse_reverse_reverse = {}
        self.triple_dict_reverse_reverse_reverse_reverse = {}
        self.triple_dict_reverse_reverse_reverse_reverse_reverse = {}
        self.triple_dict_reverse_reverse_reverse_reverse_reverse_reverse = {}
        self.triple_dict_reverse_reverse_reverse_reverse_reverse_reverse_reverse = {}
        self.triple_dict_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = {}
        self.triple_dict_reverse_reverse_",10.735939979553223
1507,"
    Bionico | food | Ice_Cream
    Ice_Cream | food | Bionico
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReferenceNumber'):",10.72669243812561
1508,"
    Batagor | variation | Siomay
    Siomay | variation | Batagor
    Siomay | variation | peanutSauce
    Batagor | variation | peanutSauce

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {",10.811269760131836
1509,"
    Peanut_sauce | ingredient | Siomay
    Peanut_sauce | ingredient | Batagor
    Siomay | dish | Peanut_sauce
    Batagor | dish | Peanut_sauce

    """"""
    def __init__(self, ontology, examples, sentence):
        self.ontology = ontology
        self.examples = examples
        self.sentence = sentence
        self.triples = []
        self.entity_1 = None
        self.relation = None
        self.entity_2 = None

    def extract_triples(self):
        """"""
        Extract triples from the sentence according to the relations in the ontology.
        """"""
        for example in self.examples:
            for relation in self.ontology.relations:
                if relation in example:
                    self.entity_1 = example[relation][0]
                    self.relation = relation
                    self.entity_2 = example[relation][1]
                    self.triples.append((self.entity_1, self.relation, self.entity_2))",10.720112562179565
1510,"
    Batagor | variation | Siomay
    Siomay | dish | Batagor
    Siomay | ingredient | peanut sauce
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(example +'|'+ relation +'|'+ sentence)
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the concepts.
    """"""
    def __init__(self, relations, concepts):
        self.relations = relations
        self.concepts = concepts


def load_ontology(file_path):
    """"""
    This function loads the ontology from the given file.
    """"""
    with open(file_path, 'r",10.735567569732666
1511,"
    A-Rosa_Luna | length | 125800.0
    A-Rosa_Luna | christenedOn | April 7th, 2005
    """"""
    # TODO: add more test cases
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more ontology
    # TODO: add more triples
    # TODO: add more triples with different relations
    # TODO: add more triples with different entities
    # TODO: add more triples with different entities and relations
    # TODO: add more triples with different entities and relations and different relations
    # TODO: add more triples with different entities and relations and different relations and different entities
    # TODO: add more triples with different entities and relations and different relations and different entities and different relations
    # TODO: add more triples with different entities and relations and different relations and different entities and different relations and different entities
    # TODO: add more triples with different entities and relations and different relations and different entities and different relations and different entities and different",10.724957466125488
1512,"
    A-Rosa_Luna | christenedOn | 7th_of_April_2005
    A-Rosa_Luna | length | 125800.0
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.",10.742652177810669
1513,"
    A-Rosa_Luna | length | 125800.0
    A-Rosa_Luna | christenedOn | 7th_of_April_2005
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('_')[0] in entities:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        entity1 = relation.split('_')[0]
        entity2 = relation.split('_')[1]
        triple = entity1 +'|'+ relation +'|'+ entity2
        triples.append(triple)
    
    # Return the list of triples
    return triples

# Test",10.738902807235718
1514,"
    A-Rosa_Luna | cruiseShip | 125800.0
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(len(relations)):
            triples.append(entities[i] +'|'+ relations[j] +'|'+ entities[i])
    
    # Return the triples in the given output format
    return triples

# Test the function
sentence = ""The A-Rosa Luna is 125800.0 millimetres in length and classed as a cruise ship.""
print(extract_triples(ontology,",10.71658968925476
1515,"
    A-Rosa_Luna | cruiseShip | 125.8
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities and different entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and",10.717465162277222
1516,"
    A-Rosa_Luna | cruiseShip | 125800.0
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReferenceNumber'):
            relations.append(",10.732850551605225
1517,"
    AIDAluna | operatedBy | AIDA Cruises
    AIDA Cruises | location | Rostock

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))

    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")

    return output


def extract_triples_from_",10.73540210723877
1518,"
    AIDA_Cruises | operator | AIDAluna
    AIDA_Cruises | location | Rostock
    AIDA_Cruises | operator | AIDA_Cruises
    AIDA_Cruises | location | AIDA_Cruises
    AIDA_Cruises | operator | AIDA_Cruises
    AIDA_Cruises | location | AIDA_Cruises
    AIDA_Cruises | operator | AIDA_Cruises
    AIDA_Cruises | location | AIDA_Cruises
    AIDA_Cruises | operator | AIDA_Cruises
    AIDA_Cruises | location | AIDA_Cruises
    AIDA_Cruises | operator | AIDA_Cruises
    AIDA_Cruises | location | AIDA_Cruises
    AIDA_Cruises | operator | AIDA_Cruises
    AIDA_Cruises | location | AIDA_Cruises
    AIDA_Cruises | operator | AIDA_Cruises
    AIDA_Cruises | location | AIDA_Cruises
    AIDA_Cruises | operator | AIDA_Cruises
    AIDA_",10.732147455215454
1519,"
    AIDAluna | operatedBy | AIDA Cruises
    AIDAluna | from | Rostock

    """"""
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add",10.825624704360962
1520,"
    AIDAstella | length | 253.26m
    AIDAstella | launchDate | March 16th 2013
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReference",10.76059889793396
1521,"
    AIDAstella | christened | 16th_of_March,_2013
    AIDAstella | length | 253260.0
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")",10.728116989135742
1522,"
    AIDAstella | length | 253260.0
    AIDAstella | christenedOn | 2013-03-16
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
",10.733444213867188
1523,"
    Montreal_Locomotive_Works | builder | ALCO_RS_3
    Montreal_Locomotive_Works | builder | four_stroke_engine
    Montreal_Locomotive_Works | builder | ALCO_RS_3
    Montreal_Locomotive_Works | builder | four_stroke_engine
    Montreal_Locomotive_Works | builder | ALCO_RS_3
    Montreal_Locomotive_Works | builder | four_stroke_engine
    Montreal_Locomotive_Works | builder | ALCO_RS_3
    Montreal_Locomotive_Works | builder | four_stroke_engine
    Montreal_Locomotive_Works | builder | ALCO_RS_3
    Montreal_Locomotive_Works | builder | four_stroke_engine
    Montreal_Locomotive_Works | builder | ALCO_RS_3
    Montreal_Locomotive_Works | builder | four_stroke_engine
    Montreal_Locomotive_Works | builder | ALCO_RS_3
    Montreal_Locomotive",10.741161346435547
1524,"
    ALCO_RS_3 | builtBy | Montreal_Locomotive_Works
    ALCO_RS_3 | engineType | four-stroke
    ALCO_RS_3 | engineManufacturer | Montreal_Locomotive_Works
    ALCO_RS_3 | engineModel | RS-3
    ALCO_RS_3 | engineYear | unknown
    ALCO_RS_3 | engineWeight | unknown
    ALCO_RS_3 | engineLength | unknown
    ALCO_RS_3 | engineWidth | unknown
    ALCO_RS_3 | engineHeight | unknown
    ALCO_RS_3 | engineWheelbase | unknown
    ALCO_RS_3 | engineTires | unknown
    ALCO_RS_3 | engineNumber | unknown
    ALCO_RS_3 | engineNumber | unknown
    ALCO_RS_3 | engineNumber | unknown
    ALCO_RS_3 | engineNumber | unknown
    ALCO_RS_3 | engineNumber | unknown
    ALCO_RS_3 | engineNumber | unknown
    ALCO_RS_3 | engineNumber | unknown
    AL",10.735255241394043
1525,"
    ALCO_RS_3 | engine | four-stroke
    ALCO_RS_3 | builtBy | MontrealLocomotiveWorks
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities and different entities and different entities and different entities
    # TOD",10.717023372650146
1526,"
    AlliantTechsystems | makes | ALV X-1
    AlliantTechsystems | produces | AgM-88 HARM

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO:",10.735772609710693
1527,"
    AGM-88_HARM | producedBy | Alliant_Techsystems
    AGM-88_HARM | manufacturer | Alliant_Techsystems
    AGM-88_HARM | ALV_X_1 | Alliant_Techsystems
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the concepts.
    """"""
    def __init__(self, relations, concepts):
        self.relations = relations
        self.concepts = concepts


class Concept:
    """"""
    This class represents a concept. It contains the name and the",10.744629621505737
1528,"
    AlliantTechsystems | manufacturer | ALV X-1
    AlliantTechsystems | manufacturer | AgM-88 HARM
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    ",10.729066371917725
1529,"
    Richard_A_Teague | employedBy | Chrysler
    Richard_A_Teague | designed | AMC_Matador

    """"""
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test",10.72533893585205
1530,"
    Richard_A_Teague | employee | Chrysler
    Richard_A_Teague | designer | AMC_Matador
    """"""
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more triples
    # TODO: add more tri",10.810199975967407
1531,"
    AMC_Matador | designedBy | Richard_A_Teague
    AMC_Matador | worksFor | Chrysler
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(example + "" | "" + relation + "" | "" + sentence)
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the entities.
    """"""
    def __init__(self, relations, entities):
        self.relations = relations
        self.entities = entities

    def get_relations(self):
        return self.relations

    def get_entities(self):
        return self.entities


class Example:
    """"""
    This class represents",10.735952615737915
1532,"
    Richard_A_Teague | designer | AMC_Matador
    Richard_A_Teague | worksFor | General_Motors
    Richard_A_Teague | designed | AMC_Matador
    """"""
    # TODO: add more test cases
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more test cases
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more test cases
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more test cases
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more test cases
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more test cases
    # TODO: add more relations
    #",10.731726884841919
1533,"
    Richard_Teague | worksFor | General_Motors
    Richard_Teague | designed | AMC_Matador

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))

    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")

    return output

# Test the function
sent",10.728171586990356
1534,"
    AMC_Matador | designedBy | Richard_A_Teague
    AMC_Matador | employedBy | General_Mills
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
",10.734504699707031
1535,"
    ARA_Veinticinco_de_Mayo | length | 192000.0
    ARA_Veinticinco_de_Mayo | country | Argentina
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more examples
    # TODO: Add more sentences with multiple relations
    # TODO: Add more sentences with multiple entities
    # TODO: Add more sentences with multiple relations and entities
    # TODO: Add more sentences with multiple relations and entities with different relations
    # TODO: Add more sentences with multiple relations and entities with different relations and entities
    # TODO: Add more sentences with multiple relations and entities with different relations and entities with different relations
    # TODO: Add more sentences with multiple relations and entities with different relations and entities with different relations and entities
    # TODO: Add more sentences with multiple relations and entities with different relations and entities with different relations and entities with different relations
    # TODO: Add more sentences with multiple",10.758210182189941
1536,"
    ARA_Veinticinco_de_Mayo | country | Argentina
    ARA_Veinticinco_de_Mayo | length | 192000
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimet",10.729129076004028
1537,"
    ARA_Veinticinco_de_Mayo | country | Argentina
    ARA_Veinticinco_de_Mayo | length | 192000
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimetres
    ARA_Veinticinco_de_Mayo | unit | millimet",10.746303081512451
1538,"
    Abarth | manufacturer | Abarth
    Abarth | designer | Gruppo Bertone
    Abarth | model | 1000 GT Coupe
    Abarth | year | unknown
    Abarth | origin | unknown
    Abarth | price | unknown
    Abarth | engine | unknown
    Abarth | transmission | unknown
    Abarth | topSpeed | unknown
    Abarth | weight | unknown
    Abarth | fuelType | unknown
    Abarth | fuelCapacity | unknown
    Abarth | fuelConsumption | unknown
    Abarth | fuelType | unknown
    Abarth | fuelCapacity | unknown
    Abarth | fuelConsumption | unknown
    Abarth | fuelType | unknown
    Abarth | fuelCapacity | unknown
    Abarth | fuelConsumption | unknown
    Abarth | fuelType | unknown
    Abarth | fuelCapacity | unknown
    Abarth | fuelConsumption | unknown
    Abarth | fuelType | unknown
    Abarth | fuelCapacity | unknown
    Abarth | fuelConsumption | unknown
    Abarth | fuelType | unknown
    Abarth | fuelCapacity | unknown
    Abarth",10.73073434829712
1539,"
    Abarth | manufacturer | Abarth
    Abarth | designer | Gruppo Bertone
    Abarth | model | 1000 GT Coupé
    Abarth | year | 1970
    Abarth | price | $10,000
    Abarth | engine | 1.6L
    Abarth | transmission | 5-speed manual
    Abarth | topSpeed | 180 km/h
    Abarth | fuelType | petrol
    Abarth | fuelType | diesel
    Abarth | fuelType | ethanol
    Abarth | fuelType | LPG
    Abarth | fuelType | natural gas
    Abarth | fuelType | hydrogen
    Abarth | fuelType | electricity
    Abarth | fuelType | hybrid
    Abarth | fuelType | biofuel
    Abarth | fuelType | hydrogen fuel cell
    Abarth | fuelType | solar
    Abarth | fuelType | nuclear
    Abarth | fuelType | hydrogen fuel cell
    Abarth | fuelType | biofuel
    Abarth | fuelType | hydrogen fuel cell
    Abarth | fuelType | solar
    Abarth | fuelType | nuclear
    Abarth | fuelType | hydrogen",10.743637561798096
1540,"
    Abarth | designCompany | Gruppo Bertone
    Abarth | manufacturer | Abarth
    Abarth | yearOfConstruction | 1960
    Abarth | yearOfManufacture | 1960
    Abarth | modelYears | 1960-1962
    Abarth | chassis | Alfa Romeo
    Abarth | engine | Alfa Romeo
    Abarth | transmission | Alfa Romeo
    Abarth | suspension | Alfa Romeo
    Abarth | brakes | Alfa Romeo
    Abarth | wheels | Alfa Romeo
    Abarth | bodyStyle | Coupé
    Abarth | bodyType | Coupé
    Abarth | bodyWidth | 2.0
    Abarth | bodyLength | 3.0
    Abarth | bodyHeight | 1.8
    Abarth | wheelbase | 2.0
    Abarth | track | 0.9
    Abarth | fuelType | Petrol
    Abarth | fuelCapacity | 12.0
    Abarth | fuelType | Petrol
    Abarth | fuelCapacity | 12.0
    Abarth | fuelType | Petrol
    Abarth | fuelCapacity | 12.0
    ",10.749916553497314
1541,"
    Honda | manufacturer | Acura TLX
    Honda | manufacturer | Honda J engine
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.660260915756226
1542,"
    Honda | makes | Acura TLX
    Acura TLX | has | Honda J engine type
    Honda | makes | Acura TLX
    Acura TLX | has | Honda J engine type
    Honda | makes | Acura TLX
    Acura TLX | has | Honda J engine type
    Honda | makes | Acura TLX
    Acura TLX | has | Honda J engine type
    Honda | makes | Acura TLX
    Acura TLX | has | Honda J engine type
    Honda | makes | Acura TLX
    Acura TLX | has | Honda J engine type
    Honda | makes | Acura TLX
    Acura TLX | has | Honda J engine type
    Honda | makes | Acura TLX
    Acura TLX | has | Honda J engine type
    Honda | makes | Acura TLX
    Acura TLX | has | Honda J engine type
    Honda | makes | Acura TLX
    Acura TLX | has | Honda J engine type
    Honda | makes | Acura TLX
    Acura TL",10.731239318847656
1543,"
    Honda | manufactured | Acura TLX
    Honda | has | Honda J type engine

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different entities and relations
    # TODO: Add more triples with different entities and relations and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different entities and different relations
    # TODO: Add more triples with different entities",10.737865209579468
1544,"
    Honda | manufacturer | Acura TLX
    Acura TLX | vehicle | Honda
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline-four engine
    Acura TLX | vehicle | Inline",10.740089654922485
1545,"
    Acura_TLX | engineType | Inline-four
    Acura_TLX | manufacturer | Honda

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
",10.730706214904785
1546,"
    Acura_TLX | 1stRunwaySurfaceType | asphalt
    Acura_TLX | 2ndRunwaySurfaceType | asphalt
    Acura_TLX | 3rdRunwaySurfaceType | asphalt
    Acura_TLX | 4thRunwaySurfaceType | asphalt
    Acura_TLX | LCCN_number | 0
    Acura_TLX | NationalRegisterOfHistoricPlacesReferenceNumber | 0
    Acura_TLX | abbreviation | Acura
    Acura_TLX | academicDiscipline | Mechanical Engineering
    Acura_TLX | academicStaffSize | 1
    Acura_TLX | activeYearsEndDate | 2019-03-31
    Acura_TLX | activeYearsStartDate | 2019-01-01
    Acura_TLX | activeYearsStartYear | 2019
    Acura_TLX | addedToTheNationalRegisterOfHistoricPlaces | 2019-03-31
    Acura_TLX | address | 
    Acura_TLX | affiliation | Honda Motor Co., Ltd.
    Acura_TLX | aircraftFighter | Ac",10.736276865005493
1547,"
    Aleksey_Chirikov | builtIn | Finland
    Sauli_Niinisto | leader | Finland
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    ",10.714776515960693
1548,"
    Aleksey_Chirikov | ship | icebreaker_ship
    Finland | country | led
    Sauli_Niinisto | person | president
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    triples.append((word, relation, word))
    
    # Filter out the triples that do not match the relations in the ontology
    filtered_triples = []
    for triple in triples:
        if triple[1] in ontology:
            filtered_triples.append(triple",10.734119653701782
1549,"
    Aleksey_Chirikov | icebreaker | Finland
    Aleksey_Chirikov | leader | Finland
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO:",10.730470895767212
1550,"
    Aleksey_Chirikov | ship | Arctech_Helsinki_shipyard
    Aleksey_Chirikov | ship | 21.2m
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation",10.726241111755371
1551,"
    Arctech_Helsinki_Shipyard | builtBy | Arctech Helsinki Shipyard
    Arctech_Helsinki_Shipyard | shipBeam | 21.2
    Arctech_Helsinki_Shipyard | shipClass | icebreaker
    Arctech_Helsinki_Shipyard | shipInService | Aleksey_Chirikov
    Arctech_Helsinki_Shipyard | shipOrdered | Aleksey_Chirikov
    Arctech_Helsinki_Shipyard | shipLaunch | Aleksey_Chirikov
    Arctech_Helsinki_Shipyard | shipName | Aleksey_Chirikov
    Arctech_Helsinki_Shipyard | shipOrderedBy | Arctech_Helsinki_Shipyard
    Arctech_Helsinki_Shipyard | shipType | icebreaker
    Arctech_Helsinki_Shipyard | shipOrderedByBy | Arctech_Helsinki_Shipyard
    Arctech_Helsinki_Shipyard | shipOrderedByByBy | Arctech",10.745970010757446
1552,"
    Arctech_Helsinki_Shipyard | builtBy | Arctech_Helsinki_Shipyard
    Arctech_Helsinki_Shipyard | shipBeam | 21.2
    Arctech_Helsinki_Shipyard | shipClass | icebreaker
    Arctech_Helsinki_Shipyard | shipInService | Aleksey_Chirikov
    Arctech_Helsinki_Shipyard | shipLaunch | Aleksey_Chirikov
    Arctech_Helsinki_Shipyard | shipOrdered | Aleksey_Chirikov
    Arctech_Helsinki_Shipyard | shipName | Aleksey_Chirikov
    Arctech_Helsinki_Shipyard | shipType | icebreaker
    Arctech_Helsinki_Shipyard | shipLength | 21.2
    Arctech_Helsinki_Shipyard | shipWidth | 9.2
    Arctech_Helsinki_Shipyard | shipHeight | 12.2
    Arctech_Helsinki_Shipyard | shipDepth | 4.2",10.751570701599121
1553,"
    Alfa_Romeo_164 | 1stRunwaySurfaceType | asphalt
    Alfa_Romeo_164 | 2ndRunwaySurfaceType | asphalt
    Alfa_Romeo_164 | 3rdRunwaySurfaceType | asphalt
    Alfa_Romeo_164 | 4thRunwaySurfaceType | asphalt
    Alfa_Romeo_164 | LCCN_number | 0000097747
    Alfa_Romeo_164 | NationalRegisterOfHistoricPlacesReferenceNumber | 0000097747
    Alfa_Romeo_164 | abbreviation | Alfa Romeo
    Alfa_Romeo_164 | academicDiscipline | Automotive Engineering
    Alfa_Romeo_164 | academicStaffSize | 1
    Alfa_Romeo_164 | activeYearsEndDate | 2020-01-01
    Alfa_Romeo_164 | activeYearsStartDate | 2020-01-01
    Alfa_Romeo_164 | activeYearsStartYear | 2020
    Alfa_",10.8051438331604
1554,"
    Alfa_Romeo_164 | 1stRunwaySurfaceType | asphalt
    Alfa_Romeo_164 | 2ndRunwaySurfaceType | asphalt
    Alfa_Romeo_164 | 3rdRunwaySurfaceType | asphalt
    Alfa_Romeo_164 | 4thRunwaySurfaceType | asphalt
    Alfa_Romeo_164 | LCCN_number | 0000093468
    Alfa_Romeo_164 | NationalRegisterOfHistoricPlacesReferenceNumber | 0000093468
    Alfa_Romeo_164 | abbreviation | Alfa Romeo
    Alfa_Romeo_164 | academicDiscipline | Automotive Engineering
    Alfa_Romeo_164 | academicStaffSize | 1
    Alfa_Romeo_164 | activeYearsEndDate | 2020-01-01
    Alfa_Romeo_164 | activeYearsStartDate | 2020-01-01
    Alfa_Romeo_164 | activeYearsStartYear | 2020
    Alfa_",10.753148317337036
1555,"
    Alfa_Romeo_164 | assembled | Milan
    Alfa_Romeo_164 | similarMeansOfTransport | Fiat_Croma
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])

    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        relations.append(concept['name'])

    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    triples.append((word, relation, word))

    # Filter out the triples that do not match the relations in the ontology
    filtered_triples = []
    for triple in triples:
        if triple[1] in ontology:
            filtered_triples.append(triple)

    # Format the output as a list of strings
    ",10.603185415267944
1556,"
    Humphrys | location | Deptford
    Tennant | location | Deptford
    Dykes | location | Deptford
    Alhambra | location | Deptford
    Alhambra | power | Humphrys, Tennant and Dykes
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(i+1, len(entities)):
            for relation in relations:
                triples.append(entities[i] + "" | "" + relation + "" | "" + entities[j])
    
    # Return the triples
    return triples


def extract_triples",10.660357236862183
1557,"
    Humphrys | department | Deptford
    Humphrys | company | Tennant & Dykes
    Humphrys | company | Alhambra
    Tennant & Dykes | company | Humphrys
    Tennant & Dykes | company | Alhambra
    Alhambra | company | Tennant & Dykes
    Alhambra | company | Humphrys
    Alhambra | company | engine
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Alhambra | engine | one
    Al",10.745974779129028
1558,"
    Alhambra | powerSource | Humphrys, Tennant and Dykes engine
    Alhambra | location | Deptford

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test",10.743038892745972
1559,"
    Alhambra | launchDate | 1855-05-31
    Alhambra | beam | 8.3
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(i+1, len(entities)):
            for relation in relations:
                triples.append(entities[i] +'|'+ relation +'|'+ entities[j])
    
    # Return the triples
    return triples

",9.355645656585693
1560,"
    ship | 1stRunwaySurfaceType | 8.3m
    ship | 2ndRunwaySurfaceType | 8.3m
    ship | 3rdRunwaySurfaceType | 8.3m
    ship | 4thRunwaySurfaceType | 8.3m
    ship | LCCN_number | 1855
    ship | NationalRegisterOfHistoricPlacesReferenceNumber | 1855
    ship | abbreviation | ship
    ship | academicDiscipline | engineering
    ship | academicStaffSize | 1
    ship | activeYearsEndDate | 1855
    ship | activeYearsStartDate | 1855
    ship | activeYearsStartYear | 1855
    ship | addedToTheNationalRegisterOfHistoricPlaces | 1855
    ship | address | Alhambra
    ship | affiliation | University of California, Los Angeles
    ship | aircraftFighter | ship
    ship | almaMater | University of California, Los Angeles
    ship | alternativeName | ship
    ship | anthem | 
    ship | apoapsis | 
    ship | architect | 
    ship | architecturalStyle | 
    ship",10.73047685623169
1561,"
    Alhambra | shipBeam | 8.3m
    Alhambra | launchDate | 1955-05-31
    Alhambra | shipLaunch | 1955-05-31
    Alhambra | shipOrdered | 1955-05-31
    Alhambra | shipInService | 1955-05-31
    Alhambra | shipLaunch | 1955-05-31
    Alhambra | shipOrdered | 1955-05-31
    Alhambra | shipInService | 1955-05-31
    Alhambra | shipLaunch | 1955-05-31
    Alhambra | shipOrdered | 1955-05-31
    Alhambra | shipInService | 1955-05-31
    Alhambra | shipLaunch | 1955-05-31
    Alhambra | shipOrdered | 1955-05-31
    Alhambra | shipInService | 1955-05-31
    Alhambra | shipLaunch | 1955-05-31
    Alhambra | shipOrdered | 1955-05-31
    Alhambra | shipInService | 1955-05-31
    Alhambra | shipLaunch",10.757926940917969
1562,"
    Alvis_Speed_25 | engine | 4387.00 cc
    Alvis_Speed_25 | transmission | single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints, spiral bevel fully floating back axle
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with",10.754269361495972
1563,"
    Alvis_Speed_25 | engine | 4387
    Alvis_Speed_25 | transmission | single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints and spiral bevel fully floating back axle
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate over the words and extract the triples
    for i in range(len(words)):
        # Check if the word is a relation
        if words[i] in relations:
            # Get the entity 1 and entity 2
            entity1 = words[i-1]
            entity2 = words[i+1]
            
            # Check if the entities are already in the dictionary
            if entity1 in triples:
                triples[entity1].append((entity2, words[i]))
            else:
                triples[entity1] = [(entity2, words[i])]
    
    # Convert the dictionary",10.766162633895874
1564,"
    Alvis_Speed_25 | engine | 4387.0
    Alvis_Speed_25 | transmission | single plate clutch, separate 4-speed gearbox all-silent and all-syncromesh, centre change lever, open tubular propellor shaft with metal joints and spiral bevel fully floating back axle
    """"""
    def __init__(self, ontology_file, sentence):
        self.ontology = Ontology(ontology_file)
        self.sentence = sentence
        self.triples = []

    def extract_triples(self):
        for word in self.sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word].relations:
                    if relation in self.ontology.concepts:
                        for concept in self.ontology.concepts[relation].concepts:
                            if concept in self.ontology.concepts:
                                self.triples.append((word, relation, concept))
        return self.triples


def main():
    ontology_file = sys.argv[1]
",10.849215745925903
1565,"
    AMC_Matador | successor | Eagle
    AMC_Matador | manufacturer | American Motors
    AMC_Matador | modelYear | 1962
    AMC_Matador | productionEndYear | 1969
    AMC_Matador | yearOfConstruction | 1962
    AMC_Matador | yearInSpace | 1969
    AMC_Matador | yearOfLaunch | 1962
    AMC_Matador | yearOfFirstFlight | 1962
    AMC_Matador | yearOfFirstPublication | 1962
    AMC_Matador | yearOfInauguration | 1962
    AMC_Matador | yearOfRetirement | 1969
    AMC_Matador | yearOfDeath | 1969
    AMC_Matador | yearOfBirth | 1930
    AMC_Matador | birthPlace | Glen Ridge, New Jersey
    AMC_Matador | birthDate | 1930-01-20
    AMC_Matador | nationality | United States
    AMC_Matador | selectedByNasa | 1963
    AMC_Matador | mission | Apollo 11
    AMC_Matador | almaMater | Massachusetts Institute",10.748786926269531
1566,"
    American_Motors_Co | manufacturer | AMC_Matador
    American_Motors_Co | succeededBy | Eagle
    """"""
    def __init__(self, ontology_file, sentence):
        self.ontology = Ontology(ontology_file)
        self.sentence = sentence

    def extract_triples(self):
        triples = []
        for word in self.sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.relations:
                    if relation in self.ontology.concepts[word]:
                        triples.append((word, relation, self.ontology.concepts[word][relation]))
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the concepts and relations.
    """"""
    def __init__(self, ontology_file):
        self.concepts = {}
        self.relations = []
        with open(ontology_file, 'r') as f:
            for line in f:
                if line.startswith('",10.770032405853271
1567,"
    American_Motors_Co | succeededBy | Eagle
    American_Motors_Co | manufacturer | AMC_Matador
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return",10.7616548538208
1568,"
    Antares | rocket | comparable
    Antares | rocket | Delta II
    Antares | rocket | Mid-Atlantic Regional Spaceport Launch Pad 0
    Antares | rocket | LaunchPad 0
    Antares | rocket | Mid-Atlantic Regional Spaceport
    Antares | rocket | Spaceport
    Antares | rocket | Launch
    Antares | rocket | Pad
    Antares | rocket | 0
    Antares | rocket | Mid-Atlantic
    Antares | rocket | Regional
    Antares | rocket | Spaceport
    Antares | rocket | LaunchPad
    Antares | rocket | 0
    Antares | rocket | Mid-Atlantic
    Antares | rocket | Regional
    Antares | rocket | Spaceport
    Antares | rocket | LaunchPad
    Antares | rocket | 0
    Antares | rocket | Mid-Atlantic
    Antares | rocket | Regional
    Antares | rocket | Spaceport
    Antares | rocket | LaunchPad
    Antares | rocket | 0
    Antares | rocket | Mid-Atlantic
    Antares | rocket | Regional
    Antares | rocket | Spaceport
    Antares | rocket | Launch",10.758453369140625
1569,"
    Antares | rocket | Delta II
    Antares | rocket | Mid-Atlantic Regional Spaceport Launch Pad 0
    Antares | rocket | LaunchPad 0
    Antares | rocket | Delta II
    Antares | rocket | Mid-Atlantic Regional Spaceport Launch Pad
    Antares | rocket | LaunchPad
    Antares | rocket | Delta II
    Antares | rocket | Mid-Atlantic Regional Spaceport Launch Pad
    Antares | rocket | LaunchPad 0
    Antares | rocket | Delta II
    Antares | rocket | Mid-Atlantic Regional Spaceport Launch Pad
    Antares | rocket | LaunchPad 0
    Antares | rocket | Delta II
    Antares | rocket | Mid-Atlantic Regional Spaceport Launch Pad
    Antares | rocket | LaunchPad 0
    Antares | rocket | Delta II
    Antares | rocket | Mid-Atlantic Regional Spaceport Launch Pad
    Antares | rocket | LaunchPad 0
    Antares | rocket | Delta II
    Antares | rocket | Mid-Atlantic Regional Spaceport Launch Pad
    Antares | rocket | LaunchPad 0
    Antares | rocket | Delta II
    Antares | rocket | Mid-",10.754942655563354
1570,"
    Antares | rocket | Delta II
    Antares | rocket | Mid-AtlanticRegionalSpaceportLaunchPad0
    Antares | rocket | Delta II
    Antares | rocket | Mid-AtlanticRegionalSpaceportLaunchPad0
    Antares | rocket | Delta II
    Antares | rocket | Mid-AtlanticRegionalSpaceportLaunchPad0
    Antares | rocket | Delta II
    Antares | rocket | Mid-AtlanticRegionalSpaceportLaunchPad0
    Antares | rocket | Delta II
    Antares | rocket | Mid-AtlanticRegionalSpaceportLaunchPad0
    Antares | rocket | Delta II
    Antares | rocket | Mid-AtlanticRegionalSpaceportLaunchPad0
    Antares | rocket | Delta II
    Antares | rocket | Mid-AtlanticRegionalSpaceportLaunchPad0
    Antares | rocket | Delta II
    Antares | rocket | Mid-AtlanticRegionalSpaceportLaunchPad0
    Antares | rocket | Delta II
    Antares | rocket | Mid-AtlanticRegionalSpaceportLaunchPad0
    Antares | rocket | Delta II
    Antares",10.764497995376587
1571,"
    Antares | launchSite | Mid-Atlantic Regional Spaceport
    Antares | firstVoyageDate | 2014-01-09
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from",10.767041206359863
1572,"
    Antares | rocket | maidenFlight
    Antares | rocket | Mid-AtlanticRegionalSpaceport
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January9th
    Antares | rocket | 2014
    Antares | rocket | January",10.76371169090271
1573,"
    Antares | launchSite | Mid-Atlantic Regional Spaceport
    Antares | launchDate | 9 January 2014
    Antares | maidenFlight | True
    Antares | maidenFlightDate | 9 January 2014
    Antares | launchOrbit | Sun-synchronous
    Antares | launchOrbitPeriod | 90 minutes
    Antares | launchOrbitPeriodInMinutes | 5400
    Antares | launchOrbitPeriodInSeconds | 32400
    Antares | launchOrbitPeriodInHours | 150
    Antares | launchOrbitPeriodInDays | 0.5
    Antares | launchOrbitPeriodInWeeks | 0.0714
    Antares | launchOrbitPeriodInMonths | 0.0014
    Antares | launchOrbitPeriodInYears | 0.000001
    Antares | launchOrbitType | Sun-synchronous
    Antares | launchOrbitTypeInWords | Sun-synchronous orbit
    Antares | launchOrbitTypeInWordsInLowerCase | sun-synchronous orbit
    Antares | launchOrbitTypeInWordsInUpper",10.7138032913208
1574,"
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space
    Airbus_Group | parentCompany | Airbus_Defence_Space",10.738660097122192
1575,"
    Airbus_Group | parentCompany | Airbus_Defence_and_Space
    Airbus_Defence_and_Space | manufacturer | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | manufacturer | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | manufacturer | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | manufacturer | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | manufacturer | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | manufacturer | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | manufacturer | Airbus_Group
    Airbus_Defence_and_Space",10.818813562393188
1576,"
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | madeBy | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | madeBy | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | madeBy | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | madeBy | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | madeBy | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | madeBy | Airbus_Group
    Airbus_Defence_and_Space | parentCompany | Airbus_Group
    Airbus_Defence_and_Space | madeBy | Airbus_Group
    Airbus",10.725975751876831
1577,"
    Aston_Martin_V8 | succeeded | Aston_Martin_Virage
    Aston_Martin_Virage | relatedMeansOfTransport | Aston_Martin_RHAM/1
    Aston_Martin_Virage | relatedMeansOfTransport | Aston_Martin_V8
    Aston_Martin_Virage | relatedMeansOfTransport | Aston_Martin_RHAM/1
    Aston_Martin_Virage | relatedMeansOfTransport | Aston_Martin_V8
    Aston_Martin_Virage | relatedMeansOfTransport | Aston_Martin_RHAM/1
    Aston_Martin_Virage | relatedMeansOfTransport | Aston_Martin_V8
    Aston_Martin_Virage | relatedMeansOfTransport | Aston_Martin_RHAM/1
    Aston_Martin_Virage | relatedMeansOfTransport | Aston_Martin_V8
    Aston_Martin_Virage | relatedMeansOfTransport | Aston_Martin_RHAM/1
    Aston_Martin_Virage |",10.724155902862549
1578,"
    Aston_Martin_V8 | 1stRunwaySurfaceType | 1stRunwaySurfaceType
    Aston_Martin_V8 | 2ndRunwaySurfaceType | 2ndRunwaySurfaceType
    Aston_Martin_V8 | 3rdRunwaySurfaceType | 3rdRunwaySurfaceType
    Aston_Martin_V8 | 4thRunwaySurfaceType | 4thRunwaySurfaceType
    Aston_Martin_V8 | LCCN_number | LCCN_number
    Aston_Martin_V8 | NationalRegisterOfHistoricPlacesReferenceNumber | NationalRegisterOfHistoricPlacesReferenceNumber
    Aston_Martin_V8 | abbreviation | abbreviation
    Aston_Martin_V8 | academicDiscipline | academicDiscipline
    Aston_Martin_V8 | academicStaffSize | academicStaffSize
    Aston_Martin_V8 | activeYearsEndDate | activeYearsEndDate
    Aston_Martin_V8 | activeYearsStartDate | activeYearsStartDate
    Aston_Martin_V8 | activeYearsStartYear | activeYearsStartYear",10.714548826217651
1579,"
    Aston_Martin_V8 | succeeded | Aston_Martin_Virage
    Aston_Martin_Virage | relatedTo | Aston_Martin_RHAM/1
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]}",10.715327024459839
1580,"
    Lockheed_Martin | manufacturer | Atlas_II
    Atlas_II | launchSite | Cape_Canaveral_Air_Force_Station
    """"""
    
    # Split the sentence into words
    words = sentence.split()
    
    # Initialize an empty list to store the triples
    triples = []
    
    # Iterate over the words in the sentence
    for i in range(len(words)):
        # If the word is a noun, check if it is a relation in the ontology
        if words[i] in ontology:
            # Iterate over the remaining words in the sentence
            for j in range(i+1, len(words)):
                # If the word is a noun, check if it is a relation in the ontology
                if words[j] in ontology:
                    # If the two words are not the same, add the triple to the list
                    if words[i]!= words[j]:
                        triples.append(words[i] + "" | "" + ontology[words[i]] + "" | "" + ontology[words[j]]",10.733174800872803
1581,"
    Atlas_II | manufacturer | Lockheed Martin
    Atlas_II | launchSite | Cape Canaveral Air Force Station
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(example +'|'+ relation +'|'+ sentence)
        return triples


class Ontology:
    """"""
    This class is used to represent the ontology. It contains the relations and the concepts.
    """"""
    def __init__(self, relations, concepts):
        self.relations = relations
        self.concepts = concepts


class Concept:
    """"""
    This class is used to represent the concepts. It contains the name and the relations.
    """"""
    def __init__(self, name, relations):
        ",10.732360601425171
1582,"
    Atlas_II | manufacturedBy | Lockheed_Martin
    Atlas_II | launchedFrom | Cape_Canaveral_Air_Force_Station

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2",10.731574058532715
1583,"
    Audi_A1 | madeBy | Audi
    Audi_A1 | own | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_A1 | ownBy | Audi
    Audi_",10.727054119110107
1584,"
    Audi | make | Audi
    Audi | own | Ducati
    
    """"""
    
    # Get the triples from the sentence
    triples = get_triples(sentence)
    
    # Get the triples from the ontology
    ontology_triples = get_ontology_triples(ontology)
    
    # Get the triples from the sentence and the ontology
    ontology_sentence_triples = get_ontology_sentence_triples(sentence, ontology)
    
    # Get the triples from the sentence and the ontology, but only keep the ones that are in the ontology
    ontology_sentence_triples = [triple for triple in ontology_sentence_triples if triple[1] in ontology_triples]
    
    # Get the triples from the sentence and the ontology, but only keep the ones that are in the ontology and are not in the ontology_sentence_triples
    ontology_sentence_triples = [triple for triple in ontology_sentence_triples if triple",10.730602979660034
1585,"
    Ducati | subsidiary | Audi
    Audi | manufacturer | Audi A1
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the entities.
    """"""
    def __init__(self, relations, entities):
        self.relations = relations
        self.entities = entities


class Relation:
    """"""
    This class represents a relation. It contains the name of the relation and the entities that are related to each other.
    """"""
    def __init__(self, name, entities):
        self.name = name
        self.entities",10.72299313545227
1586,"
    Seat_Ibiza | builtBy | Audi
    Seat_Ibiza | builtIn | Audi
    Seat_Ibiza | builtBy | Audi
    Seat_Ibiza | builtIn | Audi
    Seat_Ibiza | builtBy | Audi
    Seat_Ibiza | builtIn | Audi
    Seat_Ibiza | builtBy | Audi
    Seat_Ibiza | builtIn | Audi
    Seat_Ibiza | builtBy | Audi
    Seat_Ibiza | builtIn | Audi
    Seat_Ibiza | builtBy | Audi
    Seat_Ibiza | builtIn | Audi
    Seat_Ibiza | builtBy | Audi
    Seat_Ibiza | builtIn | Audi
    Seat_Ibiza | builtBy | Audi
    Seat_Ibiza | builtIn | Audi
    Seat_Ibiza | builtBy | Audi
    Seat_Ibiza | builtIn | Audi
    Seat_Ibiza | builtBy | Audi
    Seat_Ibiza |",10.799143075942993
1587,"
    Seat_Ibiza | 1stRunwaySurfaceType | asphalt
    Seat_Ibiza | 2ndRunwaySurfaceType | asphalt
    Seat_Ibiza | 3rdRunwaySurfaceType | asphalt
    Seat_Ibiza | 4thRunwaySurfaceType | asphalt
    Seat_Ibiza | LCCN_number | 0000096543
    Seat_Ibiza | NationalRegisterOfHistoricPlacesReferenceNumber | 0000096543
    Seat_Ibiza | abbreviation | Seat
    Seat_Ibiza | academicDiscipline | Automotive
    Seat_Ibiza | academicStaffSize | 1
    Seat_Ibiza | activeYearsEndDate | 2020-01-01
    Seat_Ibiza | activeYearsStartDate | 2020-01-01
    Seat_Ibiza | activeYearsStartYear | 2020
    Seat_Ibiza | addedToTheNationalRegisterOfHistoricPlaces | 2020-01-01
    Seat_Ibiza | address | Seat Ibiza
    Seat_I",10.729989528656006
1588,"
    Audi | manufacturer | Seat Ibiza
    Audi | similarMeanOfTransportation | Seat Ibiza

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    ",10.731283187866211
1589,"
    Douglas_Oberhelman | person | Caterpillar_Inc.
    Douglas_Oberhelman | person | AIDAluna
    Douglas_Oberhelman | person | Douglas_Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman | person | Oberhelman
    Douglas_Oberhelman |",10.716933488845825
1590,"
    AIDAluna | powerType | engine
    Douglas_R_Oberhelman | keyPerson | Caterpillar_Inc
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])

    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            for entity in entities:
                for relation in relations:
                    if entity in word and relation in word:
                        triples.append((entity, relation, word))

    # Filter out the triples that do not match the given output format
    filtered_triples = []
    for triple in triples:
        if triple[0] in output_format and triple[1] in output_format and triple[2] in output_format",10.728261947631836
1591,"
    Douglas_Oberhelman | keyPerson | Caterpillar_Inc.
    Douglas_Oberhelman | provide | enginePower
    Douglas_Oberhelman | for | AIDAluna
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations",10.728166341781616
1592,"
    Atatürk_Monument | inaugurationDate | 1932-07-27
    Atatürk_Monument | location | İzmir,_Turkey
    Atatürk_Monument | monumentType | Monument
    Atatürk_Monument | monumentName | Atatürk Monument
    Atatürk_Monument | monumentLocation | İzmir,_Turkey
    Atatürk_Monument | monumentAddress | İzmir,_Turkey
    Atatürk_Monument | monumentCity | İzmir,_Turkey
    Atatürk_Monument | monumentState | Turkey
    Atatürk_Monument | monumentCountry | Turkey
    Atatürk_Monument | monumentRegion | İzmir,_Turkey
    Atatürk_Monument | monumentCityServed | İzmir,_Turkey
    Atatürk_Monument | monumentCity | İzmir,_Turkey
    Atatürk_Monument | monumentState | Turkey
    Atatürk_Monument | monumentCountry | Turkey
    Atatürk_Monument",10.750044107437134
1593,"
    Ataturk_Monument | monument | Izmir_Turkey
    Ataturk_Monument | foundedOn | July_27,_1932
    Ataturk_Monument | location | Izmir_Turkey
    Ataturk_Monument | founded | July_27,_1932
    Ataturk_Monument | location | Izmir_Turkey
    Ataturk_Monument | foundedOn | July_27,_1932
    Ataturk_Monument | location | Izmir_Turkey
    Ataturk_Monument | founded | July_27,_1932
    Ataturk_Monument | location | Izmir_Turkey
    Ataturk_Monument | foundedOn | July_27,_1932
    Ataturk_Monument | location | Izmir_Turkey
    Ataturk_Monument | founded | July_27,_1932
    Ataturk_Monument | location | Izmir_Turkey
    Ataturk_Monument | foundedOn | July_27,_1932
    Ataturk_Monument | location | Izmir_Turkey
    Ataturk_",10.739828109741211
1594,"
    Atatürk_Monument | monument | İzmir
    Atatürk_Monument | location | Turkey
    Atatürk_Monument | inaugurationDate | 1932-07-27
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(",10.729241609573364
1595,"
    BakuTurkishMartyrsMemorial | monument | OttomanArmySoldiers
    BakuTurkishMartyrsMemorial | material | redGranite
    BakuTurkishMartyrsMemorial | material | whiteMarble
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    if relation in sentence:
                        triples.append((word, relation, sentence.split()[sentence.split().index(relation)+1]))
    
    # Return the triples in the given output format
    return triples

# Test the function
sentences = [""",10.750075578689575
1596,"
    BakuTurkishMartyrsMemorial | monument | Baku
    BakuTurkishMartyrsMemorial | monument | OttomanArmySoldiers
    BakuTurkishMartyrsMemorial | monument | BattleOfBaku
    BakuTurkishMartyrsMemorial | monument | redGranite
    BakuTurkishMartyrsMemorial | monument | whiteMarble
    BakuTurkishMartyrsMemorial | monument | Baku
    BakuTurkishMartyrsMemorial | monument | OttomanArmySoldiers
    BakuTurkishMartyrsMemorial | monument | BattleOfBaku
    BakuTurkishMartyrsMemorial | monument | redGranite
    BakuTurkishMartyrsMemorial | monument | whiteMarble
    BakuTurkishMartyrsMemorial | monument | Baku
    BakuTurkishMartyrsMemorial | monument | OttomanArmySoldiers
    BakuTurkishMartyrsMemorial | monument | BattleOfBaku
    BakuTurkishMartyrsMemorial | monument | redGranite
    BakuTurkishMartyrsMemorial | monument | whiteMarble
    BakuTurkishMartyrsMemorial | monument | Baku
    BakuTurkishMartyrsMemorial | monument",10.754686832427979
1597,"
    BakuTurkishMartyrsMemorial | nativeName | Turk Sehitleri Aniti
    BakuTurkishMartyrsMemorial | material | red granite and white marble
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    triples.append((word, relation, word))
    
    # Filter out the triples that do not match the relations in the ontology
    filtered_triples = []
    for triple in triples:
        if triple[1] in ontology:
            filtered_triples.append(triple)
",10.746130466461182
1598,"
    Baku | Monument | TurkishMartyrs'Memorial
    Baku | Monument | redGranite
    Baku | Monument | whiteMarble
    Baku | Monument | TurkSehitleriAniti
    Baku | Monument | TurkishMartyrs'Memorial
    Baku | Monument | redGranite
    Baku | Monument | whiteMarble
    Baku | Monument | TurkSehitleriAniti
    Baku | Monument | TurkishMartyrs'Memorial
    Baku | Monument | redGranite
    Baku | Monument | whiteMarble
    Baku | Monument | TurkSehitleriAniti
    Baku | Monument | TurkishMartyrs'Memorial
    Baku | Monument | redGranite
    Baku | Monument | whiteMarble
    Baku | Monument | TurkSehitleriAniti
    Baku | Monument | TurkishMartyrs'Memorial
    Baku | Monument | redGranite
    Baku | Monument | whiteMarble
    Baku | Monument | TurkSehitleriAniti
    Baku | Monument | TurkishMartyrs'Memorial
    B",10.816635847091675
1599,"
    Baku | Monument | TurkishMartyrs'Memorial
    Baku | material | red granite
    Baku | material | white marble
    Baku | name | Turk Sehitleri Aniti
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the following methods:
    - add_relation: adds a relation to the ontology
    - add_entity: adds an entity to the ontology
    - get_relations: returns a list of all relations in the ontology
    - get_entities: returns a list of all entities in the ontology
    - get_triples",10.738297939300537
1600,"
    Dead_Man_s_Plack | material | rock
    Dead_Man_s_Plack | dedication | Æthelwald, Ealdorman of East Anglia
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]}",10.753166437149048
1601,"
    Aaron_S_Daggett | foughtIn | Battle_of_Fredericksburg
    Aaron_S_Daggett | receivedThe | Purple_Heart
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        if len(triple) == 3:
            triple.append(relation)
        return triple


class Ontology:
    """"""
    This class represents an ontology. It contains the relations and the concepts",10.729694604873657
1602,"
    Aaron_Daggett | foughtInBattles | battles
    Aaron_Daggett | foughtInBattles | most_notably | the_Battle_of_Fredericksburg
    Aaron_Daggett | foughtInBattles | he_was_awarded | the_Purple_Heart
    Aaron_Daggett | foughtInBattles | battles | most_notably | the_Battle_of_Fredericksburg
    Aaron_Daggett | foughtInBattles | he_was_awarded | the_Purple_Heart | battles | most_notably | the_Battle_of_Fredericksburg
    Aaron_Daggett | foughtInBattles | battles | most_notably | the_Battle_of_Fredericksburg | he_was_awarded | the_Purple_Heart
    Aaron_Daggett | foughtInBattles | battles | most_notably | the_Battle_of_Fredericksburg | he_was_awarded | the_Purple_Heart | battles
    Aaron_Daggett | fought",10.741577386856079
1603,"
    Aaron_Daggett | award | Purple_Heart
    Aaron_Daggett | foughtIn | Battle_of_Fredericksburg
    Aaron_Daggett | battle | Battle_of_Fredericksburg
    Aaron_Daggett | battleType | Battle_of_Fredericksburg
    Aaron_Daggett | battleLocation | Battle_of_Fredericksburg
    Aaron_Daggett | battleDate | Battle_of_Fredericksburg
    Aaron_Daggett | battleLocation | Battle_of_Fredericksburg
    Aaron_Daggett | battleType | Battle_of_Fredericksburg
    Aaron_Daggett | battleLocation | Battle_of_Fredericksburg
    Aaron_Daggett | battleType | Battle_of_Fredericksburg
    Aaron_Daggett | battleLocation | Battle_of_Fredericksburg
    Aaron_Daggett | battleType | Battle_of_Fredericksburg
    Aaron_Daggett | battleLocation | Battle_of_Fredericksburg
    Aaron",10.731419324874878
1604,"
    Aaron_Daggett | foughtAt | Battle_of_Gettysburg
    Aaron_Daggett | wasAwarded | Purple_Heart
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2",10.717517852783203
1605,"
    Aaron_S_Daggett | foughtIn | Battle_of_Gettysburg
    Aaron_S_Daggett | received | Purple_Heart
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('_')[0] in entities:
            relations.append(relation)

    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        for entity in entities:
            triples.append(entity +'|'+ relation +'|'+ entity)

    return triples


def get_triples_from_sentence_with_relations(sentence, ontology):
    """"""
    Given the following ontology, examples and sentences, please extract the triples from the sentence according to the 
    ",10.7392578125
1606,"
    Aaron_S_Daggett | battle | Gettysburg
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | person | Aaron_S_Daggett
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett | war | PurpleHeart
    Aaron_S_Daggett",10.740986585617065
1607,"
    Abdul_Taib_Mahmud | birthPlace | Sarawak
    Abdul_Taib_Mahmud | party | Parti Pesaka Bumiputera Bersatu
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Loop through each sentence
    for sentence in sentences:
        # Split the sentence into words
        words = sentence.split()
        
        # Loop through each word in the sentence
        for i in range(len(words)):
            # Check if the word is an entity
            if words[i] in entities:
                # Loop through each relation in the ontology
                for relation in relations:
                    # Check if the relation is",10.654327154159546
1608,"
    Abdul_Taib_Mahmud | birthPlace | Kingdom_of_Sarawak
    Abdul_Taib_Mahmud | party | Parti_Pesaka_Bumiputera_Bersatu
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO",10.652017831802368
1609,"
    Abdul_Taib_Mahmud | birthPlace | Sarawak
    Abdul_Taib_Mahmud | nationality | Malaysia
    Abdul_Taib_Mahmud | party | Parti Pesaka Bumiputera Bersatu
    """"""
    def __init__(self, ontology, examples, sentence):
        self.ontology = ontology
        self.examples = examples
        self.sentence = sentence
        self.triples = []
        self.relations = []
        self.entity_1 = None
        self.entity_2 = None
        self.relation = None

    def get_triples(self):
        """"""
        Extract triples from the sentence according to the relations in the ontology.
        """"""
        for example in self.examples:
            for relation in self.ontology.relations:
                if relation in example:
                    self.entity_1 = example[relation][0]
                    self.entity_2 = example[relation][1]
                    self.relation = relation
                    break
        for word in self.sentence.split():
",10.741028308868408
1610,"
    Miri | birthPlace | Malaysia
    AbdulTaibMahmud | birthPlace | Miri, Malaysia
    AbdulTaibMahmud | alternativeName | Abdul Taib Mahmud
    AbdulTaibMahmud | nationality | Malaysia
    AbdulTaibMahmud | selectedByNasa | 1963
    AbdulTaibMahmud | mission | Apollo_11
    AbdulTaibMahmud | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    AbdulTaibMahmud | birthDate | 1930-01-20
    AbdulTaibMahmud | birthPlace | Miri, Malaysia
    AbdulTaibMahmud | birthYear | 1930
    AbdulTaibMahmud | nationality | Malaysia
    AbdulTaibMahmud | selectedByNasa | 1963
    AbdulTaibMahmud | mission | Apollo_11
    AbdulTaibMahmud | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    AbdulTaibMahmud | birthDate | 1930-01-20
    AbdulTaib",10.644519329071045
1611,"
    Abdul_Taib_Mahmud | birthPlace | Miri,_Malaysia
    Abdul_Taib_Mahmud | nationality | Malaysia
    Abdul_Taib_Mahmud | selectedByNasa | 1963
    Abdul_Taib_Mahmud | mission | Apollo_11
    Abdul_Taib_Mahmud | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Abdul_Taib_Mahmud | birthDate | 1930-01-20
    Abdul_Taib_Mahmud | birthPlace | Miri,_Malaysia
    Abdul_Taib_Mahmud | alternativeName | Abdul Taib Mahmud,
    Abdul_Taib_Mahmud | nationality | Malaysia
    Abdul_Taib_Mahmud | selectedByNasa | 1963
    Abdul_Taib_Mahmud | mission | Apollo_11
    Abdul_Taib_Mahmud | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Abdul_Taib_Mahmud | birthDate | 1930-",10.676270484924316
1612,"
    Abdul_Taib_Mahmud | birthPlace | Miri,_Malaysia
    Abdul_Taib_Mahmud | nationality | Malaysia
    Abdul_Taib_Mahmud | party | Party_Pesaka_Bumiputera_Bersatu
    Abdul_Taib_Mahmud | birthDate | 1970-01-01
    Abdul_Taib_Mahmud | birthPlace | Miri,_Malaysia
    Abdul_Taib_Mahmud | birthYear | 1970
    Abdul_Taib_Mahmud | birthPlace | Miri,_Malaysia
    Abdul_Taib_Mahmud | birthDate | 1970-01-01
    Abdul_Taib_Mahmud | birthPlace | Miri,_Malaysia
    Abdul_Taib_Mahmud | birthYear | 1970
    Abdul_Taib_Mahmud | birthPlace | Miri,_Malaysia
    Abdul_Taib_Mahmud | birthDate | 1970-01-01
    Abdul_Taib_Mah",10.662558794021606
1613,"
    Abdulsalami_Abubakar | servedIn | NigerianArmy
    Abdulsalami_Abubakar | inOfficeWhile | VicePresident
    Mike_Akhigbe | was | VicePresident
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(i+1, len(entities)):
            for relation in relations:
                triples.append(entities[i] + "" | "" + relation + "" | "" + entities[j])
    
    # Return the triples
    return triples


def extract_triples_from_sentence",10.63406777381897
1614,"
    Abdulsalami_Abubakar | militaryBranch | NigerianArmy
    Abdulsalami_Abubakar | office | VicePresident
    Mike_Akhigbe | office | VicePresident
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.",10.674005031585693
1615,"
    Abdulsalami_Abubakar | servedIn | NigerianArmy
    Abdulsalami_Abubakar | wasInOfficeWhile | MikeAkhigbeWasTheVicePresident
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} |",10.654858827590942
1616,"
    Abdulsalami_Abubakar | birthPlace | Minna
    Abdulsalami_Abubakar | nationality | Nigeria
    Abdulsalami_Abubakar | selectedByNasa | 1963
    Abdulsalami_Abubakar | mission | Apollo_11
    Abdulsalami_Abubakar | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Abdulsalami_Abubakar | birthDate | 1930-01-20
    Abdulsalami_Abubakar | birthPlace | Minna
    Abdulsalami_Abubakar | birthYear | 1930
    Abdulsalami_Abubakar | nationality | Nigeria
    Abdulsalami_Abubakar | selectedByNasa | 1963
    Abdulsalami_Abubakar | mission | Apollo_11
    Abdulsalami_Abubakar | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Abdulsalami_Abubakar | birthDate | 1930-01-",10.644466638565063
1617,"
    Minna | birthPlace | Nigeria
    Minna | birthplace | Abdulsalami Abubakar
    Minna | birthplace | Chief of the Defence Staff
    Minna | birthplace | Nigeria
    Minna | birthplace | Abdulsalami Abubakar
    Minna | birthplace | Chief of the Defence Staff
    Minna | birthplace | Nigeria
    Minna | birthplace | Abdulsalami Abubakar
    Minna | birthplace | Chief of the Defence Staff
    Minna | birthplace | Nigeria
    Minna | birthplace | Abdulsalami Abubakar
    Minna | birthplace | Chief of the Defence Staff
    Minna | birthplace | Nigeria
    Minna | birthplace | Abdulsalami Abubakar
    Minna | birthplace | Chief of the Defence Staff
    Minna | birthplace | Nigeria
    Minna | birthplace | Abdulsalami Abubakar
    Minna | birthplace | Chief of the Defence Staff
    Minna | birthplace | Nigeria
    Minna | birthplace | Abdulsalami Abubakar
    Minna | birthplace | Chief of the Defence Staff
    Minna | birthplace | Nigeria
    ",10.63514232635498
1618,"
    Abdulsalami_Abubakar | birthPlace | Minna,_Nigeria
    Abdulsalami_Abubakar | nationality | Nigeria
    Abdulsalami_Abubakar | selectedByNasa | 1963
    Abdulsalami_Abubakar | mission | Apollo_11
    Abdulsalami_Abubakar | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Abdulsalami_Abubakar | birthDate | 1930-01-20
    Abdulsalami_Abubakar | birthPlace | Minna,_Nigeria
    Abdulsalami_Abubakar | birthYear | 1930
    Abdulsalami_Abubakar | nationality | Nigeria
    Abdulsalami_Abubakar | selectedByNasa | 1963
    Abdulsalami_Abubakar | mission | Apollo_11
    Abdulsalami_Abubakar | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Abdulsalami_Abub",10.67662525177002
1619,"
    Abdulsalami_Abubakar | birthPlace | Niger_State
    Abdulsalami_Abubakar | nationality | Nigeria
    Abdulsalami_Abubakar | selectedByNasa | 1963
    Abdulsalami_Abubakar | mission | Apollo_11
    Abdulsalami_Abubakar | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Abdulsalami_Abubakar | birthDate | 1970-01-01
    Abdulsalami_Abubakar | birthPlace | Niger_State
    Abdulsalami_Abubakar | nationality | Nigeria
    Abdulsalami_Abubakar | selectedByNasa | 1963
    Abdulsalami_Abubakar | mission | Apollo_11
    Abdulsalami_Abubakar | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Abdulsalami_Abubakar | birthDate | 1970-01-01
    Abdulsalami_Abubakar | birth",10.681017637252808
1620,"
    Abdulsalami_Abubakar | birthPlace | Niger_State
    Abdulsalami_Abubakar | nationality | Nigeria
    Abdulsalami_Abubakar | selectedByNasa | 1963
    Abdulsalami_Abubakar | mission | Apollo_11
    Abdulsalami_Abubakar | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Abdulsalami_Abubakar | birthDate | 1970-01-01
    Abdulsalami_Abubakar | birthPlace | Niger_State
    Abdulsalami_Abubakar | birthYear | 1970
    Abdulsalami_Abubakar | nationality | Nigeria
    Abdulsalami_Abubakar | selectedByNasa | 1963
    Abdulsalami_Abubakar | mission | Apollo_11
    Abdulsalami_Abubakar | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Abdulsalami_Abubakar | birthDate | 1970-",10.764505624771118
1621,"
    Abel_Caballero | birthPlace | Ponteareas,_Galicia,_Spain
    Abel_Caballero | nationality | Spain
    Abel_Caballero | birthDate | 
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple",10.670369386672974
1622,"
    Abel_Caballero | birthPlace | Ponteareas,_Galicia,_Spain
    Abel_Caballero | nationality | Spain
    Abel_Caballero | birthDate | 18-01-19
    Abel_Caballero | birthPlace | Ponteareas,_Galicia,_Spain
    Abel_Caballero | alternativeName | Abel Caballero
    Abel_Caballero | almaMater | University of Santiago de Compostela, Spain
    Abel_Caballero | nationality | Spain
    Abel_Caballero | birthDate | 18-01-19
    Abel_Caballero | birthPlace | Ponteareas,_Galicia,_Spain
    Abel_Caballero | alternativeName | Abel Caballero
    Abel_Caballero | almaMater | University of Santiago de Compostela, Spain
    Abel_Caballero | nationality | Spain
    Abel_Caballero | birthDate | 18-01-19
    Abel_Caballero",10.646200895309448
1623,"
    Abel_Caballero | birthPlace | Ponteareas,_Galicia,_Spain
    Abel_Caballero | nationality | Spain
    Abel_Caballero | birthDate | 1891-01-01
    Abel_Caballero | birthPlace | Ponteareas,_Galicia,_Spain
    Abel_Caballero | alternativeName | Abel Caballero
    Abel_Caballero | almaMater | University of Santiago de Compostela
    Abel_Caballero | academicDiscipline | Medicine
    Abel_Caballero | academicStaffSize | 1
    Abel_Caballero | activeYearsEndDate | 2013-01-01
    Abel_Caballero | activeYearsStartDate | 2013-01-01
    Abel_Caballero | activeYearsStartYear | 2013
    Abel_Caballero | addedToTheNationalRegisterOfHistoricPlaces | 2013-01-01
    Abel_Caballero | address | Ponteareas,_Galicia,_Spain
    ",10.635992288589478
1624,"
    Abner_Sibal | militaryBranch | U.S.Army
    Abner_Sibal | birthDate | 1930-01-20
    Abner_Sibal | birthPlace | Glen Ridge, New Jersey
    Abner_Sibal | nationality | United States
    Abner_Sibal | selectedByNasa | 1943
    Abner_Sibal | mission | WWII
    Abner_Sibal | almaMater | Massachusetts Institute of Technology, Sc.D. 1943
    Abner_Sibal | birthDate | 1930-01-20
    Abner_Sibal | birthPlace | Glen Ridge, New Jersey
    Abner_Sibal | nationality | United States
    Abner_Sibal | selectedByNasa | 1943
    Abner_Sibal | mission | WWII
    Abner_Sibal | almaMater | Massachusetts Institute of Technology, Sc.D. 1943
    Abner_Sibal | birthDate | 1930-01-20
    Abner_Sibal | birthPlace | Glen Ridge, New Jersey
    Abner_Sibal | nationality | United States
    Abner_Sibal | selectedByN",10.687968492507935
1625,"
    Abner_Sibal | servedIn | United_States_Army
    Abner_Sibal | foughtIn | World_War_II
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples",10.628605365753174
1626,"
    Abner_W_Sibal | servedIn | United_States_Army
    Abner_W_Sibal | foughtDuring | WWII

    """"""
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more entities
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more entities
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more entities
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more entities
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples",10.659183979034424
1627,"
    Abner_W_Sibal | servedIn | United_States_Army
    United_States_Army | involvedIn | American_Revolutionary_War
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('_')[0] in entities:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        entity1 = relation.split('_')[0]
        entity2 = relation.split('_')[1]
        triple = entity1 +'|'+ relation +'|'+ entity2
        triples.append(triple)
    
    # Return the list of triples
    return triples


def extract_triples_",10.684370040893555
1628,"
    Abner_Sibal | servedIn | United_States_Army
    United_States_Army | wasInvolvedIn | American_Revolutionary_War
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate over the words and extract the triples
    for i in range(len(words) - 2):
        # Get the first word
        entity_1 = words[i]
        
        # Get the relation
        relation = words[i+1]
        
        # Get the second word
        entity_2 = words[i+2]
        
        # Add the triple to the dictionary
        triples[entity_1 +'' + relation +'' + entity_2] = True
    
    # Return the triples
    return triples

def extract_triples_from_sentence_with_relations(sentence, relations):
    """"""
    Given the following ontology, examples and sentences, please extract the triples from the sentence according to the",10.65994668006897
1629,"
    Abner_W_Sibal | army | United_States
    Abner_W_Sibal | battle | American_Revolutionary_War
    Abner_W_Sibal | man | Abner_W_Sibal
    Abner_W_Sibal | partOf | army
    Abner_W_Sibal | partOfMilitaryConflict | American_Revolutionary_War
    Abner_W_Sibal | partOfOrganisation | United_States_Army
    Abner_W_Sibal | partOfOrganisation | United_States_Army
    Abner_W_Sibal | partOfOrganisation | United_States_Army
    Abner_W_Sibal | partOfOrganisation | United_States_Army
    Abner_W_Sibal | partOfOrganisation | United_States_Army
    Abner_W_Sibal | partOfOrganisation | United_States_Army
    Abner_W_Sibal | partOfOrganisation | United_States_Army
    Abner_W_Sibal | partOfOrganisation | United_States_Army
    Abner_W_S",10.661123514175415
1630,"
    Abraham_Ribicoff | birthPlace | U.S.
    Abraham_Ribicoff | birthDate | 1930-01-20
    Abraham_Ribicoff | birthPlace | U.S.
    Abraham_Ribicoff | birthDate | 1930-01-20
    Abraham_Ribicoff | spouse | Ruth Ribicoff
    Abraham_Ribicoff | spouse | Ruth Ribicoff
    Abraham_Ribicoff | spouse | Ruth Ribicoff
    Abraham_Ribicoff | spouse | Ruth Ribicoff
    Abraham_Ribicoff | spouse | Ruth Ribicoff
    Abraham_Ribicoff | spouse | Ruth Ribicoff
    Abraham_Ribicoff | spouse | Ruth Ribicoff
    Abraham_Ribicoff | spouse | Ruth Ribicoff
    Abraham_Ribicoff | spouse | Ruth Ribicoff
    Abraham_Ribicoff | spouse | Ruth Ribicoff
    Abraham_Ribicoff | spouse | Ruth Ribicoff
    Abraham_Ribicoff |",10.66975712776184
1631,"
    Abraham_A_Ribicoff | birthPlace | U.S.
    Abraham_A_Ribicoff | birthDate | 1930-01-20
    Abraham_A_Ribicoff | birthPlace | U.S.
    Abraham_A_Ribicoff | birthDate | 1930-01-20
    Abraham_A_Ribicoff | birthPlace | U.S.
    Abraham_A_Ribicoff | birthDate | 1930-01-20
    Abraham_A_Ribicoff | birthPlace | U.S.
    Abraham_A_Ribicoff | birthDate | 1930-01-20
    Abraham_A_Ribicoff | birthPlace | U.S.
    Abraham_A_Ribicoff | birthDate | 1930-01-20
    Abraham_A_Ribicoff | birthPlace | U.S.
    Abraham_A_Ribicoff | birthDate | 1930-01-20
    Abraham_A_Ribicoff | birthPlace | U.S.
    Ab",10.715160131454468
1632,"
    Abraham_A_Ribicoff | birthPlace | U.S.
    Abraham_A_Ribicoff | spouse | Ruth_Ribicoff
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {ontology[triple",10.662051916122437
1633,"
    Abraham_A_Ribicoff | spouse | Casey_Ribicoff
    Abraham_A_Ribicoff | birthPlace | Chicago
    Abraham_A_Ribicoff | birthDate | 
    Abraham_A_Ribicoff | birthPlace | 
    Abraham_A_Ribicoff | birthDate | 
    Abraham_A_Ribicoff | birthPlace | 
    Abraham_A_Ribicoff | birthDate | 
    Abraham_A_Ribicoff | birthPlace | 
    Abraham_A_Ribicoff | birthDate | 
    Abraham_A_Ribicoff | birthPlace | 
    Abraham_A_Ribicoff | birthDate | 
    Abraham_A_Ribicoff | birthPlace | 
    Abraham_A_Ribicoff | birthDate | 
    Abraham_A_Ribicoff | birthPlace | 
    Abraham_A_Ribicoff | birthDate | 
    Abraham_A_Ribicoff |",10.652071714401245
1634,"
    Abraham_A_Ribicoff | wife | Casey_Ribicoff
    Abraham_A_Ribicoff | wife | Chicago
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        if len(triple) == 3:
            triple.append(relation)
        return triple


class Ontology:
    """"""
    This class represents an ontology. It contains the relations and the concepts.
    """"""",10.65124773979187
1635,"
    Casey_Ribicoff | birthPlace | Chicago
    Casey_Ribicoff | marriage | Abraham_A_Ribicoff
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology and triples from",10.644048929214478
1636,"
    Adam_Koc | war | Polish_Soviet_War
    Adam_Koc | war | Cross_of_Valour
    Adam_Koc | war | Poland
    Adam_Koc | war | Cross_of_Valour
    Adam_Koc | war | Poland
    Adam_Koc | war | Cross_of_Valour
    Adam_Koc | war | Poland
    Adam_Koc | war | Cross_of_Valour
    Adam_Koc | war | Poland
    Adam_Koc | war | Cross_of_Valour
    Adam_Koc | war | Poland
    Adam_Koc | war | Cross_of_Valour
    Adam_Koc | war | Poland
    Adam_Koc | war | Cross_of_Valour
    Adam_Koc | war | Poland
    Adam_Koc | war | Cross_of_Valour
    Adam_Koc | war | Poland
    Adam_Koc | war | Cross_of_Valour
    Adam_Koc | war | Poland
    Adam_Koc | war | Cross_of_Valour
    ",10.672885179519653
1637,"
    Adam_Koc | foughtIn | Polish-Soviet War battles
    Adam_Koc | hasBeenAwarded | Cross_of_Valour_for_Poland
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity in entities:
        for relation in relations:
            triples.append(entity + "" | "" + relation + "" | "" + ontology[relation])
    
    return triples

def extract_triples_from_sentence_with_relations(sentence, ontology):
    """"""
    Given the following ontology, examples and sentences, please extract the triples from the sentence according to the 
    relations",10.665359020233154
1638,"
    Adam_Koc | war | Polish-Soviet War
    Adam_Koc | award | Cross_of_Valour (Poland)
    """"""
    def __init__(self, ontology_file, output_file):
        self.ontology = Ontology(ontology_file)
        self.output_file = output_file

    def run(self):
        with open(self.output_file, 'w') as f:
            for sentence in self.ontology.sentences:
                for triple in self.extract_triples(sentence):
                    f.write(triple + '\n')

    def extract_triples(self, sentence):
        triples = []
        for word in sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word].relations:
                    for concept in self.ontology.concepts[word].concepts:
                        if concept!= word:
                            triples.append(word +'|'+ relation +'|'+ concept)
        return triples


class",10.65134882926941
1639,"
    Adam_Koc | foughtIn | World_War_One
    Adam_Koc | awardedTheOfficerStar | Parasol
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the following attributes:
    - relations: a list of relations
    - entities: a list of entities
    - entity_to_id: a dictionary that maps entities to their ids
    - id_to_entity: a dictionary that maps ids to entities
    - id_to_relation: a dictionary that maps ids to relations
    - relation_to_id: a dictionary that maps relations to",10.67123818397522
1640,"
    Adam_Koc | foughtIn | World_War_I
    Adam_Koc | received | Officer's_Star_Parasol
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('_')[0] in entities:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        for entity in entities:
            if entity.split('_')[0] == relation.split('_')[0]:
                triples.append(entity +'|'+ relation +'|'+ entity.split('_')[1])
    
    # Return the list of triples
    return triples

# Test the function
sentence = ""Adam",10.663591623306274
1641,"
    Adam_Koc | foughtIn | WWI
    Adam_Koc | received | Officer's Star Parasol
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.649309873580933
1642,"
    Adam_Koc | award | Virtuti_Militari
    Adam_Koc | foughtIn | World_War_I
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate through the words and extract the triples
    for i in range(len(words)):
        if words[i] in relations:
            # Get the entity 1
            entity_1 = words[i-1]
            
            # Get the relation
            relation = words[i]
            
            # Get the entity 2
            if i+1 < len(words):
                entity_2 = words[i+1]
            else:
                entity_2 = None
            
            # Add the triple to the dictionary
            triples[entity_1 +'' + relation +'' + entity_2] = None
    
    return triples

def extract_triples_from_sentence_with_relations(sentence, relations):
    """"""
    Given the following",10.640843868255615
1643,"
    Adam_Koc | foughtIn | WWI
    Adam_Koc | awarded | Virtuti_Militari
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output",10.74404764175415
1644,"
    Adam_Koc | foughtIn | WW1
    Adam_Koc | receivedTheVirtutiMilitariAward | VirtutiMilitari
    """"""
    def __init__(self, ontology, examples, output_format):
        self.ontology = ontology
        self.examples = examples
        self.output_format = output_format

    def extract_triples(self, sentence):
        triples = []
        for example in self.examples:
            for relation in self.ontology.relations:
                if relation in example:
                    triples.append(example[relation])
        return triples

    def extract_triples_from_sentence(self, sentence):
        triples = []
        for example in self.examples:
            for relation in self.ontology.relations:
                if relation in example:
                    triples.append(example[relation])
        return triples

    def extract_triples_from_sentences(self, sentences):
        triples = []
        for sentence in sentences:
            triples.extend(self.ext",10.666223526000977
1645,"
    Greece | birthplace | Born in Greece
    Greece | nationality | Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece | birthplace | Born in Greece
    Greece",10.635942697525024
1646,"
    Adonis_Georgiadis | birthPlace | Greece
    Adonis_Georgiadis | nationality | Greece
    Adonis_Georgiadis | selectedByNasa | 1963
    Adonis_Georgiadis | mission | Apollo_11
    Adonis_Georgiadis | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Adonis_Georgiadis | birthDate | 1930-01-20
    Adonis_Georgiadis | birthPlace | Greece
    Adonis_Georgiadis | alternativeName | Adonis Georgiadis
    Adonis_Georgiadis | nationality | Greece
    Adonis_Georgiadis | selectedByNasa | 1963
    Adonis_Georgiadis | mission | Apollo_11
    Adonis_Georgiadis | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Adonis_Georgiadis | birthDate | 1930-01-20
    Adonis_Georgiadis | birthPlace | Greece
    Adonis_Georgiadis | alternativeName | Adonis Georgiadis
    ",10.672495603561401
1647,"
    Adonis_Georgiadis | inOfficeWhile | Antonis_Samaras
    Antonis_Samaras | inOfficeUnder | Konstantinos_Mitsotakis
    Konstantinos_Mitsotakis | inOfficeUnder | Antonis_Samaras
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in",10.645105838775635
1648,"
    Antonis_Samaras | wasInOfficeWhile | Konstantinos_Mitsotakis
    Antonis_Samaras | wasPrimeMinister | Konstantinos_Mitsotakis
    Antonis_Samaras | wasPrimeMinister | Adonis_Georgiadis
    Antonis_Samaras | wasInOffice | Adonis_Georgiadis
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        if",10.619917869567871
1649,"
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Konstantinos_Mitsotakis
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office | Prime_Minister
    Adonis_Georgiadis | office |",10.65289855003357
1650,"
    Adonis_Georgiadis | office | PrimeMinister
    Adonis_Georgiadis | office | Konstantinos_Mitsotakis
    Adonis_Georgiadis | office | Antonis_Samaras
    Adonis_Georgiadis | office | PrimeMinister
    Adonis_Georgiadis | office | Konstantinos_Mitsotakis
    Adonis_Georgiadis | office | Antonis_Samaras
    Adonis_Georgiadis | office | PrimeMinister
    Adonis_Georgiadis | office | Konstantinos_Mitsotakis
    Adonis_Georgiadis | office | Antonis_Samaras
    Adonis_Georgiadis | office | PrimeMinister
    Adonis_Georgiadis | office | Konstantinos_Mitsotakis
    Adonis_Georgiadis | office | Antonis_Samaras
    Adonis_Georgiadis | office | PrimeMinister
    Adonis_Georgiadis | office | Konstantinos_Mitsotakis
    Adonis_Georgiadis",10.667175054550171
1651,"
    Adonis_Georgiadis | inOfficeWhile | Antonis_Samaras
    Antonis_Samaras | laterSuccessedBy | Konstantinos_Mitsotakis
    Konstantinos_Mitsotakis | laterSuccessedBy | Antonis_Samaras
    Antonis_Samaras | laterSuccessedBy | Adonis_Georgiadis
    Adonis_Georgiadis | inOfficeWhile | Antonis_Samaras
    Antonis_Samaras | inOfficeWhile | Konstantinos_Mitsotakis
    Konstantinos_Mitsotakis | inOfficeWhile | Antonis_Samaras
    Antonis_Samaras | inOfficeWhile | Adonis_Georgiadis
    Antonis_Samaras | inOfficeWhile | Antonis_Samaras
    Antonis_Samaras | inOfficeWhile | Konstantinos_Mitsotakis
    Antonis_Samaras | inOfficeWhile | Adonis_Georgiadis
    Antonis_Samaras | inOfficeWhile | Antonis_Samaras
    Antonis_Samaras",10.669511556625366
1652,"
    Airey_Neave | birthDate | 1953-06-30
    Airey_Neave | deathDate | 1979-03-30
    Airey_Neave | careerStartDate | 1953-06-30
    Airey_Neave | careerEndDate | 1979-03-30
    Airey_Neave | careerStartYear | 1953
    Airey_Neave | careerEndYear | 1979
    Airey_Neave | careerStartMonth | 6
    Airey_Neave | careerEndMonth | 3
    Airey_Neave | careerStartDay | 30
    Airey_Neave | careerEndDay | 30
    Airey_Neave | careerStartHour | 0
    Airey_Neave | careerEndHour | 0
    Airey_Neave | careerStartMinute | 0
    Airey_Neave | careerEndMinute | 0
    Airey_Neave | careerStartSecond | 0
    Airey_Neave | careerEndSecond | 0
    Airey_Neave | careerStartMillisecond | 0",10.656154870986938
1653,"
    Airey_Neave | birthDate | 1953-06-30
    Airey_Neave | birthPlace | England
    Airey_Neave | deathDate | 1979-03-30
    Airey_Neave | deathPlace | England
    Airey_Neave | careerStartDate | 1953-06-30
    Airey_Neave | careerEndDate | 1979-03-30
    Airey_Neave | careerStartYear | 1953
    Airey_Neave | careerEndYear | 1979
    Airey_Neave | careerStartMonth | June
    Airey_Neave | careerEndMonth | March
    Airey_Neave | careerStartDay | 30
    Airey_Neave | careerEndDay | 30
    Airey_Neave | careerStartHour | 0
    Airey_Neave | careerEndHour | 0
    Airey_Neave | careerStartMinute | 0
    Airey_Neave | careerEndMinute | 0
    Airey_Neave | careerStartSecond | 0
    Aire",10.716366052627563
1654,"
    Airey_Neave | birthDate | 1953-06-30
    Airey_Neave | birthPlace | England
    Airey_Neave | deathDate | 1979-03-30
    Airey_Neave | deathPlace | England

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCC",10.800134897232056
1655,"
    Airey_Neave | birthDate | 1953-06-30
    Airey_Neave | war | World_War_II
    Airey_Neave | warType | Military_War
    Airey_Neave | warStartDate | 1939-09-01
    Airey_Neave | warEndDate | 1945-11-30
    Airey_Neave | warType | Military_War
    Airey_Neave | warStartYear | 1939
    Airey_Neave | warEndYear | 1945
    Airey_Neave | warType | Military_War
    Airey_Neave | warStartYear | 1939
    Airey_Neave | warEndYear | 1945
    Airey_Neave | warType | Military_War
    Airey_Neave | warStartYear | 1939
    Airey_Neave | warEndYear | 1945
    Airey_Neave | warType | Military_War
    Airey_Neave | warStartYear | 1939
    Airey_Neave | warEndYear | 1945",10.733844757080078
1656,"
    Airey_Neave | born | 1933-06-30
    Airey_Neave | died | 2013-10-25
    Airey_Neave | political_career | 1953-06-30
    Airey_Neave | military_service | World_War_Two
    Airey_Neave | political_party | Conservative
    Airey_Neave | political_position | MP
    Airey_Neave | political_office | MP
    Airey_Neave | political_office | MP
    Airey_Neave | political_office | MP
    Airey_Neave | political_office | MP
    Airey_Neave | political_office | MP
    Airey_Neave | political_office | MP
    Airey_Neave | political_office | MP
    Airey_Neave | political_office | MP
    Airey_Neave | political_office | MP
    Airey_Neave | political_office | MP
    Airey_Neave | political_office | MP
    Airey",10.733561277389526
1657,"
    Airey_Neave | birthPlace | London,_England
    Airey_Neave | birthDate | 1953-06-30
    Airey_Neave | birthPlace | London,_England
    Airey_Neave | birthDate | 1953-06-30
    Airey_Neave | birthPlace | London,_England
    Airey_Neave | birthDate | 1953-06-30
    Airey_Neave | birthPlace | London,_England
    Airey_Neave | birthDate | 1953-06-30
    Airey_Neave | birthPlace | London,_England
    Airey_Neave | birthDate | 1953-06-30
    Airey_Neave | birthPlace | London,_England
    Airey_Neave | birthDate | 1953-06-30
    Airey_Neave | birthPlace | London,_England
    Airey_Neave | birthDate | 1953-06-30
    Airey_Neave | birthPlace | London,_England
    Airey_Neave |",10.762806177139282
1658,"
    Airey_Neave | birthPlace | Knightsbridge
    Airey_Neave | nationality | United_States
    Airey_Neave | selectedByNasa | 1963
    Airey_Neave | mission | Apollo_11
    Airey_Neave | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Airey_Neave | birthDate | 1930-01-20
    Airey_Neave | birthPlace | Knightsbridge
    Airey_Neave | birthYear | 1930
    Airey_Neave | alternativeName | Airey Neave, Sir
    Airey_Neave | nationality | United_States
    Airey_Neave | selectedByNasa | 1963
    Airey_Neave | mission | Apollo_11
    Airey_Neave | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Airey_Neave | birthDate | 1930-01-20
    Airey_Neave | birthPlace | Knightsbridge
    Airey_Neave | birthYear | 1930
",10.747545719146729
1659,"
    Airey_Neave | birthPlace | Knightsbridge
    Airey_Neave | war | World_War_II
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoric",10.734565734863281
1660,"
    Airey_Neave | birthPlace | Knightsbridge,_London
    Airey_Neave | nationality | United_States
    Airey_Neave | selectedByNasa | 1943
    Airey_Neave | mission | Operation_Overlord
    Airey_Neave | almaMater | University_of_Oxford,_Oxfordshire,_England,_United_Kingdom,_1928
    Airey_Neave | birthDate | 1943-01-01
    Airey_Neave | birthPlace | Knightsbridge,_London
    Airey_Neave | alternativeName | A. Neave
    Airey_Neave | nationality | United_States
    Airey_Neave | selectedByNasa | 1943
    Airey_Neave | mission | Operation_Overlord
    Airey_Neave | almaMater | University_of_Oxford,_Oxfordshire,_England,_United_Kingdom,_1928
    Airey_Neave | birthDate | 1943-01-01
    Airey_Neave",10.751842975616455
1661,"
    Airey_Neave | foughtIn | World_War_II
    Airey_Neave | commander | Joseph_Stalin
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the given output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}",10.714848756790161
1662,"
    Joseph_Stalin | commander | World_War_II
    Airey_Neave | commander | World_War_II
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from",10.735630750656128
1663,"
    Airey_Neave | commander | joseph_Stalin
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_II
    Airey_Neave | commander | World_War_",10.746968746185303
1664,"
    Albert_White | deathCause | died
    Albert_White | successor | William_M_O_Dawson
    Albert_White | deathPlace | Parkersburg, West Virginia
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_M_O_Dawson
    Albert_White | successor | William_",10.731253862380981
1665,"
    Albert_White | deathCause | died
    Albert_White | deathPlace | Parkersburg, West Virginia
    Albert_White | successor | William_M_O_Dawson
    Albert_White | predecessor | None
    Albert_White | successorBy | None
    Albert_White | predecessorBy | None
    Albert_White | successorByName | None
    Albert_White | predecessorByName | None
    Albert_White | predecessorByPosition | None
    Albert_White | predecessorByTitle | None
    Albert_White | predecessorByTitlePosition | None
    Albert_White | predecessorByTitlePositionName | None
    Albert_White | predecessorByTitlePositionNamePosition | None
    Albert_White | predecessorByTitlePositionNamePositionName | None
    Albert_White | predecessorByTitlePositionNamePositionNamePosition | None
    Albert_White | predecessorByTitlePositionNamePositionNamePositionName | None
    Albert_White | predecessorByTitlePositionNamePositionNamePositionNamePosition | None
    Albert_White | predecessorByTitlePositionNamePositionNamePositionNamePositionName | None
    Albert_White | predecessorByTitlePositionNamePositionNamePositionNamePositionName",10.813084602355957
1666,"
    Albert_White | predecessor | William_M_O_Dawson
    Albert_White | deathPlace | Parkersburg, West Virginia
    Albert_White | deathDate | 
    Albert_White | deathCause | 
    Albert_White | birthDate | 
    Albert_White | birthPlace | 
    Albert_White | birthYear | 
    Albert_White | nationality | 
    Albert_White | selectedByNasa | 
    Albert_White | mission | 
    Albert_White | almaMater | 
    Albert_White | alternativeName | 
    Albert_White | birthDate | 
    Albert_White | birthPlace | 
    Albert_White | birthYear | 
    Albert_White | nationality | 
    Albert_White | selectedByNasa | 
    Albert_White | mission | 
    Albert_White | almaMater | 
    Albert_White | alternativeName | 
    Albert_White | birthDate | 
    Albert_White | birthPlace | 
    Albert_White | birthYear | 
    Albert_White | nationality | 
",10.74256181716919
1667,"
    Albert_Jennings_Fountain | passed_away | New_Mexico_Territory
    Albert_Jennings_Fountain | in_office | Edmund_J_Davis
    
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])

    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for entity in entities:
            for relation in relations:
                triple = entity +'|'+ relation +'|'+ sentence
                triples.append(triple)

    # Remove duplicates from the list of triples
    triples = list(set(triples))

    # Convert the list of triples to the desired output format
    output = []
    for triple in triples:
        entity1",10.741095304489136
1668,"
    Albert_Jennings_Fountain | 1stRunwaySurfaceType | concrete
    Albert_Jennings_Fountain | 2ndRunwaySurfaceType | concrete
    Albert_Jennings_Fountain | 3rdRunwaySurfaceType | concrete
    Albert_Jennings_Fountain | 4thRunwaySurfaceType | concrete
    Albert_Jennings_Fountain | LCCN_number | 0000095943
    Albert_Jennings_Fountain | NationalRegisterOfHistoricPlacesReferenceNumber | 0000095943
    Albert_Jennings_Fountain | abbreviation | A. J. F.
    Albert_Jennings_Fountain | academicDiscipline | architecture
    Albert_Jennings_Fountain | academicStaffSize | 1
    Albert_Jennings_Fountain | activeYearsEndDate | 1892
    Albert_Jennings_Fountain | activeYearsStartDate | 1892
    Albert_Jennings_Fountain | activeYearsStartYear | 1892
    Albert_Jennings_Fountain | addedToTheNationalRegisterOfHistoricPlaces | 1892
    Albert_Jennings_Fountain | address",10.882622957229614
1669,"
    Albert_Jennings_Fountain | politician | Vice_President_Edmund_J._Davis
    Albert_Jennings_Fountain | politician | New_Mexico_Territory
    Albert_Jennings_Fountain | politician | Vice_President_Edmund_J._Davis
    Albert_Jennings_Fountain | politician | New_Mexico_Territory
    Albert_Jennings_Fountain | politician | Vice_President_Edmund_J._Davis
    Albert_Jennings_Fountain | politician | New_Mexico_Territory
    Albert_Jennings_Fountain | politician | Vice_President_Edmund_J._Davis
    Albert_Jennings_Fountain | politician | New_Mexico_Territory
    Albert_Jennings_Fountain | politician | Vice_President_Edmund_J._Davis
    Albert_Jennings_Fountain | politician | New_Mexico_Territory
    Albert_Jennings_Fountain | politician | Vice_President_Edmund_J._Davis
    Albert_Jennings_Fountain | politician | New_Mexico_Territory
    Albert_Jennings_Fountain |",10.732537746429443
1670,"
    Alberto_Teisaire | deathCause | Buenos_Aires
    Alberto_Teisaire | leader | Diego_Santilli
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
",10.744911670684814
1671,"
    Diego_Santilli | leader | Buenos_Aires
    Alberto_Teisaire | place | Buenos_Aires
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(self.ontology.get_triple(example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the following methods:
    - get_triple(entity_1, relation, entity_2)
    - get_triples(sentence)
    - get_relations()
    - get_entities()
    - get_entity_by_name(name)
    - get_entity_by_id(id)
    - get_",10.742054224014282
1672,"
    Alfons_Gorbach | birthPlace | Tyrol,_Austria
    Alfons_Gorbach | nationality | Austria
    Alfons_Gorbach | birthDate | 1930-01-20
    Alfons_Gorbach | birthPlace | Tyrol,_Austria
    Alfons_Gorbach | alternativeName | Alfons Gorbach
    Alfons_Gorbach | almaMater | University of Innsbruck
    Alfons_Gorbach | academicStaffSize | 1
    Alfons_Gorbach | academicDiscipline | Physics
    Alfons_Gorbach | activeYearsEndDate | 2020-01-01
    Alfons_Gorbach | activeYearsStartDate | 2020-01-01
    Alfons_Gorbach | activeYearsStartYear | 2020
    Alfons_Gorbach | addedToTheNationalRegisterOfHistoricPlaces | 2020-01-01
    Alfons_Gorbach | address | Tyrol,_Austria
    Alfons_Gorbach | affiliation | University of Innsbruck
",10.73258900642395
1673,"
    Alfons_Gorbach | birthPlace | Tyrol_state,_Austria
    Alfons_Gorbach | nationality | Austria
    Alfons_Gorbach | selectedByNasa | 1963
    Alfons_Gorbach | mission | Apollo_11
    Alfons_Gorbach | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Alfons_Gorbach | birthDate | 1930-01-20
    Alfons_Gorbach | birthPlace | Tyrol_state,_Austria
    Alfons_Gorbach | birthYear | 1930
    Alfons_Gorbach | alternativeName | Alfons Gorbach
    Alfons_Gorbach | nationality | Austria
    Alfons_Gorbach | selectedByNasa | 1963
    Alfons_Gorbach | mission | Apollo_11
    Alfons_Gorbach | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Alfons_Gorbach | birthDate | 1930-01-20
    Alfons_Gorbach",10.736489057540894
1674,"
    Alfons_Gorbach | birthPlace | Tyrol,_Austria
    Alfons_Gorbach | nationality | Austria
    Alfons_Gorbach | birthDate | 1894-01-01
    Alfons_Gorbach | birthPlace | Tyrol,_Austria
    Alfons_Gorbach | birthYear | 1894
    Alfons_Gorbach | birthPlace | Tyrol,_Austria
    Alfons_Gorbach | birthDate | 1894-01-01
    Alfons_Gorbach | birthPlace | Tyrol,_Austria
    Alfons_Gorbach | birthYear | 1894
    Alfons_Gorbach | birthPlace | Tyrol,_Austria
    Alfons_Gorbach | birthDate | 1894-01-01
    Alfons_Gorbach | birthPlace | Tyrol,_Austria
    Alfons_Gorbach | birthYear | 1894
    Alfons_Gorbach | birthPlace | Tyrol,_Austria
    Alfons_Gor",10.756274223327637
1675,"
    Alfons_Gorbach | birthPlace | Austria
    Alfons_Gorbach | nationality | Austria
    Alfons_Gorbach | office | Adolf_Scharf
    Alfons_Gorbach | officeStartDate | 1945-01-01
    Alfons_Gorbach | officeEndDate | 1945-01-01
    Alfons_Gorbach | officeStartYear | 1945
    Alfons_Gorbach | officeEndYear | 1945
    Alfons_Gorbach | officeStartMonth | 01
    Alfons_Gorbach | officeStartDay | 01
    Alfons_Gorbach | officeEndMonth | 01
    Alfons_Gorbach | officeEndDay | 01
    Alfons_Gorbach | officeStartHour | 00
    Alfons_Gorbach | officeEndHour | 00
    Alfons_Gorbach | officeStartMinute | 00
    Alfons_Gorbach | officeEndMinute | 00
    Alfons_Gorbach | officeStartSecond | 00
    Alfons_G",10.733357429504395
1676,"
    Alfons_Gorbach | office | president
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(i+1, len(entities)):
            for relation in relations:
                triples.append(entities[i] +'|'+ relation +'|'+ entities[j])

    return triples


def extract_triples_from_sentence_with_relations(sentence, ontology):
    """"""
    Given the following ontology, examples and sentences, please extract the triples from the sentence according to the 
",10.766756057739258
1677,"
    Alfons_Gorbach | birthPlace | Austria
    Alfons_Gorbach | nationality | Austria
    Alfons_Gorbach | office | Adolf_Scharf
    Alfons_Gorbach | officeStartDate | 1945-01-01
    Alfons_Gorbach | officeEndDate | 1945-01-01
    Alfons_Gorbach | officeStartYear | 1945
    Alfons_Gorbach | officeEndYear | 1945
    Alfons_Gorbach | officeStartMonth | 01
    Alfons_Gorbach | officeStartDay | 01
    Alfons_Gorbach | officeEndMonth | 01
    Alfons_Gorbach | officeEndDay | 01
    Alfons_Gorbach | officeStartHour | 00
    Alfons_Gorbach | officeEndHour | 00
    Alfons_Gorbach | officeStartMinute | 00
    Alfons_Gorbach | officeEndMinute | 00
    Alfons_Gorbach | officeStartSecond | 00
    Alfons_G",10.735682487487793
1678,"
    Alfred_Phillips | birthPlace | Darien,_Connecticut
    Alfred_Phillips | birthDate | 1881-01-01
    Alfred_Phillips | birthPlace | Darien,_Connecticut
    Alfred_Phillips | birthDate | 1881-01-01
    Alfred_Phillips | birthPlace | Darien,_Connecticut
    Alfred_Phillips | birthDate | 1881-01-01
    Alfred_Phillips | birthPlace | Darien,_Connecticut
    Alfred_Phillips | birthDate | 1881-01-01
    Alfred_Phillips | birthPlace | Darien,_Connecticut
    Alfred_Phillips | birthDate | 1881-01-01
    Alfred_Phillips | birthPlace | Darien,_Connecticut
    Alfred_Phillips | birthDate | 1881-01-01
    Alfred_Phillips | birthPlace | Darien,_Connecticut
    Alfred_Phillips | birthDate | 1881-01-01
    Alf",10.717800855636597
1679,"
    Alfred_Phillips | mayor | Stamford,_Connecticut
    Alfred_Phillips | born | Darien,_Connecticut

    """"""
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more test sentences
    # TODO: add more test outputs
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TOD",10.735335350036621
1680,"
    Darien | birthPlace | Connecticut
    Alfred_N_Phillips | birthPlace | Connecticut
    Alfred_N_Phillips | alternativeName | Alfred N. Phillips
    Alfred_N_Phillips | nationality | United_States
    Alfred_N_Phillips | selectedByNasa | 1963
    Alfred_N_Phillips | mission | Apollo_11
    Alfred_N_Phillips | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Alfred_N_Phillips | birthDate | 1930-01-20
    Alfred_N_Phillips | birthPlace | Darien,_Connecticut
    Alfred_N_Phillips | birthYear | 1930
    Alfred_N_Phillips | address | Darien,_Connecticut
    Alfred_N_Phillips | affiliation | Alfred N. Phillips
    Alfred_N_Phillips | city | Darien,_Connecticut
    Alfred_N_Phillips | cityServed | Stamford,_Connecticut
    Alfred_N_Phillips",10.732935190200806
1681,"
    Alfred_Phillips | servedIn | United_States_Army
    Alfred_Phillips | servedIn | American_Civil_War
    Alfred_Phillips | servedIn | United_States_Army
    Alfred_Phillips | servedIn | American_Civil_War
    Alfred_Phillips | servedIn | United_States_Army
    Alfred_Phillips | servedIn | American_Civil_War
    Alfred_Phillips | servedIn | United_States_Army
    Alfred_Phillips | servedIn | American_Civil_War
    Alfred_Phillips | servedIn | United_States_Army
    Alfred_Phillips | servedIn | American_Civil_War
    Alfred_Phillips | servedIn | United_States_Army
    Alfred_Phillips | servedIn | American_Civil_War
    Alfred_Phillips | servedIn | United_States_Army
    Alfred_Phillips | servedIn | American_Civil_War
    Alfred_Phillips | servedIn | United_States_Army
",10.719243288040161
1682,"
    Alfred_Phillips | memberOf | US_Army
    Alfred_Phillips | foughtIn | American_Civil_War
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more tri",10.741076946258545
1683,"
    Alfred_Phillips | servedIn | United_States,_Army
    Alfred_Phillips | servedInTheArmy | United_States,_Army
    Alfred_Phillips | servedInTheArmyOfTheUnitedStates | United_States,_Army
    Alfred_Phillips | servedInTheUnitedStatesArmy | United_States,_Army
    Alfred_Phillips | servedInTheUnitedStatesArmyOfTheUnitedStates | United_States,_Army
    Alfred_Phillips | servedInTheUnitedStatesArmyOfTheUnitedStatesInTheAmericanCivilWar | United_States,_Army
    Alfred_Phillips | servedInTheUnitedStatesArmyInTheAmericanCivilWar | United_States,_Army
    Alfred_Phillips | servedInTheUnitedStatesArmyInTheAmericanCivilWarInTheUnitedStates | United_States,_Army
    Alfred_Phillips | servedInTheUnitedStatesArmyInTheAmericanCivilWarInTheUnitedStatesInTheUnitedStates | United_States,_Army
    Alfred_Phillips | servedInTheUnitedStatesArmyInTheAmericanCivilWarInThe",10.73157548904419
1684,"
    Allan_Shivers | 1stRunwaySurfaceType | asphalt
    Allan_Shivers | 2ndRunwaySurfaceType | asphalt
    Allan_Shivers | 3rdRunwaySurfaceType | asphalt
    Allan_Shivers | 4thRunwaySurfaceType | asphalt
    Allan_Shivers | LCCN_number | 0000091807
    Allan_Shivers | NationalRegisterOfHistoricPlacesReferenceNumber | 0000091807
    Allan_Shivers | abbreviation | AS
    Allan_Shivers | academicDiscipline | political science
    Allan_Shivers | academicStaffSize | 1
    Allan_Shivers | activeYearsEndDate | 2020-01-01
    Allan_Shivers | activeYearsStartDate | 2020-01-01
    Allan_Shivers | activeYearsStartYear | 2020
    Allan_Shivers | addedToTheNationalRegisterOfHistoricPlaces | 2020-01-01
    Allan_Shivers | address | P.O. Box 5555, Port Arthur, TX 77584
    Allan_Shivers |",10.730515003204346
1685,"
    Allan_Shivers | memberOf | Texas_State_Senate
    Allan_Shivers | memberOf | District_4
    Allan_Shivers | memberOf | Port_Arthur
    Allan_Shivers | memberOf | Texas
    Allan_Shivers | memberOf | State
    Allan_Shivers | memberOf | Senate
    Allan_Shivers | memberOf | Texas_State
    Allan_Shivers | memberOf | State_Senate
    Allan_Shivers | memberOf | Texas_State_Senate
    Allan_Shivers | memberOf | Texas_State_Senate
    Allan_Shivers | memberOf | Texas_State_Senate
    Allan_Shivers | memberOf | Texas_State_Senate
    Allan_Shivers | memberOf | Texas_State_Senate
    Allan_Shivers | memberOf | Texas_State_Senate
    Allan_Shivers | memberOf | Texas_State_Senate
    Allan_Shivers | memberOf | Texas_State_Senate
    Allan_Shivers | memberOf | Texas_State_Senate
    Allan",10.743237972259521
1686,"
    Allan_Shivers | memberOf | Texas_State_Senate_District_4
    Allan_Shivers | succeededBy | Ben_Ramsey
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple",10.736959457397461
1687,"
    Alvah_Sabin | secretaryOfState | Vermont
    Homer_Elihu_Royce | secretaryOfState | Vermont

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add",10.72239375114441
1688,"
    Alvah_Sabin | secretaryOfState | Vermont
    Alvah_Sabin | successor | Homer_Eliot_Royce
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2",10.810118436813354
1689,"
    Alvah_Sabin | secretaryOfState | Vermont
    Alvah_Sabin | successor | Homer_Elihu_Royce
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOf",10.73490023612976
1690,"
    AC_Cesena | league | Serie_B
    AC_Cesena | previousChampions | Carpi_FC_1909
    """"""
    
    # Create a dictionary to store the triples
    triples = {}

    # Split the sentence into words
    words = sentence.split()

    # Iterate through the words and extract the triples
    for i in range(len(words) - 2):
        # Get the first word
        entity_1 = words[i]

        # Get the relation
        relation = words[i+1]

        # Get the second word
        entity_2 = words[i+2]

        # Check if the relation is in the ontology
        if relation in ontology:
            # Check if the first and second words are in the ontology
            if entity_1 in ontology and entity_2 in ontology:
                # Add the triple to the dictionary
                triples[entity_1 +'' + relation +'' + entity_2] = True

    # Return the triples
    return triples

# Test the function
sentence = """,10.739996194839478
1691,"
    A.C._Cesena | playIn | Serie_B
    A.C._Cesena | playIn | Carpi_FC_1909
    A.C._Cesena | playIn | champions
    A.C._Cesena | playIn | Serie_B
    A.C._Cesena | playIn | Carpi_FC_1909
    A.C._Cesena | playIn | champions
    A.C._Cesena | playIn | Serie_B
    A.C._Cesena | playIn | Carpi_FC_1909
    A.C._Cesena | playIn | champions
    A.C._Cesena | playIn | Serie_B
    A.C._Cesena | playIn | Carpi_FC_1909
    A.C._Cesena | playIn | champions
    A.C._Cesena | playIn | Serie_B
    A.C._Cesena | playIn | Carpi_FC_1909
    A.C.",10.735008001327515
1692,"
    AC_Cesena | league | Serie_B
    AC_Cesena | wonBy | Carpi_F.C._1909
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('National",10.74295711517334
1693,"
    AC_Chievo_Verona | playIn | Serie_A_league
    AC_Chievo_Verona | homeGround | Stadio_Marc_Antonio_Bentegodi
    """"""
    
    # Get the triples from the sentence
    triples = get_triples(sentence)
    
    # Get the triples from the ontology
    ontology_triples = get_ontology_triples(ontology)
    
    # Get the triples from the sentence and the ontology
    all_triples = triples + ontology_triples
    
    # Filter the triples to only include the ones that are in the given output format
    filtered_triples = filter_triples(all_triples, output_format)
    
    # Return the filtered triples
    return filtered_triples

def filter_triples(triples, output_format):
    """"""
    Given a list of triples, filter the triples to only include the ones that are in the given output format
    """"""
    
    # Initialize an empty list to store",10.745813369750977
1694,"
    A.C._Chievo_Verona | homeGround | Stadio_Marc_Antonio_Bentegodi
    A.C._Chievo_Verona | league | Serie_A
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations",10.731154441833496
1695,"
    A.C._Chievo_Verona | homeGround | Stadio_Marc_Antonio_Bentegodi
    A.C._Chievo_Verona | playedIn | Serie_A
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('_')[0] in entities:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        for entity in entities:
            if entity.split('_')[0] == relation.split('_')[0]:
                triples.append(entity +'|'+ relation +'|'+ entity.split('_')[1])
    
    # Return the triples",10.743075847625732
1696,"
    A.C._Lumezzane | ground | Italy
    A.C._Lumezzane | leader | Pietro_Grasso
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate over the words and extract the triples
    for i in range(len(words) - 2):
        # Get the first word
        entity_1 = words[i]
        
        # Get the relation
        relation = words[i+1]
        
        # Get the second word
        entity_2 = words[i+2]
        
        # Add the triple to the dictionary
        triples[entity_1 +'' + relation +'' + entity_2] = True
    
    # Convert the dictionary to a list of triples
    triple_list = list(triples.keys())
    
    # Convert the list of triples to the desired output format
    output = []
    for triple in triple_list:
        entity_1",10.733622312545776
1697,"
    A.C._Lumezzane | sport | italy
    A.C._Lumezzane | leader | Pietro_Grasso
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple",10.739289999008179
1698,"
    A.C._Lumezzane | play | Italy
    A.C._Lumezzane | leader | Pietro_Grasso
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType') or relation.startswith('2ndRunwaySurfaceType') or relation.startswith('3rdRunwaySurfaceType') or relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(i+1, len(entities)):
            for relation in relations:
                triples.append(entities[i] +",10.737488746643066
1699,"
    Jorge_Humberto_Rodríguez | manages | A.D._Isidro_Metapan
    Jorge_Humberto_Rodríguez | playedFor | C.D._FAS
    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TOD",10.813602209091187
1700,"
    Jorge_Humberto_Rodriguez | manages | A.D._Isidro_Metapan
    Jorge_Humberto_Rodriguez | isIn | C.D._FAS
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and different entities and different entities and different entities and different entities
    # TODO: Add more triples with different relations and entities and",10.748332500457764
1701,"
    Jorge_Rodríguez | manages | A.D. Isidro Metapan
    Jorge_Rodríguez | plays | C.D. FAS

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]}",10.730434656143188
1702,"
    A.E. Dimitra Efxeinoupolis | membership | 1500
    A.E. Dimitra Efxeinoupolis | league | EPSTH 2nd GROUP
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    if relation in sentence:
                        triples.append((word, relation, sentence.split()[sentence.split().index(relation)+1]))
    
    # Return the triples in the given output format
    return triples

def get_triples_from_sentence_with_",10.75698447227478
1703,"
    A_E_Dimitra_Efxeinoupolis | membership | 1500
    A_E_Dimitra_Efxeinoupolis | team | A EPSTH 2nd GROUP
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {",10.75064730644226
1704,"
    AFC_Blackpool | manager | Stuart_Parker
    AFC_Blackpool | player | Runcorn_F.C_Halton
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('_')[0] in entities:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        entity1 = relation.split('_')[0]
        entity2 = relation.split('_')[1]
        triple = entity1 +'|'+ relation +'|'+ entity2
        triples.append(triple)
    
    # Return the list of triples
    return triples

# Test the function
sent",10.735188484191895
1705,"
    AFC_Blackpool | manager | Stuart_Parker
    AFC_Blackpool | footballPlayer | Runcorn_FC_Halton
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}",10.732961893081665
1706,"
    AFC_Blackpool | manager | Stuart_Parker
    AFC_Blackpool | playedFor | Runcorn_FC_Halton
    
    """"""
    
    # Split the sentence into words
    words = sentence.split()
    
    # Initialize an empty list to store the triples
    triples = []
    
    # Iterate over the words in the sentence
    for i in range(len(words)):
        
        # Check if the word is a proper noun
        if words[i].istitle():
            
            # Check if the next word is a relation
            if i+1 < len(words) and words[i+1] in relations:
                
                # Check if the next word is another proper noun
                if i+2 < len(words) and words[i+2].istitle():
                    
                    # Extract the triples
                    triple = words[i] +'|'+ words[i+1] +'|'+ words[i+2]
                    triples.append(triple)
    
    # Return the triples
    return tri",10.731913328170776
1707,"
    AFC_Blackpool | manager | Stuart_Parker
    AFC_Blackpool | playsAt | Sparta_Rotterdam
    Stuart_Parker | footballer | Sparta_Rotterdam
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate through the words and extract the triples
    for i in range(len(words)):
        if words[i] in relations:
            # Get the entity 1
            entity1 = words[i-1]
            
            # Get the relation
            relation = words[i]
            
            # Get the entity 2
            if i+1 < len(words):
                entity2 = words[i+1]
            else:
                entity2 = None
            
            # Add the triple to the dictionary
            triples[entity1 +'' + relation +'' + entity2] = None
    
    # Return the triples
    return triples

def extract_triples_from_",10.751819372177124
1708,"
    Stuart_Parker | name | Sparta_Rotterdam_Club
    Stuart_Parker | name | AFC_Blackpool
    Stuart_Parker | name | Sparta_Rotterdam_Club
    Stuart_Parker | name | AFC_Blackpool
    Stuart_Parker | name | Sparta_Rotterdam_Club
    Stuart_Parker | name | AFC_Blackpool
    Stuart_Parker | name | Sparta_Rotterdam_Club
    Stuart_Parker | name | AFC_Blackpool
    Stuart_Parker | name | Sparta_Rotterdam_Club
    Stuart_Parker | name | AFC_Blackpool
    Stuart_Parker | name | Sparta_Rotterdam_Club
    Stuart_Parker | name | AFC_Blackpool
    Stuart_Parker | name | Sparta_Rotterdam_Club
    Stuart_Parker | name | AFC_Blackpool
    Stuart_Parker | name | Sparta_Rotterdam_Club
    Stuart_Parker | name | AFC_Blackpool",10.740629434585571
1709,"
    AFC_Blackpool | manager | Stuart_Parker
    AFC_Blackpool | currentClub | Sparta_Rotterdam
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")",10.73488974571228
1710,"
    AFC_Fylde | homeGround | The_Fylde
    AFC_Fylde | members | 3180
    """"""
    
    # Split the sentence into words
    words = sentence.split()
    
    # Initialize an empty list to store the triples
    triples = []
    
    # Loop through the words in the sentence
    for i in range(len(words)):
        # If the word is a noun, check if it is a proper noun
        if words[i].istitle():
            # If it is a proper noun, check if it is in the ontology
            if words[i] in ontology:
                # If it is in the ontology, check if the next word is a relation
                if i+1 < len(words) and words[i+1] in relations:
                    # If the next word is a relation, check if the next word is a noun
                    if i+2 < len(words) and words[i+2] in ontology:
                        # If the next word is a noun, add the triple to the list
                        triples.append",10.808616876602173
1711,"
    AFC_Fylde | homeGround | The_Fylde
    AFC_Fylde | capacity | 3180
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
",10.712973356246948
1712,"
    Fylde | capacity | 3180
    AFC Fylde | homeGround | Fylde
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.67658805847168
1713,"
    A.F.C. Fylde | membership | 3180
    A.F.C. Fylde | location | Bryning Lane

    """"""
    # TODO: add more test cases
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more ontology
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more ontology
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more ontology
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more ontology
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more ontology
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add",10.736074686050415
1714,"
    AFC_Fylde | membership | 3180
    AFC_Fylde | location | Bryning Lane
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('_')[0] in entities:
            relations.append(relation)

    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        for entity in entities:
            if entity.split('_')[0] == relation.split('_')[0]:
                triples.append(entity +'|'+ relation +'|'+ entity.split('_')[1])

    return triples

def get_triples_from_sentence_with_relations(sentence, ontology):
    """"""
    Given the following ont",10.713128089904785
1715,"
    AFC_Fylde | sport | Bryning_Lane
    AFC_Fylde | sport | 3180
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(self.ontology.get_triple(example, relation, sentence))
        return triples

    def get_triples(self):
        return self.extract_triples()


class Ontology:
    """"""
    This class is used to represent the ontology. It contains the relations and the entities.
    """"""
    def __init__(self, relations, entities):
        self.relations = relations
        self.entities = entities

    def get_triple(self, entity, relation, sentence):
        """"""",10.733152627944946
1716,"
    A.S._Livorno_Calcio | manager | Christian_Panucci
    A.S._Livorno_Calcio | player | Italy_national_football_team

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {tri",10.73026704788208
1717,"
    A.S._Livorno_Calcio | manager | Christian_Panucci
    A.S._Livorno_Calcio | playedFor | Italy_national_football_team
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation",10.732881307601929
1718,"
    A.S._Livorno_Calcio | manager | Christian_Panucci
    A.S._Livorno_Calcio | playedFor | Italian_national_football_team
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation",10.7542405128479
1719,"
    A.S. Roma | location | Rome, Italy
    A.S. Roma | location | Italy
    A.S. Roma | location | Rome
    A.S. Roma | location | Italy
    A.S. Roma | location | Rome
    A.S. Roma | location | Italy
    A.S. Roma | location | Rome
    A.S. Roma | location | Italy
    A.S. Roma | location | Rome
    A.S. Roma | location | Italy
    A.S. Roma | location | Rome
    A.S. Roma | location | Italy
    A.S. Roma | location | Rome
    A.S. Roma | location | Italy
    A.S. Roma | location | Rome
    A.S. Roma | location | Italy
    A.S. Roma | location | Rome
    A.S. Roma | location | Italy
    A.S. Roma | location | Rome
    A.S. Roma | location | Italy
    A.S. Roma | location | Rome
    A.S. Roma | location | Italy
    A.S. Roma | location | Rome
",10.74337387084961
1720,"
    A.S._Roma | playIn | Serie_A_league
    A.S._Roma | ground | Rome,_Italy
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}",10.735283136367798
1721,"
    A.S._Roma | ground | Rome,_Italy
    A.S._Roma | play | Serie_A
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different entities and relations
    # TODO: Add more triples with different entities and relations and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different entities and different relations
    # TOD",10.801840782165527
1722,"
    ACF_Fiorentina | playIn | Serie_A
    ACF_Fiorentina | basedIn | Italy
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}",10.73289966583252
1723,"
    ACF_Fiorentina | sport | Serie_A
    ACF_Fiorentina | country | Italy
    """"""
    def __init__(self, ontology_file, output_file):
        self.ontology = Ontology(ontology_file)
        self.output_file = output_file

    def run(self):
        with open(self.output_file, 'w') as f:
            for sentence in self.ontology.sentences:
                for triple in self.extract_triples(sentence):
                    f.write(triple + '\n')

    def extract_triples(self, sentence):
        triples = []
        for word in sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word].relations:
                    for concept in self.ontology.concepts[word].relations[relation]:
                        triples.append(concept +'|'+ relation +'|'+ word)
        return triples

if __name__ == '__main__':
",10.744578838348389
1724,"
    AFC_Ajax | manager | Frank_de_Boer
    AFC_Ajax | inTheAjaxYouthAcademy | Ajax_Youth_Academy
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} |",10.742494344711304
1725,"
    AFC_Ajax | manager | Frank_de_Boer
    AFC_Ajax | playedFor | Ajax_Youth_Academy

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases",10.732747793197632
1726,"
    Frank_deBoer | isIn | Ajax_Youth_Academy
    Frank_deBoer | manages | AFC_Ajax
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}",10.738654375076294
1727,"
    AFC_Ajax | membership | 53502
    AFC_Ajax | owner | AFC Ajax NV
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])

    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for entity in entities:
            for relation in relations:
                triple = entity +'|'+ relation +'|'+ sentence
                triples.append(triple)

    # Return the triples in the given output format
    return triples

# Test the function
sentences = ['Edwin E. Aldrin Jr, also known as Buzz Aldrin, is an American born on Jan 20, 1930 in Glen Ridge, New Jersey. He graduated from MIT in 1962 with a doctorate in",10.746516466140747
1728,"
    AFC_Ajax | membership | 53502
    AFC_Ajax | owner | AFC Ajax NV
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReference",10.73699688911438
1729,"
    AFC_Ajax | membership | 53502
    AFC_Ajax | owner | AFC Ajax N.V.
    """"""
    def __init__(self, ontology, examples, output_format):
        self.ontology = ontology
        self.examples = examples
        self.output_format = output_format

    def extract_triples(self, sentence):
        """"""
        Extract triples from the given sentence according to the relations in the ontology.
        In the output, only include the triples in the given output format

        Input:
        sentence: string

        Output:
        triples: list of triples
        """"""
        triples = []
        for example in self.examples:
            for relation in self.ontology.relations:
                if relation in example:
                    triples.append(self.get_triple(sentence, example, relation))
        return triples

    def get_triple(self, sentence, example, relation):
        """"""
        Get the triple from the given sentence according to the relation in the ontology

        Input:",10.728139638900757
1730,"
    AFC_Ajax | location | Amsterdam
    AFC_Ajax | leader | Eberhard_van_der_Laan
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate through the words and extract the triples
    for i in range(len(words)):
        if words[i] in relations:
            # Get the entity 1
            entity_1 = words[i-1]
            
            # Get the relation
            relation = words[i]
            
            # Get the entity 2
            if i+1 < len(words):
                entity_2 = words[i+1]
            else:
                entity_2 = None
            
            # Add the triple to the dictionary
            triples[(entity_1, relation, entity_2)] = True
    
    return triples

# Test the function
sentence = ""AFC Ajax is based in Amsterdam where the leader is Eberhard van der Laan.""
relations",10.727468490600586
1731,"
    AFC_Ajax | ground | amateurs
    AFC_Ajax | leader | Eberhard_van_der_Laan
    AFC_Ajax | Amsterdam | Eberhard_van_der_Laan
    AFC_Ajax | Eberhard_van_der_Laan | Amsterdam
    AFC_Ajax | Amsterdam | amateurs
    AFC_Ajax | amateurs | Eberhard_van_der_Laan
    AFC_Ajax | Eberhard_van_der_Laan | amateurs
    AFC_Ajax | amateurs | Amsterdam
    AFC_Ajax | amateurs | Eberhard_van_der_Laan
    AFC_Ajax | amateurs | Amsterdam
    AFC_Ajax | amateurs | Eberhard_van_der_Laan
    AFC_Ajax | amateurs | Amsterdam
    AFC_Ajax | amateurs | Eberhard_van_der_Laan
    AFC_Ajax | amateurs | Amsterdam
    AFC_",10.72852897644043
1732,"
    AFC_Ajax | sportGoverningBody | AFC Ajax
    AFC_Ajax | sportGoverningBody | Eberhard_van_der_Laan
    AFC_Ajax | sportGoverningBody | Amsterdam
    AFC_Ajax | sportGoverningBody | Netherlands
    AFC_Ajax | sportGoverningBody | Eberhard_van_der_Laan | Amsterdam
    AFC_Ajax | sportGoverningBody | Eberhard_van_der_Laan | Netherlands
    AFC_Ajax | sportGoverningBody | Eberhard_van_der_Laan | Amsterdam | Netherlands
    AFC_Ajax | sportGoverningBody | Eberhard_van_der_Laan | Amsterdam | Netherlands | Netherlands
    AFC_Ajax | sportGoverningBody | Eberhard_van_der_Laan | Amsterdam | Netherlands | Netherlands | Netherlands
    AFC_Ajax | sportGoverningBody | Eberhard_van_der_Laan | Amsterdam | Netherlands | Netherlands | Netherlands | Netherlands",10.736975193023682
1733,"
    AFC_Ajax | sport | amateurs
    AFC_Ajax | sport | 5000
    AFC_Ajax | sport | Topklasse
    AFC_Ajax | sport | 2014-2015
    AFC_Ajax | sport | 2015-2016
    AFC_Ajax | sport | 2016-2017
    AFC_Ajax | sport | 2017-2018
    AFC_Ajax | sport | 2018-2019
    AFC_Ajax | sport | 2019-2020
    AFC_Ajax | sport | 2020-2021
    AFC_Ajax | sport | 2021-2022
    AFC_Ajax | sport | 2022-2023
    AFC_Ajax | sport | 2023-2024
    AFC_Ajax | sport | 2024-2025
    AFC_Ajax | sport | 2025-2026
    AFC_Ajax | sport | 2026-2027
    AFC_Ajax | sport | 2027-2028
    AFC_Ajax | sport",10.811774253845215
1734,"
    AFC_Ajax | sport | amateurs
    AFC_Ajax | sport | Topklasse
    AFC_Ajax | sport | 2014-2015
    AFC_Ajax | sport | 2015-2016
    AFC_Ajax | sport | 2016-2017
    AFC_Ajax | sport | 2017-2018
    AFC_Ajax | sport | 2018-2019
    AFC_Ajax | sport | 2019-2020
    AFC_Ajax | sport | 2020-2021
    AFC_Ajax | sport | 2021-2022
    AFC_Ajax | sport | 2022-2023
    AFC_Ajax | sport | 2023-2024
    AFC_Ajax | sport | 2024-2025
    AFC_Ajax | sport | 2025-2026
    AFC_Ajax | sport | 2026-2027
    AFC_Ajax | sport | 2027-2028
    AFC_Ajax | sport | 2028-2029
    AFC_A",10.73074722290039
1735,"
    AFC_Ajax | sport | Topklasse
    AFC_Ajax | sport | amateur
    AFC_Ajax | sport | football
    AFC_Ajax | sport | association
    AFC_Ajax | sport | club
    AFC_Ajax | sport | team
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    AFC_Ajax | sport | sport
    ",10.749942541122437
1736,"
    AZAL_Arena | location | Shuvalan
    AZAL_Arena | building | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument | Shuvalan
    AZAL_Arena | monument",10.721888542175293
1737,"
    AZAL_Arena | location | Shuvalan
    AZAL_Arena | ground | AZAL PFK
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReference",10.71581244468689
1738,"
    AZAL_Arena | ground | AZAL_PFK
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReferenceNumber'):
            relations.append(relation)
",10.731959342956543
1739,"
    AZ_Alkmaar | fullName | Alkmaar Zaanstreek
    AZ_Alkmaar | members | 17023
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")",10.728326559066772
1740,"
    AZ_Alkmaar | membership | 17023
    AZ_Alkmaar | fullName | ""Alkmaar Zaanstreek""
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate over the words and extract the triples
    for i in range(len(words) - 2):
        # Get the first word
        entity_1 = words[i]
        
        # Get the relation
        relation = words[i+1]
        
        # Get the second word
        entity_2 = words[i+2]
        
        # Add the triple to the dictionary
        triples[entity_1 +'' + relation +'' + entity_2] = True
    
    # Return the triples
    return triples

def extract_triples_from_sentence_with_relations(sentence, relations):
    """"""
    Given the following ontology, examples and sentences, please extract the triples from the sentence according to the",10.73088026046753
1741,"
    AZ_Alkmaar | fullName | Alkmaar Zaanstreek
    AZ_Alkmaar | members | 17023
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the entities.
    """"""
    def __init__(self, relations, entities):
        self.relations = relations
        self.entities = entities

    def get_relations(self):
        return self.relations

    def get_entities(self):
        return self.entities


class Relation:
    """"""
    This class represents the relation.",10.754056215286255
1742,"
    Agremiacao_Sportiva_Arapiraquense | ground | Estadio_Municipal_Coaracy_da_Mata_Fonseca
    Agremiacao_Sportiva_Arapiraquense | location | Brazil
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.",10.727651596069336
1743,"
    Estádio_Municipal_Coaracy_da_Mata_Fonseca | ground | Agremiação_Sportiva_Arapiraquense
    Estádio_Municipal_Coaracy_da_Mata_Fonseca | location | Brazil
    Estádio_Municipal_Coaracy_da_Mata_Fonseca | ground | Agremiação_Sportiva_Arapiraquense
    Estádio_Municipal_Coaracy_da_Mata_Fonseca | ground | Agremiação_Sportiva_Arapiraquense
    Estádio_Municipal_Coaracy_da_Mata_Fonseca | ground | Agremiação_Sportiva_Arapiraquense
    Estádio_Municipal_Coaracy_da_Mata_Fonseca | ground | Agremiação_Sportiva_Arapiraquense
    Estádio_Municipal_Coaracy_da_Mata_Fonsec",10.731287002563477
1744,"
    Estádio_Municipal_Coaracy_da_Mata_Fonseca | ground | Agremiação_Sportiva_Arapiraquense
    Estádio_Municipal_Coaracy_da_Mata_Fonseca | ground | Brazil
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append(entity1 + "" | "" + relation + "" | "" + entity2)
    
    # Return the triples in the given",10.810817241668701
1745,"
    Agremiação_Sportiva_Arapiraquense | clubMember | 17000
    Agremiação_Sportiva_Arapiraquense | clubMember | 17000
    Agremiação_Sportiva_Arapiraquense | clubMember | 17000
    Agremiação_Sportiva_Arapiraquense | clubMember | 17000
    Agremiação_Sportiva_Arapiraquense | clubMember | 17000
    Agremiação_Sportiva_Arapiraquense | clubMember | 17000
    Agremiação_Sportiva_Arapiraquense | clubMember | 17000
    Agremiação_Sportiva_Arapiraquense | clubMember | 17000
    Agremiação_Sportiva_Arapiraquense | clubMember | 17000
    Agremiação_Sportiva_Arapiraquense | clubMember | 17000
    Agremiação_Sportiva_Arapiraquense | clubMember | 17000
    Agremiação_Sportiva_Arapira",10.742115259170532
1746,"
    Agremiação_Sportiva_Arapiraquense | fullName | Agremiação_Sportiva_Arapiraquense
    Agremiação_Sportiva_Arapiraquense | members | 17000
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number",10.748536825180054
1747,"
    Akron_Summit_Assault | team | Akron_Summit_Assault
    Akron_Summit_Assault | location | Akron,_Ohio,_USA
    Akron_Summit_Assault | city | Akron
    Akron_Summit_Assault | state | Ohio
    Akron_Summit_Assault | country | USA

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO",10.726691246032715
1748,"
    Akron_Summit_Assault | team | Akron_Summit_Assault
    Akron_Summit_Assault | location | Akron,_Ohio
    Akron_Summit_Assault | location | United_States

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TOD",10.733555316925049
1749,"
    Akron_Summit_Assault | team | Akron_Summit_Assault
    Akron_Summit_Assault | location | Akron,_Ohio
    Akron_Summit_Assault | country | United_States
    Akron_Summit_Assault | city | Akron
    Akron_Summit_Assault | state | Ohio
    Akron_Summit_Assault | state | United_States
    Akron_Summit_Assault | city | Akron
    Akron_Summit_Assault | state | Ohio
    Akron_Summit_Assault | state | United_States
    Akron_Summit_Assault | city | Akron
    Akron_Summit_Assault | state | Ohio
    Akron_Summit_Assault | state | United_States
    Akron_Summit_Assault | city | Akron
    Akron_Summit_Assault | state | Ohio
    Akron_Summit_Assault | state | United_States
    Akron_Summit_Assault | city | Akron
    Akron_Summit_Assault | state |",10.730261325836182
1750,"
    Massimo_Drago | club | S.S. Chieti_Calcio
    Massimo_Drago | manages | A.C. Cesena
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple",10.719477415084839
1751,"
    Massimo_Drago | manages | A.C._Cesena
    Massimo_Drago | plays | S.S._Chieti_Calcio
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different entities and relations
    # TODO: Add more triples with different entities and relations and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and",10.728148221969604
1752,"
    Acharya_Institute_of_Technology | campus | Soldevanahalli, Acharya Dr. Sarvapalli Radhakrishnan Road, Hessarghatta Main Road, Bangalore – 560090
    Acharya_Institute_of_Technology | director | Dr. G. P. Prabhukumar
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    ",10.733855962753296
1753,"
    Acharya_Institute_of_Technology | director | Dr. G P Prabhukumar
    Acharya_Institute_of_Technology | campus | In Soldevanahalli, Acharya Dr. Sarvapalli Radhakrishnan Road, Hessarghatta Main Road, Bangalore - 560090
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('|')[0] in entities:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        entity1 = relation.split('|')[0]
        entity2 = relation.split('|')[2]
        triples.append(entity1 +'|'+ relation + '",10.727579832077026
1754,"
    Acharya_Institute_of_Technology | status | Technical_Campus
    Acharya_Institute_of_Technology | colour | blue, white, orange
    Acharya_Institute_of_Technology | schoolColour | blue, white, orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue, white, orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue, white, orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue, white, orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue, white, orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue, white, orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue, white, orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue, white, orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue, white, orange
    Acharya_Institute_of_",10.737966299057007
1755,"
    Acharya_Institute_of_Technology | officialSchoolColour | blue
    Acharya_Institute_of_Technology | officialSchoolColour | white
    Acharya_Institute_of_Technology | officialSchoolColour | orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue
    Acharya_Institute_of_Technology | officialSchoolColour | white
    Acharya_Institute_of_Technology | officialSchoolColour | orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue
    Acharya_Institute_of_Technology | officialSchoolColour | white
    Acharya_Institute_of_Technology | officialSchoolColour | orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue
    Acharya_Institute_of_Technology | officialSchoolColour | white
    Acharya_Institute_of_Technology | officialSchoolColour | orange
    Acharya_Institute_of_Technology | officialSchoolColour | blue
    Acharya_Institute_",10.806047201156616
1756,"
    Acharya_Institute_of_Technology | officialColour | blue, white and orange
    Acharya_Institute_of_Technology | technicalCampusStatus | Technical_Campus
    Acharya_Institute_of_Technology | allIndiaCouncilForTechnicalEducation | All_India_Council_for_Technical_Education
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('_')[0] in entities:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        for entity in entities:
            if entity.split('_')[0] == relation.split('_')[0]:
                triples.append(entity +'|'+",10.729281187057495
1757,"
    Acharya_Institute_of_Technology | sport | International_Tennis_Federation
    Acharya_Institute_of_Technology | sport | tennis
    Acharya_Institute_of_Technology | sport | school
    Acharya_Institute_of_Technology | sport | tennis
    Acharya_Institute_of_Technology | sport | International_Tennis_Federation
    Acharya_Institute_of_Technology | sport | tennis
    Acharya_Institute_of_Technology | sport | school
    Acharya_Institute_of_Technology | sport | International_Tennis_Federation
    Acharya_Institute_of_Technology | sport | tennis
    Acharya_Institute_of_Technology | sport | school
    Acharya_Institute_of_Technology | sport | International_Tennis_Federation
    Acharya_Institute_of_Technology | sport | tennis
    Acharya_Institute_of_Technology | sport | school
    Acharya_Institute_of_Technology | sport | International_Tennis_Federation
    ",10.717783451080322
1758,"
    Tennis | sport | International Tennis Federation
    Tennis | sport | Acharya Institute of Technology
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.712321758270264
1759,"
    School_of_Business_and_Social_Sciences | affiliation | European_University_Association
    European_University_Association | headquarters | Brussels
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(self.ontology.get_triple(example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the following methods:
    - get_triple(entity_1, relation, entity_2)
    - get_triples(sentence)
    - get_relations()
    - get_entities()
    - get_entity_by_name(name)
    - get_entity_by_id(id",10.751181840896606
1760,"
    School_of_Business_and_Social_Sciences | affiliation | European_University_Association
    School_of_Business_and_Social_Sciences | affiliationType | European_University_Association
    School_of_Business_and_Social_Sciences | affiliationType | European_University_Association
    School_of_Business_and_Social_Sciences | affiliationType | European_University_Association
    School_of_Business_and_Social_Sciences | affiliationType | European_University_Association
    School_of_Business_and_Social_Sciences | affiliationType | European_University_Association
    School_of_Business_and_Social_Sciences | affiliationType | European_University_Association
    School_of_Business_and_Social_Sciences | affiliationType | European_University_Association
    School_of_Business_and_Social_Sciences | affiliationType | European_University_Association
    School_of_Business_and_Social_Sciences | affiliationType | European_University_Association
    School_of_Business",10.732813596725464
1761,"
    School_of_Business_and_Social_Sciences | affiliation | European_University_Association
    School_of_Business_and_Social_Sciences | location | Brussels
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('|')[0] in entities:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        entity1 = relation.split('|')[0]
        entity2 = relation.split('|')[2]
        triples.append(entity1 +'|'+ relation +'|'+ entity2)
    
    # Return the list of triples
    return triples
```

Exercise",10.75126576423645
1762,"
    Acharya_Institute_of_Technology | location | Karnataka
    Acharya_Institute_of_Technology | location | Arabian_Sea
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | state
    Acharya_Institute_of_Technology | location | Karnataka
    Acharya_Institute_of_Technology | location | state
    Acharya_Institute_of_Technology | location | Karnataka
    Acharya_Institute_of_Technology | location | state
    Acharya_Institute_of_Technology | location | Karnataka
    Acharya_Institute_of_Technology | location | state
    Acharya_Institute_of_Technology | location | Karnataka
    Acharya_Institute_of_Technology | location | state
    Acharya_Institute_of_Technology | location | Karnataka
    Acharya_Institute_of_Technology | location | state
    Acharya_Institute_of_Technology | location | Karnataka
    Acharya_Inst",10.726702213287354
1763,"
    Acharya_Institute_of_Technology | state | Karnataka
    Acharya_Institute_of_Technology | location | ArabianSea
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location | west
    Acharya_Institute_of_Technology | location",10.74210238456726
1764,"
    Acharya_Institute_of_Technology | location | stateOfOrigin | west | Arabian_Sea
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(self.ontology.get_triple(example, sentence, relation))
        return triples

    def get_triples(self):
        return self.extract_triples()


class Ontology:
    """"""
    This class represents an ontology. It contains the following methods:
    - get_triple(entity_1, sentence, relation)
    - get_triples(sentences)
    - get_relations(entity_1)
    - get_entities(relation)
    - get_entities_by_relation(",10.731709718704224
1765,"
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    1634 | crisis | BavarianCrisis
    16",10.732800006866455
1766,"
    1634 | BavarianCrisis | GrantvilleGazetteIII
    1634 | BavarianCrisis | VirginiaDeMarce
    1634 | BavarianCrisis | EricFlint
    1634 | GrantvilleGazetteIII | VirginiaDeMarce
    1634 | GrantvilleGazetteIII | EricFlint

    """"""
    # TODO: add more relations
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more triples from the sentence
    # TODO: add more triples from the ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    #",10.807062864303589
1767,"
    Eric_Flint | author | 1634: The Ram Rebellion
    1634: The Ram Rebellion | book | Eric_Flint
    1634: The Ram Rebellion | e_book | Eric_Flint
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} |",10.737377643585205
1768,"
    Ram | RamRebellion | 1634
    Ram | RamRebellion | available
    Ram | RamRebellion | as
    Ram | RamRebellion | an
    Ram | RamRebellion | E-Book
    Ram | RamRebellion | is
    Ram | RamRebellion | written
    Ram | RamRebellion | by
    Ram | RamRebellion | EricFlint

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more triples",10.739337682723999
1769,"
    1634 | Ram_Rebellion | written_by | Eric_Flint
    1634 | Ram_Rebellion | hardcover | 
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}",10.743846416473389
1770,"
    1634: The Ram Rebellion | title | book
    1634: The Ram Rebellion | author | Eric Flint
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.734264612197876
1771,"
    Ram_Rebellion | event | 1634
    Ram_Rebellion | author | Eric_Flint
    Ram_Rebellion | title | The Ram Rebellion
    Ram_Rebellion | publisher | available in hardcover
    Ram_Rebellion | year | 1634
    Ram_Rebellion | genre | science_fiction
    Ram_Rebellion | language | English
    Ram_Rebellion | format | hardcover
    Ram_Rebellion | publisher | available in hardcover
    Ram_Rebellion | publisher | available in hardcover
    Ram_Rebellion | publisher | available in hardcover
    Ram_Rebellion | publisher | available in hardcover
    Ram_Rebellion | publisher | available in hardcover
    Ram_Rebellion | publisher | available in hardcover
    Ram_Rebellion | publisher | available in hardcover
    Ram_Rebellion | publisher | available in hardcover
    Ram_Rebellion | publisher | available in hardcover
    Ram_Rebellion | publisher | available in hardcover
    Ram_Rebellion | publisher | available in hardcover
",10.741936206817627
1772,"
    ACM_Transactions_on_Information_Systems_with_the_CODEN_ATISET | abbreviation | ACM_Transactions_on_Information_Systems_with_the_CODEN_ATISET
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    triples.append((word, relation, word))
    
    # Filter out the triples that do not match the relations in the ontology
    filtered_triples = []
    for triple in triples:
        if triple[1] in",10.749210834503174
1773,"
    ACM_Transactions_on_Information_Systems | CODEN_code | ATISET
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology
    # TODO",10.727398872375488
1774,"
    AIDS_journal | journal | United_Kingdom
    AIDS_journal | leader | Elizabeth_II
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.split('_')[0] in entities:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence according to the relations in the ontology
    triples = []
    for relation in relations:
        entity1 = relation.split('_')[0]
        entity2 = relation.split('_')[1]
        triples.append(entity1 +'|'+ relation +'|'+ entity2)
    
    return triples

# Test the function
sentence = ""AIDS journal is from the United Kingdom whose leader is Elizabeth II.""
print(extract_triples(ont",10.732155799865723
1775,"
    AIDS_journal | publishedIn | United_Kingdom
    AIDS_journal | leader | Elizabeth_II

    """"""
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more",10.747136116027832
1776,"
    AIDS_journal | publishedIn | United_Kingdom
    Elizabeth_II | leader | United_Kingdom
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        triple = []
        for word in sentence.split():
            if word in example.split():
                triple.append(word)
        if len(triple) == 3:
            triple.append(relation)
        return triple


class Ontology:
    """"""
    This class represents an ontology. It contains the relations and the concepts.
    """"""
    def __init__(self, relations",10.745496034622192
1777,"
    Fortress_of_Grey_Ice | writtenBy | J. V. Jones
    Fortress_of_Grey_Ice | hasISBN | 0-7653-0633-6
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add",10.736620664596558
1778,"
    J.V.Jones | author | A Fortress of Grey Ice
    A Fortress of Grey Ice | book | 0-7653-0633-6
    A Fortress of Grey Ice | ISBN | 0-7653-0633-6
    """"""
    def __init__(self, ontology_file, sentence):
        self.ontology = Ontology(ontology_file)
        self.sentence = sentence

    def extract_triples(self):
        triples = []
        for word in self.sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word].relations:
                    for concept in self.ontology.concepts[word].relations[relation]:
                        triples.append((word, relation, concept))
        return triples

class Ontology:
    """"""
    This class represents the ontology. It contains the concepts and relations.
    """"""
    def __init__(self, ontology_file):
        self.concepts = {}
        self.relations = {}
        self.load_ontology(",10.80733323097229
1779,"
    J. V. Jones | author | A Fortress of Grey Ice
    A Fortress of Grey Ice | book | ISBN number 0-7653-0633-6
    ISBN number 0-7653-0633-6 | book | A Fortress of Grey Ice
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        ",10.733495473861694
1780,"
    GlastonburyRomance | ISBN_number | 0-7156-3648-0
    GlastonburyRomance | inPrint | True
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more",10.745120525360107
1781,"
    GlastonburyRomance | ISBN_number | 0-7156-3648-0
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable | availableInPrint
    GlastonburyRomance | printable |",10.73687195777893
1782,"
    ISBN_number | 0-7156-3648-0
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology
    # TODO: Add more triples from the sentence",10.740429162979126
1783,"
    GlastonburyRomance | ISBN_number | 0-7156-3648-0
    GlastonburyRomance | publishedIn | hardcover
    GlastonburyRomance | identifiedBy | ISBN_number
    GlastonburyRomance | published | in hardcover
    GlastonburyRomance | identifiedBy | ISBN_number
    GlastonburyRomance | published | in hardcover
    GlastonburyRomance | identifiedBy | ISBN_number
    GlastonburyRomance | published | in hardcover
    GlastonburyRomance | identifiedBy | ISBN_number
    GlastonburyRomance | published | in hardcover
    GlastonburyRomance | identifiedBy | ISBN_number
    GlastonburyRomance | published | in hardcover
    GlastonburyRomance | identifiedBy | ISBN_number
    GlastonburyRomance | published | in hardcover
    GlastonburyRomance | identifiedBy | ISBN_number
    GlastonburyRomance | published | in hardcover
    GlastonburyRomance | identifiedBy | ISBN_number
    GlastonburyRomance | published | in hardcover
    GlastonburyRom",10.74906873703003
1784,"
    GlastonburyRomance | hardcover | 0-7156-3648-0

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO",10.7348051071167
1785,"
    A_Glastonbury_Romance | ISBN_number | 0-7156-3648-0
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TOD",10.737158298492432
1786,"
    GlastonburyRomance | numberOfPages | 1174
    GlastonburyRomance | availableInPrint | True
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output",10.731414318084717
1787,"
    GlastonburyRomance | book | A Glastonbury Romance
    GlastonburyRomance | book | currentlyInPrint
    GlastonburyRomance | book | has1174Pages
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book | inPrint
    GlastonburyRomance | book |",10.749786615371704
1788,"
    GlastonburyRomance | title | A Glastonbury Romance
    GlastonburyRomance | publicationYear | 1174
    GlastonburyRomance | publisher | availableInPrint
    GlastonburyRomance | numberOfPages | 1174
    GlastonburyRomance | language | English
    GlastonburyRomance | genre | Romance
    GlastonburyRomance | author | unknown
    GlastonburyRomance | yearOfPublication | 1174
    GlastonburyRomance | ISBN | 978-0-7453-0474-3
    GlastonburyRomance | ISBN | 978-0-7453-0474-3
    GlastonburyRomance | ISBN | 978-0-7453-0474-3
    GlastonburyRomance | ISBN | 978-0-7453-0474-3
    GlastonburyRomance | ISBN | 978-0-7453-0474-3
    GlastonburyRomance | ISBN | 978-0-7453-0474-3
    GlastonburyRomance | ISBN | 978-0-7453-0474-3
    GlastonburyRom",10.728434801101685
1789,"
    ISBN_number | OCLC_number
    0-670-03380-4 | 57392246

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different entities and relations
    # TODO: Add more triples with different entities and relations and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different entities and different relations
    # TODO: Add more triples with different entities and relations and different relations",10.803886890411377
1790,"
    oclcNumber | 57392246
    isbnNumber | 0-670-03380-4
    """"""
    
    # Get the triples from the sentence
    triples = get_triples(sentence)
    
    # Get the triples from the ontology
    ontology_triples = get_ontology_triples(ontology)
    
    # Get the triples from the sentence and the ontology
    sentence_ontology_triples = get_sentence_ontology_triples(sentence, ontology)
    
    # Get the triples from the sentence and the ontology and the examples
    sentence_ontology_examples_triples = get_sentence_ontology_examples_triples(sentence, ontology, examples)
    
    # Get the triples from the sentence and the ontology and the examples and the sentences
    sentence_ontology_examples_sentences_triples = get_sentence_ontology_examples_sentences_triples(sentence, ontology, examples, sentences)
    
    # Get the",10.724232196807861
1791,"
    ISBN_number | 0-670-03380-4
    OCLC_number | 57392246

    """"""
    # TODO: add more test cases
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more sentences
    # TODO: add more ontology
    # TODO: add more triples
    # TODO: add more triples from the sentence
    # TODO: add more triples from the ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology and triples from the sentence
    # TODO: add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence
    # TODO: add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence
    # TODO: add more triples from the sentence and ontology and triples from the sentence and ontology and triples from the sentence and ontology",10.731557846069336
1792,"
    A_Loyal_Character_Dancer | publishedIn | United_States
    A_Loyal_Character_Dancer | ethnicGroup | Asian_Americans
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[",10.655111074447632
1793,"
    A_Loyal_Character_Dancer | ethnicity | Asian_Americans
    A_Loyal_Character_Dancer | nationality | United_States
    A_Loyal_Character_Dancer | ethnicity | Asian_Americans
    A_Loyal_Character_Dancer | nationality | United_States
    A_Loyal_Character_Dancer | ethnicity | Asian_Americans
    A_Loyal_Character_Dancer | nationality | United_States
    A_Loyal_Character_Dancer | ethnicity | Asian_Americans
    A_Loyal_Character_Dancer | nationality | United_States
    A_Loyal_Character_Dancer | ethnicity | Asian_Americans
    A_Loyal_Character_Dancer | nationality | United_States
    A_Loyal_Character_Dancer | ethnicity | Asian_Americans
    A_Loyal_Character_Dancer | nationality | United_States
    A_Loyal_Character_Dancer | ethnicity | Asian_Americans
    A_Loyal_Character_Dancer | nationality | United_States
    A_Loyal_Character_Dancer | ethnicity | Asian_Americans
",10.650179147720337
1794,"
    A_Loyal_Character_Dancer | publishedIn | United_States
    A_Loyal_Character_Dancer | whereManyAsianAmericansLive | United_States

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add more relations
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more entities
    # TODO: Add",10.636395454406738
1795,"
    Loyal_Character | publishedBy | Soho_Press
    Loyal_Character | location | United_States

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples",10.644860982894897
1796,"
    A_Loyal_Character_Dancer | publisher | Soho_Press
    A_Loyal_Character_Dancer | country | United_States
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(example +'|'+ relation +'|'+ sentence)
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the concepts.
    """"""
    def __init__(self, relations, concepts):
        self.relations = relations
        self.concepts = concepts


class Concept:
    """"""
    This class represents a concept. It contains the name, the type and the relations.
    """"""
    def __init__(self,",10.660943508148193
1797,"
    A_Loyal_Character_Dancer | publishedBy | Soho_Press
    A_Loyal_Character_Dancer | publishedIn | United_States
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple",10.648029088973999
1798,"
    Diane_Duane | author | A Wizard of Mars
    A Wizard of Mars | work | Diane_Duane
    A Wizard of Mars | workTitle | A Wizard of Mars
    A Wizard of Mars | workYear | 1976
    A Wizard of Mars | workPublisher | Doubleday
    A Wizard of Mars | workISBN | 0-385-92699-X
    A Wizard of Mars | workOCLC | 318875313
    A Wizard of Mars | workISSN | 0-385-92699-X
    A Wizard of Mars | workISSN | 0-385-92699-X
    A Wizard of Mars | workISSN | 0-385-92699-X
    A Wizard of Mars | workISSN | 0-385-92699-X
    A Wizard of Mars | workISSN | 0-385-92699-X
    A Wizard of Mars | workISSN | 0-385-92699-X
    A Wizard of Mars | workISSN | 0-385-92699-X
    A Wizard of Mars | workISSN | 0-385-9",10.6296706199646
1799,"
    Diane_Duane | author | A Wizard of Mars
    A Wizard of Mars | work | Diane_Duane
    A Wizard of Mars | work | 318875313
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars | work | OCLC_number
    A Wizard of Mars",10.671138525009155
1800,"
    Wizard_of_Mars | publishedIn | Hardcover
    Wizard_of_Mars | hasISBNNumber | 978-0-15-204770-2

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different entities and relations
    # TODO: Add more triples with different entities and relations and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different",10.746344566345215
1801,"
    Wizard_of_Mars | publishedIn | hardback
    Wizard_of_Mars | hasISBN | 978-0-15-204770-2
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for word in sentence.split():
        if word in entities:
            for relation in relations:
                triples.append(word +'|'+ relation +'|'+ word)
    
    # Return the triples in the given output format
    return triples

# Test the function
sentence = ""A Wizard of Mars was published in hardback and has the ISBN number 978-0-15-204770-2.""
print(ext",10.643088817596436
1802,"
    ISBN_number | hardback
    ISBN_number | 978-0-15-204770-2
    hardback | 978-0-15-204770-2
    """"""
    
    # Get the triples from the sentence
    triples = get_triples(sentence)
    
    # Get the triples from the ontology
    ontology_triples = get_ontology_triples(ontology)
    
    # Get the triples from the sentence and ontology
    sentence_ontology_triples = get_sentence_ontology_triples(sentence, ontology)
    
    # Get the triples from the sentence and ontology and the given relations
    sentence_ontology_relations = get_sentence_ontology_relations(sentence, ontology, relations)
    
    # Get the triples from the sentence and ontology and the given relations and the given output format
    sentence_ontology_relations_output = get_sentence_ontology_relations_output(sentence, ontology, relations, output_format)
    
",10.645497560501099
1803,"
    Wizard_of_Mars | book | 560
    Wizard_of_Mars | ISBN | 978-0-15-204770-2
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with different relations and entities
    # TODO: Add more triples with",10.67069959640503
1804,"
    Wizard_of_Mars | book | 560
    Wizard_of_Mars | ISBN | 978-0-15-204770-2
    """"""
    def __init__(self, ontology_file, examples_file, output_file):
        self.ontology = Ontology(ontology_file)
        self.examples = self.read_examples(examples_file)
        self.output_file = output_file

    def read_examples(self, examples_file):
        examples = []
        with open(examples_file, 'r') as f:
            for line in f:
                line = line.strip()
                if line:
                    examples.append(line)
        return examples

    def extract_triples(self):
        with open(self.output_file, 'w') as f:
            for example in self.examples:
                triples = self.extract_triples_from_example(example)
                for triple in triples:
                    f.write(triple + '\n')

    def extract_tri",10.68328046798706
1805,"
    Wizard_of_Mars | ISBN_number | 978-0-15-204770-2
    Wizard_of_Mars | numberOfPages | 560
    Wizard_of_Mars | author | unknown
    Wizard_of_Mars | publisher | unknown
    Wizard_of_Mars | yearOfPublication | unknown
    Wizard_of_Mars | genre | fantasy
    Wizard_of_Mars | language | English
    Wizard_of_Mars | country | unknown
    Wizard_of_Mars | city | unknown
    Wizard_of_Mars | state | unknown
    Wizard_of_Mars | postalCode | unknown
    Wizard_of_Mars | countryCode | unknown
    Wizard_of_Mars | countryName | unknown
    Wizard_of_Mars | countryRegion | unknown
    Wizard_of_Mars | countryRegionName | unknown
    Wizard_of_Mars | countryRegionCode | unknown
    Wizard_of_Mars | countryRegionName | unknown
    Wizard_of_Mars | countryRegionCode | unknown
    Wizard_of_Mars | countryRegion",10.65737533569336
1806,"
    Aenir | AustralianLiterature | Aenir
    AboveTheVeil | AustralianLiterature | AboveTheVeil
    """"""
    # TODO: Implement this function
    pass

def extract_triples_from_sentence_with_relations(ontology, sentence):
    """"""
    Given the following ontology, examples and sentences, please extract the triples from the sentence according to the 
    relations in the ontology. In the output, only include the triples in the given output format

    CONTEXT:
    Ontology concepts could belong to: Monument, Artist, Food, WrittenWork, Building, Astronaut, University, ComicsCharacter, 
    MeanOfTransportation, SportsTeam, Athlete, Company, Politician, CelestialBody, Airport, City

    Example Sentence: Edwin E. Aldrin Jr, also known as Buzz Aldrin, is an American born on Jan 20, 1930 in Glen Ridge, New Jersey. 
    He graduated from MIT in 1962 with a doctorate in Science. He began working for NASA in 1963 and was part of Apollo 11.

    Example Output: Buzz_Aldrin | birthPlace | Glen_R",10.673085689544678
1807,"
    Aenir | country | Australia
    AboveTheVeil | precededBy | Aenir
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output


def",10.659038782119751
1808,"
    Above_the_Veil | aboveTheVeil | Aenir
    Above_the_Veil | aboveTheVeil | English
    Aenir | Aenir | English
    Aenir | Aenir | English

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the same sentence
    # TODO: Add more triples from different sentences
    # TODO: Add more triples from the same ontology
    # TODO: Add more triples from different ontologies
    # TODO: Add more triples from the same sentence and ontology
    # TODO: Add more triples from different sentences and ontology
    # TODO: Add more triples from the same sentence and ontology
    # TODO: Add more triples from different sentences and ontology
    # TODO: Add more triples from the same sentence and ontology
    #",10.642892599105835
1809,"
    Aenir | writtenWork | Above the Veil
    Aenir | writtenWork | English
    Above the Veil | writtenWork | English
    Above the Veil | writtenWork | English

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {ontology[tri",10.678961515426636
1810,"
    Aenir | novel | Above the Veil
    Above the Veil | writtenIn | English
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.506285190582275
1811,"
    Aenir | sequel | Above the Veil
    Aenir | writtenAfter | Castle
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output


def extract",10.739621877670288
1812,"
    Aenir | sequel | Above the Veil
    Aenir | novel | Castle
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the test sentence
    # TODO: Add more triples from the test sentence
    # TODO: Add more triples from the test sentence
    # TODO: Add more triples from the test sentence
    # TODO: Add more triples from the test sentence
    # TODO: Add more triples from the test sentence
    # TODO: Add more triples from the test sentence
    # TODO: Add more triples from the test sentence
    # TODO: Add more triples from the test sentence
    # TODO: Add more triples from the test sentence
    # TODO: Add more triples from the test sentence
    # TODO: Add more triples from the test sentence
    # TODO: Add more",10.656799793243408
1813,"
    Aenir | precedes | Above the Veil
    Aenir | precedes | Castle
    Above the Veil | precedes | Aenir
    Above the Veil | precedes | Castle
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the given output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {",10.679221153259277
1814,"
    Acta_Mathematica_Hungarica | publisher | Springer_Science_+_Business_Media
    Julius_Springer | founder | Springer_Science_+_Business_Media
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate through the words and extract the triples
    for i in range(len(words) - 2):
        # Get the first word
        entity_1 = words[i]
        
        # Get the relation
        relation = words[i+1]
        
        # Get the second word
        entity_2 = words[i+2]
        
        # Add the triple to the dictionary
        triples[entity_1 +'' + relation +'' + entity_2] = True
    
    # Return the triples
    return triples
```

### Exercise 5

Write a Python function that takes a list of sentences and returns a list of triples extracted from the sentences according to the relations in the ontology.",10.664969205856323
1815,"
    Springer_Science_and_Business_Media | foundedBy | Julius_Springer
    Springer_Science_and_Business_Media | publisher | Acta_Mathematica_Hungarica
    """"""
    def __init__(self, ontology, examples, output_format):
        self.ontology = ontology
        self.examples = examples
        self.output_format = output_format

    def extract_triples(self, sentence):
        """"""
        Extract triples from the given sentence according to the relations in the ontology.
        In the output, only include the triples in the given output format

        :param sentence: sentence to extract triples from
        :return: list of triples
        """"""
        triples = []
        for example in self.examples:
            for relation in self.ontology.relations:
                if relation in example:
                    triples.append(self.get_triple(sentence, example, relation))
        return triples

    def get_triple(self, sentence, example, relation):
        """"""
        Get the triple from the given",10.657028198242188
1816,"
    Springer | foundedBy | Julius Springer
    Springer | publisher | Acta Mathematica Hungarica
    
    """"""
    
    # Split the sentence into words
    words = sentence.split()
    
    # Initialize the output list
    output = []
    
    # Iterate through the words
    for i in range(len(words)):
        
        # Check if the word is a relation
        if words[i] in relations:
            
            # Get the entity before the relation
            entity_1 = words[i-1]
            
            # Get the entity after the relation
            entity_2 = words[i+1]
            
            # Add the triple to the output list
            output.append(entity_1 +'|'+ words[i] +'|'+ entity_2)
    
    # Return the output list
    return output

def extract_triples_from_sentence_with_relations(sentence, relations):
    """"""
    Given the following ontology, examples and sentences, please extract the triples from the sentence according to the 
    ",10.638265371322632
1817,"
    ASCQAG | 1stRunwaySurfaceType | asphalt
    ASCQAG | 2ndRunwaySurfaceType | asphalt
    ASCQAG | 3rdRunwaySurfaceType | asphalt
    ASCQAG | 4thRunwaySurfaceType | asphalt
    ASCQAG | LCCN_number | 0000096481
    ASCQAG | NationalRegisterOfHistoricPlacesReferenceNumber | 0000096481
    ASCQAG | abbreviation | Admin. Sci. Q.
    ASCQAG | academicDiscipline | Administrative Science Quarterly
    ASCQAG | academicStaffSize | 1
    ASCQAG | activeYearsEndDate | 2019-01-01
    ASCQAG | activeYearsStartDate | 2019-01-01
    ASCQAG | activeYearsStartYear | 2019
    ASCQAG | addedToTheNationalRegisterOfHistoricPlaces | 2019-01-01
    ASCQAG | address | 
    ASCQAG | affiliation | 
    ASCQAG | aircraftFighter | 
    ASCQAG | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    ASC",10.656717538833618
1818,"
    AdministrativeScienceQuarterly | abbreviation | ASCQAG
    AdministrativeScienceQuarterly | codenCode | ASCQAG
    AdministrativeScienceQuarterly | isPartOf | [AdministrativeScienceQuarterly]
    AdministrativeScienceQuarterly | isPartOfMilitaryConflict | [AdministrativeScienceQuarterly]
    AdministrativeScienceQuarterly | isPartOfOrganisation | [AdministrativeScienceQuarterly]
    AdministrativeScienceQuarterly | isPartOfOrganisationType | [AdministrativeScienceQuarterly]
    AdministrativeScienceQuarterly | isPartOfOrganisationType | [AdministrativeScienceQuarterly]
    AdministrativeScienceQuarterly | isPartOfOrganisationType | [AdministrativeScienceQuarterly]
    AdministrativeScienceQuarterly | isPartOfOrganisationType | [AdministrativeScienceQuarterly]
    AdministrativeScienceQuarterly | isPartOfOrganisationType | [AdministrativeScienceQuarterly]
    AdministrativeScienceQuarterly | isPartOfOrganisationType | [AdministrativeScienceQuarterly]
    AdministrativeScienceQuarterly | isPartOfOrgan",10.654242992401123
1819,"
    AdministrativeScienceQuarterly | abbreviation | ASCQAG
    AdministrativeScienceQuarterly | publicationYear | 1970
    AdministrativeScienceQuarterly | journalTitle | Administrative Science Quarterly
    AdministrativeScienceQuarterly | publisher | Sage Publications
    AdministrativeScienceQuarterly | issnNumber | 1093-1332
    AdministrativeScienceQuarterly | volume | 1
    AdministrativeScienceQuarterly | issue | 1
    AdministrativeScienceQuarterly | number | 1
    AdministrativeScienceQuarterly | pageCount | 1
    AdministrativeScienceQuarterly | language | English
    AdministrativeScienceQuarterly | citationCount | 1
    AdministrativeScienceQuarterly | citationYear | 1970
    AdministrativeScienceQuarterly | citationSource | Journal Citation Reports
    AdministrativeScienceQuarterly | citationJournal | Administrative Science Quarterly
    AdministrativeScienceQuarterly | citationJournalIssue | 1
    AdministrativeScienceQuarterly | citationJournalVolume | 1
    AdministrativeScienceQuarterly | citationJournalPage | 1
    AdministrativeScienceQuarterly | citationJournalIssueNumber | 1
    AdministrativeScienceQuarterly",10.650854110717773
1820,"
    Cornell_University | affiliation | Association_of_Public_and_Land-grant_Universities
    Cornell_University | affiliation | Administrative_Science_Quarterly
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_University | affiliation | 
    Cornell_",10.649111270904541
1821,"
    Cornell_University | affiliation | Association_of_Public_and_Land-grant_Universities
    Cornell_University | publisher | Administrative_Science_Quarterly
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents the ontology. It contains the relations and the concepts.
    """"""
    def __init__(self, relations, concepts):
        self.relations = relations
        self.concepts = concepts


class Concept:
    """"""
    This class represents a concept. It contains the name and the properties.
    """"""
    def __init__(self, name, properties):
",10.648930311203003
1822,"
    Cornell_University | affiliation | Association_of_Public_and_Land-grant_Universities
    Cornell_University | publisher | Administrative_Science_Quarterly
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    triples.append((word, relation, word))
    
    # Filter out the triples that do not match the relations in the ontology
    filtered_triples = []
    for triple in triples:
        if triple[1] in ontology:
            filtered_triples.append(",10.671268939971924
1823,"
    Written_by | author | Garth_Nix
    Written_by | alternativeName | Aenir
    Written_by | nationality | United_States
    Written_by | selectedByNasa | 1963
    Written_by | mission | Apollo_11
    Written_by | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Written_by | birthDate | 1930-01-20
    Written_by | birthPlace | Glen_Ridge,_New_Jersey
    Written_by | birthYear | 1930
    Written_by | alternativeName | Garth_Nix, Aenir
    Written_by | nationality | United_States
    Written_by | selectedByNasa | 1963
    Written_by | mission | Apollo_11
    Written_by | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Written_by | birthDate | 1930-01-20
    Written_by | birthPlace | Glen_Ridge,_New_Jersey
    Written_by | birthYear | 1930
    Written_by | alternativeName | Garth_Nix, Aen",10.72870421409607
1824,"
    Aenir | writtenBy | Garth_Nix
    Aenir | hasTheISBNNumber | 0-439-17684-0

    """"""
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more triples
    # TODO: add more triples from the sentence
    # TODO: add more triples from the ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    # TODO: add more triples from the sentence and ontology
    ",10.681553602218628
1825,"
    Aenir | writtenBy | Garth_Nix
    Aenir | hasTheISBNNumber | 0-439-17684-0
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with multiple relations
    # TODO: Add more triples with multiple entities
    # TODO: Add more triples with multiple entities and relations
    # TODO: Add more triples with multiple entities and relations and multiple relations
    # TODO: Add more triples with multiple entities and relations and multiple relations and multiple entities
    # TODO: Add more triples with multiple entities and relations and multiple relations and multiple entities and relations
    # TODO: Add more triples with multiple entities and relations and multiple relations and multiple entities and relations and multiple entities
    # TODO: Add more triples with multiple entities and relations and multiple relations and multiple entities and relations and multiple entities and relations
    # TODO",10.649136066436768
1826,"
    Alcatraz | book | EvilLibrarians
    Alcatraz | book | Hardcover
    Alcatraz | book | ISBN
    Alcatraz | book | 0-439-92550-9
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more ontology
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more ontology
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more ontology
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more ontology
    # TODO: Add more relations
    #",10.646630048751831
1827,"
    Alcatraz | hardcover | ISBN number 0-439-92550-9
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    An ontology is a collection of concepts and their relations.
    """"""
    def __init__(self, concepts, relations):
        self.concepts = concepts
        self.relations = relations


def load_ontology(file_path):
    """"""
    Loads an ontology from a file.
    """"""
    with open(file_path, 'r') as f:
        concepts = []
        relations = []
        for line in f:
            line =",10.64010500907898
1828,"
    Alcatraz | ISBN_number | 0-439-92550-9
    Alcatraz | numberOfPages | 320
    Alcatraz | author | unknown
    Alcatraz | publisher | unknown
    Alcatraz | yearOfPublication | unknown
    Alcatraz | genre | unknown
    Alcatraz | language | unknown
    Alcatraz | ISBN_number | 0-439-92550-9
    Alcatraz | numberOfPages | 320
    Alcatraz | author | unknown
    Alcatraz | publisher | unknown
    Alcatraz | yearOfPublication | unknown
    Alcatraz | genre | unknown
    Alcatraz | language | unknown
    Alcatraz | ISBN_number | 0-439-92550-9
    Alcatraz | numberOfPages | 320
    Alcatraz | author | unknown
    Alcatraz | publisher | unknown
    Alcatraz | yearOfPublication | unknown
    Alcatraz | genre | unknown
    Alcatraz | language | unknown
    Alcatraz | ISBN_number | 0-439-92550-9
    Alcatraz | number",10.636006116867065
1829,"
    ISBN_number | 0-439-92550-9
    length | 320
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more triples
    # TODO: Add more triples with multiple relations
    # TODO: Add more triples with multiple entities
    # TODO: Add more triples with multiple entities and relations
    # TODO: Add more triples with multiple entities and relations and relations with multiple entities
    # TODO: Add more triples with multiple entities and relations and relations with multiple entities and relations
    # TODO: Add more triples with multiple entities and relations and relations with multiple entities and relations and relations with multiple entities
    # TODO: Add more triples with multiple entities and relations and relations with multiple entities and relations and relations with multiple entities and relations and relations with multiple entities
    # TODO: Add more triples with multiple entities and relations and relations with multiple entities and relations and relations with multiple entities and relations and relations with multiple entities and relations and relations with multiple entities
",10.649448871612549
1830,"
    ISBN_number | 0-439-92550-9
    Alcatraz | 0-439-92550-9
    EvilLibrarians | 0-439-92550-9
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the given output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple",10.666858673095703
1831,"
    AIDS | journal | academicDiscipline
    HIV | family | orthoretrovirinae
    """"""
    
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    #",10.620985507965088
1832,"
    AIDS | academicDiscipline | Orthoretrovirinae
    AIDS | disease | HIV
    AIDS | journal | The
    AIDS | orthoretrovirinae | family
    """"""
    
    # Create a dictionary to store the triples
    triples = {}
    
    # Split the sentence into words
    words = sentence.split()
    
    # Iterate through the words and extract the triples
    for i in range(len(words) - 2):
        # Get the first word
        entity_1 = words[i]
        
        # Get the relation
        relation = words[i+1]
        
        # Get the second word
        entity_2 = words[i+2]
        
        # Add the triple to the dictionary
        triples[entity_1 +'' + relation +'' + entity_2] = True
    
    # Return the triples
    return triples

def get_triples_from_sentence_with_relations(sentence, relations):
    """"""
    Given the following ontology, examples and sentences, please extract the triples from",10.645865678787231
1833,"
    AIDS | academicDiscipline | HIV
    AIDS | family | orthoretrovirinae
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
    AIDS | academicStaffSize | 1
    AIDS | academicDiscipline | HIV
",10.635559320449829
1834,"
    Fortress_of_Grey_Ice | location | United_States
    Fortress_of_Grey_Ice | language | English
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
",10.71032428741455
1835,"
    Fortress_of_Grey_Ice | country | United_States
    Fortress_of_Grey_Ice | language | English
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples from the sentence
    # TODO: Add more triples from the ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from the sentence and ontology
    # TODO: Add more triples from",10.770054340362549
1836,"
    Abilene_Regional_Airport | airport | Abilene
    Abilene_Regional_Airport | airport | Taylor_County
    Abilene_Regional_Airport | airport | United_States
    Abilene_Regional_Airport | airport | Texas
    Abilene_Regional_Airport | airport | United_States
    Abilene_Regional_Airport | airport | Abilene
    Abilene_Regional_Airport | airport | Taylor_County
    Abilene_Regional_Airport | airport | United_States
    Abilene_Regional_Airport | airport | Texas
    Abilene_Regional_Airport | airport | United_States
    Abilene_Regional_Airport | airport | Abilene
    Abilene_Regional_Airport | airport | Taylor_County
    Abilene_Regional_Airport | airport | United_States
    Abilene_Regional_Airport | airport | Texas
    Abilene_Regional_Airport | airport | United_States
    Abil",10.645711660385132
1837,"
    Abilene_Regional_Airport | airport | Abilene
    Abilene_Regional_Airport | airport | Taylor_County
    Abilene_Regional_Airport | airport | United_States
    Abilene_Regional_Airport | airport | Texas
    Abilene_Regional_Airport | airport | Abilene
    Abilene_Regional_Airport | airport | United_States
    Abilene_Regional_Airport | airport | Taylor_County
    Abilene_Regional_Airport | airport | United_States
    Abilene_Regional_Airport | airport | Texas
    Abilene_Regional_Airport | airport | Abilene
    Abilene_Regional_Airport | airport | United_States
    Abilene_Regional_Airport | airport | Taylor_County
    Abilene_Regional_Airport | airport | United_States
    Abilene_Regional_Airport | airport | Texas
    Abilene_Regional_Airport | airport | Abilene
    Abil",10.661243438720703
1838,"
    Abilene | airport | Abilene,_Texas
    Abilene | airport | Taylor_County,_Texas
    Abilene | airport | United_States
    Abilene | airport | Abilene,_Texas
    Abilene | airport | Taylor_County,_Texas
    Abilene | airport | United_States
    Abilene | airport | Abilene,_Texas
    Abilene | airport | Taylor_County,_Texas
    Abilene | airport | United_States
    Abilene | airport | Abilene,_Texas
    Abilene | airport | Taylor_County,_Texas
    Abilene | airport | United_States
    Abilene | airport | Abilene,_Texas
    Abilene | airport | Taylor_County,_Texas
    Abilene | airport | United_States
    Abilene | airport | Abilene,_Texas
    Abilene | airport | Taylor_County,_Texas
    Abilene | airport | United_States
    Abilene | airport | Abilene,_Texas
    ",10.651884317398071
1839,"
    Adirondack_Regional_Airport | runwayLength | 1219.0
    Adirondack_Regional_Airport | cityServed | Saranac Lake, New York
    Adirondack_Regional_Airport | cityServed | Lake Placid, New York

    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more examples
    # TOD",10.68476676940918
1840,"
    Adirondack_Regional_Airport | airportType | airport
    Adirondack_Regional_Airport | location | Saranac Lake, New York
    Adirondack_Regional_Airport | runway | 1,219
    """"""
    def __init__(self, ontology_file, examples_file, output_file):
        self.ontology = Ontology(ontology_file)
        self.examples = self.load_examples(examples_file)
        self.output_file = output_file

    def load_examples(self, examples_file):
        examples = []
        with open(examples_file, 'r') as f:
            for line in f:
                line = line.strip()
                if line:
                    examples.append(line)
        return examples

    def extract_triples(self):
        with open(self.output_file, 'w') as f:
            for example in self.examples:
                triples = self.extract_triples_from_example(example)
                for triple",10.726372718811035
1841,"
    14L/32R | runwaySurfaceType | 4100.0
    14L/32R | airport | Madrid-Barajas
    14L/32R | airport | Madrid
    14L/32R | airport | Spain
    14L/32R | airport | Europe
    14L/32R | airport | continent
    14L/32R | airport | country
    14L/32R | airport | city
    14L/32R | airport | countryRegion
    14L/32R | airport | continentRegion
    14L/32R | airport | countryRegion
    14L/32R | airport | continent
    14L/32R | airport | country
    14L/32R | airport | city
    14L/32R | airport | countryRegion
    14L/32R | airport | continentRegion
    14L/32R | airport | countryRegion
    14L/32R | airport | continent
    14L/32R | airport | country
    14L/32R | airport | city
    14L/32R | airport | countryRegion
    14L/32R |",10.73855447769165
1842,"
    Madrid-Barajas Airport | airport | Madrid
    Madrid-Barajas Airport | runwayName | 14L/32R
    Madrid-Barajas Airport | runwayLength | 4100
    Madrid-Barajas Airport | city | Madrid
    Madrid-Barajas Airport | country | Spain
    Madrid-Barajas Airport | airportCode | MAD
    Madrid-Barajas Airport | airportIATA | MAD
    Madrid-Barajas Airport | airportICAO | MAD
    Madrid-Barajas Airport | airportLocationIdentifier | MAD
    Madrid-Barajas Airport | airportCity | Madrid
    Madrid-Barajas Airport | airportState | Madrid
    Madrid-Barajas Airport | airportRegion | Madrid
    Madrid-Barajas Airport | airportCountry | Spain
    Madrid-Barajas Airport | airportCityServed | Madrid
    Madrid-Barajas Airport | airportCity | Madrid
    Madrid-Barajas Airport | airportCountry | Spain
    Madrid-Barajas Airport | airportCityServed | Madrid
    Madrid-Barajas",10.734515190124512
1843,"
    Madrid-Barajas | airport | Madrid
    Madrid-Barajas | runway | 14L/32R
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Barajas | runway | 4100
    Madrid-Baraj",10.743943214416504
1844,"
    Indian_Air_Force | operates | Agra_Airport
    Agra_Airport | uses | VIAG
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICAO_location_identifier
    Agra_Airport | uses | ICA",10.740145444869995
1845,"
    Agra_Airport | airport | India
    Agra_Airport | airport | Indian_Air_Force
    Agra_Airport | airport | ICAO_identifier
    Agra_Airport | airport | VIAG
    Agra_Airport | airport | India
    Agra_Airport | airport | Indian_Air_Force
    Agra_Airport | airport | ICAO_identifier
    Agra_Airport | airport | VIAG
    Agra_Airport | airport | India
    Agra_Airport | airport | Indian_Air_Force
    Agra_Airport | airport | ICAO_identifier
    Agra_Airport | airport | VIAG
    Agra_Airport | airport | India
    Agra_Airport | airport | Indian_Air_Force
    Agra_Airport | airport | ICAO_identifier
    Agra_Airport | airport | VIAG
    Agra_Airport | airport | India
    Agra_Airport | airport | Indian_Air_Force
    Agra_Airport | airport |",10.810123443603516
1846,"
    Al_Asad_Airbase | airport | United_States
    Al_Asad_Airbase | runway | 3078.48
    Al_Asad_Airbase | location | Iraq
    Al_Asad_Airbase | runwayLength | 3078.48
    Al_Asad_Airbase | airport | United_States
    Al_Asad_Airbase | runway | 3078.48
    Al_Asad_Airbase | location | Iraq
    Al_Asad_Airbase | runwayLength | 3078.48
    Al_Asad_Airbase | airport | United_States
    Al_Asad_Airbase | runway | 3078.48
    Al_Asad_Airbase | location | Iraq
    Al_Asad_Airbase | runwayLength | 3078.48
    Al_Asad_Airbase | airport | United_States
    Al_Asad_Airbase | runway | 3078.48
    Al_Asad_Airbase | location | Iraq
    Al_Asad_Airbase | runwayLength | 3078.48
    Al_Asad_Airbase | airport |",10.73954725265503
1847,"
    Al_Asad_Airbase | USAF | iraq
    Al_Asad_Airbase | length | 3078.48
    """"""
    # TODO: Add more test cases
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more sentences
    # TODO: Add more ontology
    # TODO: Add more triples
    # TODO: Add more triples with different relations
    # TODO: Add more triples with different entities
    # TODO: Add more triples with different entities and relations
    # TODO: Add more triples with different entities and relations and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different entities
    # TODO: Add more triples with different entities and relations and different relations and different entities and different relations and different entities and different relations
    # TODO",10.737826108932495
1848,"
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase | United_States
    Al_Asad | airbase",10.751579761505127
1849,"
    Al_Asad_Airbase | operatedBy | United_States_Air_Force
    Al_Asad_Airbase | notedBattles | Invasion_of_Grenada
    Al_Asad_Airbase | notedBattles | The_Operation_Enduring_Freedom

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in",10.745519638061523
1850,"
    Al_Asad_Airbase | USAF | Al Asad Airbase
    Al_Asad_Airbase | USAF | The_Invasion_of_Grenada
    Al_Asad_Airbase | USAF | The_Operation_Enduring_Freedom

    """"""
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(i+1, len(entities)):
            for relation in relations:
                triples.append(entities[i] +'|'+ relation +'|'+ entities[j])

    return triples


def get_triples",10.734232425689697
1851,"
    Al_Asad_Airbase | operatingOrganisation | US_Air_Force
    Al_Asad_Airbase | battle | Invasion_of_Grenada
    Al_Asad_Airbase | battle | operation_enduring_freedom
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(",10.731012344360352
1852,"
    United_States | operatingOrganisation | Al_Asad_airbase
    United_States | operatingOrganisation | Air_Force
    United_States | operatingOrganisation | Air_Force_who
    United_States | operatingOrganisation | Air_Force_who_is
    United_States | operatingOrganisation | Air_Force_who_is_the_operating_organisation_for
    United_States | operatingOrganisation | Air_Force_who_is_the_operating_organisation_for_Al_Asad_airbase
    United_States | operatingOrganisation | Air_Force_who_is_the_operating_organisation_for_Al_Asad_airbase_who_fought_battles_in_the_Korean_war
    United_States | operatingOrganisation | Air_Force_who_is_the_operating_organisation_for_Al_Asad_airbase_who_fought_battles_in_the_Korean_war_and_also_in_Operation_Enduring_Freedom
    United_States | operatingOrganisation | Air_Force",10.737599849700928
1853,"
    US_Air_Force | veteranOf | Korean_War
    US_Air_Force | veteranOf | Operation_Enduring_Freedom
    US_Air_Force | operated | Al_Asad_Airbase
    """"""
    
    # Split the sentence into words
    words = sentence.split()
    
    # Initialize an empty list to store the triples
    triples = []
    
    # Loop through the words in the sentence
    for i in range(len(words)):
        
        # If the word is a noun, find its synonyms
        if words[i] in nouns:
            synonyms = get_synonyms(words[i])
            
            # Loop through the synonyms
            for synonym in synonyms:
                
                # If the synonym is a noun, find its synonyms
                if synonym in nouns:
                    synonyms2 = get_synonyms(synonym)
                    
                    # Loop through the synonyms
                    for synonym2 in synonyms2:
                        
                        # If the synonym2 is a noun, find its synonyms
                        if",10.73771047592163
1854,"
    Alderney | airport | 1stRunwaySurfaceType | Poaceae
    Alderney | airport | 1stRunwaySurfaceType | 733.0
    Alderney | airport | 1stRunwaySurfaceType | Poaceae
    Alderney | airport | 1stRunwaySurfaceType | 733.0
    Alderney | airport | 1stRunwaySurfaceType | Poaceae
    Alderney | airport | 1stRunwaySurfaceType | 733.0
    Alderney | airport | 1stRunwaySurfaceType | Poaceae
    Alderney | airport | 1stRunwaySurfaceType | 733.0
    Alderney | airport | 1stRunwaySurfaceType | Poaceae
    Alderney | airport | 1stRunwaySurfaceType | 733.0
    Alderney | airport | 1stRunwaySurfaceType | Poaceae
    Alderney | airport | 1stRunwaySurfaceType | 733.0
    Alderney | airport | 1stRunwaySurfaceType | Poaceae
    Alderney | airport | 1st",10.741065979003906
1855,"
    Alpena_County_Regional_Airport | location | Wilson_Township,_Alpena_County,_Michigan
    Alpena_County_Regional_Airport | elevation | 210
    Alpena_County_Regional_Airport | runwayLength | 1,533
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType') or relation.startswith('2ndRunwaySurfaceType') or relation.startswith('3rdRunwaySurfaceType') or relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):",10.734529733657837
1856,"
    Alpena_County_Regional_Airport | elevationAboveTheSeaLevel | 210
    Alpena_County_Regional_Airport | runwayLength | 1,533
    Alpena_County_Regional_Airport | location | Wilson_Township,_Alpena_County,_Michigan
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append(entity1 + "" | "" + relation + "" | "" + entity2)
    
    # Return",10.79823637008667
1857,"
    Alpena_County_Regional_Airport | airport | Wilson_Township,_Alpena_County,_Michigan
    Alpena_County_Regional_Airport | airport | 210
    Alpena_County_Regional_Airport | airport | 1533
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
",10.74918818473816
1858,"
    Amsterdam_airport | airport | Schiphol
    Amsterdam_airport | airport | cityOfAmsterdam
    Amsterdam_airport | airport | -3.3528
    Amsterdam_airport | airport | -3.3528 | metresAboveSeaLevel
    Amsterdam_airport | airport | -3.3528 | metresAboveSeaLevelInFeet
    Amsterdam_airport | airport | -3.3528 | metresAboveSeaLevelInMetres
    Amsterdam_airport | airport | -3.3528 | metresAboveSeaLevelInFeetInMeters
    Amsterdam_airport | airport | -3.3528 | metresAboveSeaLevelInFeetInMetersInMeters
    Amsterdam_airport | airport | -3.3528 | metresAboveSeaLevelInFeetInMetersInMetersInMeters
    Amsterdam_airport | airport | -3.3528 | metresAboveSeaLevelInFeetInMetersInMetersInMetersInMeters
    Amsterdam_airport | airport | -3.3528 | metresAboveSeaLevelInFeetInMeters",10.74828028678894
1859,"
    Andrews_County_Airport | airport | Texas (United_States)
    Andrews_County_Airport | airport | Houston
    Andrews_County_Airport | airport | Texas
    Andrews_County_Airport | airport | United_States
    Andrews_County_Airport | airport | Houston
    Andrews_County_Airport | airport | Texas
    Andrews_County_Airport | airport | United_States
    Andrews_County_Airport | airport | Houston
    Andrews_County_Airport | airport | Texas
    Andrews_County_Airport | airport | United_States
    Andrews_County_Airport | airport | Houston
    Andrews_County_Airport | airport | Texas
    Andrews_County_Airport | airport | United_States
    Andrews_County_Airport | airport | Houston
    Andrews_County_Airport | airport | Texas
    Andrews_County_Airport | airport | United_States
    Andrews_County_Airport | airport | Houston
    Andrew",10.731090784072876
1860,"
    Andrews_County_Airport | airport | Texas
    Andrews_County_Airport | airport | United_States
    Houston | city | Texas
    Houston | city | United_States

    """"""
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)

    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)

    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and entity2 in ontology[relation]:
                    triples.append(entity1 + "" | "" + relation + "" | "" + entity2)

    return triples


def extract_triples_from_sentence_with_relations(sentence, ontology):
    """"""
    Given the following ont",10.734273672103882
1861,"
    United_States | airport | Andrews_County_Airport
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport | Texas
    United_States | airport | Houston
    United_States | airport",10.743200778961182
1862,"
    Angola_International_airport | airport | Icolo_e_Bengo_Angola
    Angola_International_airport | runwayLength | 4000ft
    
    """"""
    
    # Split the sentence into words
    words = sentence.split()
    
    # Initialize an empty list to store the triples
    triples = []
    
    # Loop through the words and check if they are entities or relations
    for i in range(len(words)):
        if words[i] in ontology:
            # If the word is an entity, check if it has a relation
            if i+1 < len(words) and words[i+1] in ontology:
                # If the next word is a relation, add the triple to the list
                triples.append(words[i] + "" | "" + ontology[words[i]] + "" | "" + ontology[words[i+1]])
    
    # Return the list of triples
    return triples

# Test the function
sentence = ""Edwin E. Aldrin Jr, also known as Buzz Aldrin",10.73387336730957
1863,"
    Angola_International_Airport | airport | Ícolo_e_Bengo,_Angola
    Angola_International_Airport | airport | 4000
    
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} |",10.730074644088745
1864,"
    Angola_International_Airport | airport | Icolo e Bengo, Angola
    Angola_International_Airport | runwayLength | 4000
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")",10.718322515487671
1865,"
    Angola_International_Airport | airport | Ícolo e Bengo
    Angola_International_Airport | airport | Angola
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | south runway
    Angola_International_Airport | airport | runway_name
    Angola_International_Airport | airport | runway_type
    Angola_International_Airport | airport | runway_surface_type
    Angola_International_Airport | airport | runway_surface_type_1
    Angola_International_Airport | airport | runway_surface_type_2
    Angola_International_Airport | airport | runway_surface_type_3
    Angola_International_Airport | airport | runway_surface_type_4
    Angola_International_Airport | airport | runway_surface_type_5
    Angola_International_Airport | airport | runway_surface_type_6
    Angola_International_Airport | airport | runway_surface_type_7
    Angola_International_Airport | airport | runway_surface_type_",10.735544443130493
1866,"
    Angola_International_Airport | airport | Ícolo e Bengo, Angola
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | South Runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway
    Angola_International_Airport | airport | runway",10.749315023422241
1867,"
    Antwerp | airport | 12.0
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Antwerp | airport | Flemish
    Ant",10.733450889587402
1868,"
    Antwerp_International_Airport | airport | Flemish_Region
    Antwerp_International_Airport | airport | Flemish_government
    Antwerp_International_Airport | airport | 12
    Antwerp_International_Airport | airport | meters
    Antwerp_International_Airport | airport | above_sea_level
    Antwerp_International_Airport | airport | sea_level
    Antwerp_International_Airport | airport | 12
    Antwerp_International_Airport | airport | meters
    Antwerp_International_Airport | airport | above_sea_level
    Antwerp_International_Airport | airport | sea_level
    Antwerp_International_Airport | airport | Flemish_Region
    Antwerp_International_Airport | airport | Flemish_government
    Antwerp_International_Airport | airport | 12
    Antwerp_International_Airport | airport | meters
    Antwerp_International_Airport | airport | above_sea_level
    Antwerp_International_Airport | airport | sea",10.815036058425903
1869,"
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
    AntwerpInternationalAirport | airport | FlemishRegion
",10.747065305709839
1870,"
    Antwerp | airport | Flemish region
    Antwerp | airport | Flemish department of mobility and public works
    Antwerp | airport | city of Antwerp
    Antwerp | airport | Flemish region
    Antwerp | airport | Flemish department of mobility and public works
    Antwerp | airport | city of Antwerp
    Antwerp | airport | Flemish region
    Antwerp | airport | Flemish department of mobility and public works
    Antwerp | airport | city of Antwerp
    Antwerp | airport | Flemish region
    Antwerp | airport | Flemish department of mobility and public works
    Antwerp | airport | city of Antwerp
    Antwerp | airport | Flemish region
    Antwerp | airport | Flemish department of mobility and public works
    Antwerp | airport | city of Antwerp
    Antwerp | airport | Flemish region
    Antwerp | airport | Flemish department of mobility and public works
    Antwerp | airport | city of Antwerp
    Antwer",10.746958017349243
1871,"
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishDepartmentOfMobilityAndPublicWorks
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishDepartmentOfMobilityAndPublicWorks
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishDepartmentOfMobilityAndPublicWorks
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishDepartmentOfMobilityAndPublicWorks
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishRegion
    Antwerp | airport | FlemishRegion
    Antwer",10.736925601959229
1872,"
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | Kimberly
    Appleton_International_airport | serves | Wisconsin
    Appleton_International_airport | serves | Little_Chute
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International_airport | serves | city
    Appleton_International",10.724741697311401
1873,"
    Appletone_International_Airport | airport | Appleton
    Appletone_International_Airport | airport | Kimberly
    Appletone_International_Airport | airport | Wisconsin
    Appletone_International_Airport | airport | city
    Appletone_International_Airport | airport | little_chute
    Appletone_International_Airport | airport | Kimberly
    Appletone_International_Airport | airport | Wisconsin
    Appletone_International_Airport | airport | city
    Appletone_International_Airport | airport | little_chute
    Appletone_International_Airport | airport | Kimberly
    Appletone_International_Airport | airport | Wisconsin
    Appletone_International_Airport | airport | city
    Appletone_International_Airport | airport | little_chute
    Appletone_International_Airport | airport | Kimberly
    Appletone_International_Airport | airport | Wisconsin
    Appletone_International_Airport | airport | city
    Appletone_International_Airport | airport | little_chute
    Appletone",10.757020711898804
1874,"
    Appleton_International_Airport | airport | Greenville
    Appleton_International_Airport | airport | Clayton_Winnebago_County
    Appleton_International_Airport | airport | Wisconsin
    Appleton_International_Airport | airport | United_States

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity in entities:
        for relation in relations:
            triples.append(entity +'|'+ relation +'|'+ ontology[relation])
    
    return triples

def get_triples_from_sentence_with_relations(sentence, ontology):
    """"""
    Given the following ont",10.75135612487793
1875,"
    Appleton_International_Airport | airport | Greenville,_Wisconsin,_USA
    Appleton_International_Airport | airport | Clayton,_Winnebago_county,_Wisconsin,_USA
    Appleton_International_Airport | airport | Greenville,_Wisconsin,_USA
    Appleton_International_Airport | airport | Clayton,_Winnebago_county,_Wisconsin,_USA
    Appleton_International_Airport | airport | Greenville,_Wisconsin,_USA
    Appleton_International_Airport | airport | Clayton,_Winnebago_county,_Wisconsin,_USA
    Appleton_International_Airport | airport | Greenville,_Wisconsin,_USA
    Appleton_International_Airport | airport | Clayton,_Winnebago_county,_Wisconsin,_USA
    Appleton_International_Airport | airport | Greenville,_Wisconsin,_USA
    Appleton_International_Airport | airport | Clayton,_Winnebago_county,_Wisconsin,_USA
    Appleton_International_Airport | airport | Greenville,_",10.75609278678894
1876,"
    Appleton_International_Airport | airport | Greenville,Clayton,Winnebago_County,Wisconsin,United_States
    Appleton_International_Airport | location | Greenville,Clayton,Winnebago_County,Wisconsin,United_States
    Appleton_International_Airport | city | Greenville,Clayton,Winnebago_County,Wisconsin,United_States
    Appleton_International_Airport | state | Wisconsin,United_States
    Appleton_International_Airport | country | United_States

    """"""
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more test sentences
    # TODO: add more test outputs
    # TODO: add more test entities
    # TODO: add more test relations
    # TODO: add more test entities
    # TODO: add more test relations
    # TODO: add more test entities
    # TODO: add more test relations
    # TODO: add more test",10.726787567138672
1877,"
    Ardmore_Airport | 3rdRunwaySurfaceType | Poaceae
    Ardmore_Airport | Poaceae | order | Poales
    Ardmore_Airport | Poaceae | division | floweringPlants
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        for example in ontology[concept]:
            entities.append(example)
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for example in ontology[concept]:
            for relation in ontology[concept][example]:
                relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for example in examples:
        for entity in entities:
            for relation in relations:
                triple = entity + "" | "" + relation + "" | "" + example
                triples.append(triple)
    
    # Return the triples in the given output format
    return triples

def",10.754414558410645
1878,"
    Ardmore_Airport | 3rdRunwaySurfaceType | Poaceae
    Ardmore_Airport | Poales | divisionOfFloweringPlants
    Ardmore_Airport | Poales | orderOfFloweringPlants
    Ardmore_Airport | Poaceae | Poales
    Ardmore_Airport | Poaceae | divisionOfFloweringPlants
    Ardmore_Airport | Poaceae | orderOfFloweringPlants
    Ardmore_Airport | Poaceae | Poales
    Ardmore_Airport | Poaceae | divisionOfFloweringPlants
    Ardmore_Airport | Poaceae | orderOfFloweringPlants
    Ardmore_Airport | Poaceae | Poales
    Ardmore_Airport | Poaceae | divisionOfFloweringPlants
    Ardmore_Airport | Poaceae | orderOfFloweringPlants
    Ardmore_Airport | Poaceae | Poales
    Ardmore_Airport | Poaceae | divisionOfFloweringPlants
    Ardmore_Airport | Po",10.736622095108032
1879,"
    Ashgabat | airport | Ashgabat
    Ashgabat | elevationAboveSeaLevel | 211
    Ashgabat | runwayLength | 3800
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {tri",10.835631370544434
1880,"
    Ashgabat | location | Ashgabat International Airport
    Ashgabat | airport | 3800.0
    Ashgabat | airport | 211.0
    Ashgabat | airport | 3800.0
    Ashgabat | airport | 211.0
    Ashgabat | airport | 3800.0
    Ashgabat | airport | 211.0
    Ashgabat | airport | 3800.0
    Ashgabat | airport | 211.0
    Ashgabat | airport | 3800.0
    Ashgabat | airport | 211.0
    Ashgabat | airport | 3800.0
    Ashgabat | airport | 211.0
    Ashgabat | airport | 3800.0
    Ashgabat | airport | 211.0
    Ashgabat | airport | 3800.0
    Ashgabat | airport | 211.0
    Ashgabat | airport | 3800.0
    Ashgabat | airport | 211.0
    Ashgabat | airport | 3800.0
    Ash",10.744942903518677
1881,"
    Ashgabat | airport | Ashgabat
    Ashgabat | airport | International
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ashgabat | airport | airport
    Ash",10.735393285751343
1882,"
    Athens_International_Airport | airport | Athens
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Alexis_Tsipras
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Greece
    Athens_",10.732714176177979
1883,"
    Athens_International_Airport | serves | cityOfAthens
    Athens_International_Airport | serves | Greece
    Athens_International_Airport | serves | Alexis_Tsipras
    Athens_International_Airport | serves | leader
    Athens_International_Airport | serves | city
    Athens_International_Airport | serves | Greece
    Athens_International_Airport | serves | Alexis_Tsipras
    Athens_International_Airport | serves | leader
    Athens_International_Airport | serves | city
    Athens_International_Airport | serves | Greece
    Athens_International_Airport | serves | Alexis_Tsipras
    Athens_International_Airport | serves | leader
    Athens_International_Airport | serves | city
    Athens_International_Airport | serves | Greece
    Athens_International_Airport | serves | Alexis_Tsipras
    Athens_International_Airport | serves | leader
    Athens_International_Airport | serves | city
    Athens_International_Airport | serves | Greece
    At",10.72911024093628
1884,"
    Athens_International_Airport | airport | Athens
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Athens
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Athens
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Athens
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Athens
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Athens
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Athens
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Athens
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Athens
    Athens_International_Airport | airport | Greece
    Athens_International_Airport | airport | Athens
    Athens_International_Airport",10.722959041595459
1885,"
    Atlantic_City_International_Airport | airport | 4/22
    Atlantic_City_International_Airport | runway | 4/22
    Atlantic_City_International_Airport | airport | Egg Harbor_Township
    Atlantic_City_International_Airport | airport | New_Jersey
    Atlantic_City_International_Airport | airport | United_States

    """"""
    
    # Split the sentence into words
    words = sentence.split()
    
    # Initialize the output list
    output = []
    
    # Iterate over the words
    for i in range(len(words)):
        
        # Check if the word is a relation
        if words[i] in relations:
            
            # Get the entity before the relation
            entity_1 = words[i-1]
            
            # Get the entity after the relation
            entity_2 = words[i+1]
            
            # Add the triple to the output list
            output.append(entity_1 +'|'+ words[i] +'|'+ entity_2)
    
    # Return the output",10.7375328540802
1886,"
    Atlantic_City_International_Airport | airport | Atlantic_City_International_Airport
    Atlantic_City_International_Airport | airport | Egg_Harbor_Township,_New_Jersey
    Atlantic_City_International_Airport | airport | United_States
    Atlantic_City_International_Airport | airport | 4/22
    Atlantic_City_International_Airport | airport | Egg_Harbor_Township,_New_Jersey
    Atlantic_City_International_Airport | airport | United_States
    Atlantic_City_International_Airport | airport | 4/22
    Atlantic_City_International_Airport | airport | Egg_Harbor_Township,_New_Jersey
    Atlantic_City_International_Airport | airport | United_States
    Atlantic_City_International_Airport | airport | 4/22
    Atlantic_City_International_Airport | airport | Egg_Harbor_Township,_New_Jersey
    Atlantic_City_International_Airport | airport | United_States
    Atlantic_City_International_Airport | airport | 4/22
    Atlantic",10.74135947227478
1887,"
    Antwerp | airport | AntwerpInternationalAirport
    Antwerp | city | Antwerp
    Antwerp | Belgium | Belgium
    Antwerp | leader | Philippe
    Antwerp | cityServed | Antwerp
    Antwerp | country | Belgium
    Antwerp | countryOrigin | Belgium
    Antwerp | cityServedBy | AntwerpInternationalAirport
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryServedBy | Belgium
    Antwerp | countryS",10.729732751846313
1888,"
    Antwerp | cityServed | Belgium
    Antwerp | airport | Antwerp International Airport
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium
    Philippe | person | Belgium",10.735872745513916
1889,"
    Poaceae | class | Monocotyledon
    Poaceae | order | Commelinids
    Poaceae | surfaceType | secondRunwaySurfaceType
    Poaceae | airport | Ardmore_Airport
    Poaceae | country | New_Zealand
    Poaceae | city | Ardmore
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state | New_Zealand
    Poaceae | state",10.717738389968872
1890,"
    Ardmore_Airport | 2ndRunwaySurfaceType | Poaceae
    Ardmore_Airport | 2ndRunwaySurfaceType | Commelinids
    Ardmore_Airport | 2ndRunwaySurfaceType | Monocotyledon
    Ardmore_Airport | 2ndRunwaySurfaceType | Poaceae
    Ardmore_Airport | 2ndRunwaySurfaceType | Commelinids
    Ardmore_Airport | 2ndRunwaySurfaceType | Monocotyledon
    Ardmore_Airport | 2ndRunwaySurfaceType | Poaceae
    Ardmore_Airport | 2ndRunwaySurfaceType | Commelinids
    Ardmore_Airport | 2ndRunwaySurfaceType | Monocotyledon
    Ardmore_Airport | 2ndRunwaySurfaceType | Poaceae
    Ardmore_Airport | 2ndRunwaySurfaceType | Commelinids
    Ardmore_Airport | 2ndRunwaySurfaceType | Monocotyledon
    Ardmore_Airport",10.812174558639526
1891,"
    Aaron_Bertram | bandMember | Kids_Imagine_Nation
    Aaron_Bertram | bandMember | Suburban_Legends
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron_Bertram | bandMember | popMusic
    Aaron",10.728983163833618
1892,"
    Aaron_Bertram | artist | Kids_Imagine_Nation
    Aaron_Bertram | bandMember | Suburban_Legends
    Aaron_Bertram | alternativeName | Aaron Bertram
    Aaron_Bertram | nationality | United_States
    Aaron_Bertram | selectedByNasa | 1963
    Aaron_Bertram | mission | Apollo_11
    Aaron_Bertram | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Aaron_Bertram | birthDate | 1930-01-20
    Aaron_Bertram | birthPlace | Glen_Ridge,_New_Jersey
    Aaron_Bertram | birthYear | 1930
    Aaron_Bertram | alternativeName | Aaron Bertram
    Aaron_Bertram | nationality | United_States
    Aaron_Bertram | selectedByNasa | 1963
    Aaron_Bertram | mission | Apollo_11
    Aaron_Bertram | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Aaron_Bertram | birthDate | 1930-01-20
    Aaron_Bert",10.733734846115112
1893,"
    Aaron_Bertram | bandMember | Kids_Imagine_Nation
    Aaron_Bertram | bandMember | Suburban_Legends
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band
    Aaron_Bertram | bandMember | pop_music_band",10.736944437026978
1894,"
    Aaron_Deer | birthPlace | Indiana,_United_States
    Aaron_Deer | musicalGenre | indieRock
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {ontology[triple[1]]} | {triple[2]}"")",10.744324445724487
1895,"
    Aaron_Deer | genre | indie rock
    Aaron_Deer | country | United_States
    Aaron_Deer | state | Indiana

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TODO: Add more tests
    # TOD",10.732845067977905
1896,"
    Aaron_Deer | nationality | United_States
    Aaron_Deer | musicFusionGenre | Indie rock
    Aaron_Deer | musicSubgenre | rock
    Aaron_Deer | birthPlace | Indiana
    Aaron_Deer | birthDate | 1980-01-01
    Aaron_Deer | birthPlace | United_States
    Aaron_Deer | birthYear | 1980
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_States
    Aaron_Deer | nationality | United_",10.726944923400879
1897,"
    Aaron_Turner | genre | BlackMetal
    Aaron_Turner | band | Twilight
    Aaron_Turner | band | Greymachine
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
",10.72805380821228
1898,"
    Aaron_Turner | musicFusionGenre | BlackMetal
    Aaron_Turner | musicSubgenre | BlackMetal
    Aaron_Turner | associatedBand/associatedMusicalArtist | Twilight
    Aaron_Turner | associatedBand/associatedMusicalArtist | Greymachine

    """"""
    # TODO: add more relations
    # TODO: add more entities
    # TODO: add more examples
    # TODO: add more sentences
    # TODO: add more test sentences
    # TODO: add more test outputs
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO: add more test cases
    # TODO:",10.736295938491821
1899,"
    Aaron_Turner | genre | black_metal_music
    Aaron_Turner | band | Twilight
    Aaron_Turner | band | Greymachine
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | bandMember | Greymachine
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | bandMember | Greymachine
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | bandMember | Greymachine
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | bandMember | Greymachine
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | bandMember | Greymachine
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | bandMember | Greymachine
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | bandMember | Greymachine
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | bandMember | Greymachine
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | bandMember | Greymachine
    Aaron_Turner | bandMember | Twilight
    Aaron",10.739624500274658
1900,"
    Aaron_Turner | plays | drone_music
    Aaron_Turner | played | with | the_bands | Twilight | Greymachine
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for i in range(len(entities)):
        for j in range(len(relations)):
            triples.append(entities[i] +'|'+ relations[j] +'|'+ entities[i])
    
    # Return the triples
    return triples


def get_triples_from_sentence_with_relations(sentence, ontology):
    """"""
    Given the following ontology, examples and sentences, please extract",10.73817753791809
1901,"
    Aaron_Turner | playedWith | Twilight
    Aaron_Turner | isPartOf | droneMusicGenre
    Aaron_Turner | isAssociatedWith | Greymachine
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    triples.append((word, relation, word))
    
    # Filter out the triples that do not match the relations in the ontology
    filtered_triples = []
    for triple in triples:
        if triple[1] in ontology:
            filtered_triples.append(triple",10.735814809799194
1902,"
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | bandMember | Greymachine
    Aaron_Turner | bandMember | droneMusic

    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2",10.830370426177979
1903,"
    Aaron_Turner | bandMember | Sumac
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | genre | black metal
    Aaron_Turner | genre | metal
    Aaron_Turner | genre | rock
    Aaron_Turner | genre | metalcore
    Aaron_Turner | genre | post-metal
    Aaron_Turner | genre | doom metal
    Aaron_Turner | genre | death metal
    Aaron_Turner | genre | black metal
    Aaron_Turner | genre | doom metal
    Aaron_Turner | genre | death metal
    Aaron_Turner | genre | black metal
    Aaron_Turner | genre | doom metal
    Aaron_Turner | genre | death metal
    Aaron_Turner | genre | black metal
    Aaron_Turner | genre | doom metal
    Aaron_Turner | genre | death metal
    Aaron_Turner | genre | black metal
    Aaron_Turner | genre | doom metal
    Aaron_Turner | genre | death metal
    Aaron_Turner | genre | black metal
    Aaron_Turner | genre | doom metal
    Aaron",10.739805936813354
1904,"
    Aaron_Turner | playedWith | Twilight
    Aaron_Turner | playedWith | Sumac
    Aaron_Turner | playedWith | Black_Metal
    Aaron_Turner | musicGenre | Twilight
    Aaron_Turner | musicGenre | Sumac
    Aaron_Turner | musicGenre | Black_Metal

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    ",10.717787504196167
1905,"
    Aaron_Turner | bandMember | Twilight
    Aaron_Turner | bandMember | Sumac
    Aaron_Turner | musician | Black metal
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append((example, relation, sentence))
        return triples


class Ontology:
    """"""
    This class represents an ontology. It contains the following methods:
    - add_relation: adds a relation to the ontology
    - add_entity: adds an entity to the ontology
    - get_relations: returns a list of all relations in the ontology
    - get_entities: returns a list of all entities in the ontology
    - get_triples: returns a list of all triples in the ont",10.726392984390259
1906,"
    Aaron_Turner | performedWith | Sumac
    Aaron_Turner | isA | Black_metal_musician
    Aaron_Turner | isA | Death_metal_musician
    Aaron_Turner | isA | Musical_fusion
    Aaron_Turner | isA | Black_metal_musician
    Aaron_Turner | isA | Death_metal_musician
    Aaron_Turner | isA | Musical_fusion
    Aaron_Turner | isA | Black_metal_musician
    Aaron_Turner | isA | Death_metal_musician
    Aaron_Turner | isA | Musical_fusion
    Aaron_Turner | isA | Black_metal_musician
    Aaron_Turner | isA | Death_metal_musician
    Aaron_Turner | isA | Musical_fusion
    Aaron_Turner | isA | Black_metal_musician
    Aaron_Turner | isA | Death_metal_musician
    Aaron_Turner | isA | Musical_fusion
    Aaron_Turner | isA | Black_metal_",10.738122701644897
1907,"
    Aaron_Turner | performedWith | Sumac
    Aaron_Turner | musicalStyle | BlackMetal
    Aaron_Turner | musicalStyle | DeathMetal
    Aaron_Turner | musicalStyle | BlackMetal
    Aaron_Turner | musicalStyle | DeathMetal
    Aaron_Turner | musicalStyle | BlackMetal
    Aaron_Turner | musicalStyle | DeathMetal
    Aaron_Turner | musicalStyle | BlackMetal
    Aaron_Turner | musicalStyle | DeathMetal
    Aaron_Turner | musicalStyle | BlackMetal
    Aaron_Turner | musicalStyle | DeathMetal
    Aaron_Turner | musicalStyle | BlackMetal
    Aaron_Turner | musicalStyle | DeathMetal
    Aaron_Turner | musicalStyle | BlackMetal
    Aaron_Turner | musicalStyle | DeathMetal
    Aaron_Turner | musicalStyle | BlackMetal
    Aaron_Turner | musicalStyle | DeathMetal
    Aaron_Turner | musicalStyle | BlackMetal
    Aaron_Turner | musicalStyle | DeathMetal
    Aaron_Turner | musicalStyle | BlackMetal
    Aaron_Turner | musicalStyle | DeathMetal
    Aaron_",10.720957279205322
1908,"
    Aaron_Turner | genre | Black_metal
    Aaron_Turner | genre | Sumac
    Aaron_Turner | genre | Death_metal
    Aaron_Turner | genre | Black_metal
    Aaron_Turner | genre | Death_metal
    Aaron_Turner | genre | Sumac
    Aaron_Turner | genre | Black_metal
    Aaron_Turner | genre | Death_metal
    Aaron_Turner | genre | Sumac
    Aaron_Turner | genre | Black_metal
    Aaron_Turner | genre | Death_metal
    Aaron_Turner | genre | Sumac
    Aaron_Turner | genre | Black_metal
    Aaron_Turner | genre | Death_metal
    Aaron_Turner | genre | Sumac
    Aaron_Turner | genre | Black_metal
    Aaron_Turner | genre | Death_metal
    Aaron_Turner | genre | Sumac
    Aaron_Turner | genre | Black_metal
    Aaron_Turner | genre | Death_metal
    Aaron_Turner | genre | Sumac
    Aaron_Turner | genre | Black_",10.802802801132202
1909,"
    Aaron_Turner | plays | electric_guitar
    Aaron_Turner | plays | black_metal
    Aaron_Turner | plays | death_metal
    Aaron_Turner | plays | fusion
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | fusion
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays | genre
    Aaron_Turner | plays",10.749478340148926
1910,"
    Death_metal | musicalFusion | black_metal
    Death_metal | musicalFusion | electric_guitarist
    Death_metal | musicalFusion | Aaron_Turner

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO",10.720439434051514
1911,"
    Death_metal | musicalFusion | black_metal_music
    Death_metal | musicalFusion | Aaron_Turner
    Death_metal | musicalFusion | electric_guitar
    """"""
    
    # Create a list of all the entities in the ontology
    entities = []
    for concept in ontology:
        entities.append(concept['name'])
    
    # Create a list of all the relations in the ontology
    relations = []
    for concept in ontology:
        for relation in concept['relations']:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for sentence in sentences:
        for word in sentence.split():
            if word in entities:
                for relation in relations:
                    triples.append((word, relation, word))
    
    # Filter out the triples that do not match the relations in the ontology
    filtered_triples = []
    for triple in triples:
        if triple[1] in ontology:
            filtered_triples",10.744587421417236
1912,"
    Abradab | musicFusionGenre | hip hop
    Abradab | musicSubgenre | Gangsta rap
    Drum and bass | derivesItsSoundsFrom | hip hop music
    hip hop music | derivesItsSoundsFrom | drum and bass
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the given output format
    output = []
    for triple in triples:
        output.",10.730642080307007
1913,"
    Abradab | genre | hip hop music
    hip hop music | subgenre | Gangsta rap
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation.startswith('1stRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('2ndRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('3rdRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('4thRunwaySurfaceType'):
            relations.append(relation)
        elif relation.startswith('LCCN_number'):
            relations.append(relation)
        elif relation.startswith('NationalRegisterOfHistoricPlacesReferenceNumber'):",10.822200298309326
1914,"
    hipHopMusic | genre | Abradab
    hipHopMusic | genre | Gangsta Rap
    hipHopMusic | genre | Drum and Bass
    hipHopMusic | genre | Abradab
    hipHopMusic | genre | Gangsta Rap
    hipHopMusic | genre | Drum and Bass
    hipHopMusic | genre | Abradab
    hipHopMusic | genre | Gangsta Rap
    hipHopMusic | genre | Drum and Bass
    hipHopMusic | genre | Abradab
    hipHopMusic | genre | Gangsta Rap
    hipHopMusic | genre | Drum and Bass
    hipHopMusic | genre | Abradab
    hipHopMusic | genre | Gangsta Rap
    hipHopMusic | genre | Drum and Bass
    hipHopMusic | genre | Abradab
    hipHopMusic | genre | Gangsta Rap
    hipHopMusic | genre | Drum and Bass
    hipHopMusic | genre | Abradab
    hipHopMusic | genre | Gangsta Rap
    hipHopMusic | genre | Drum and Bass
    hipHopMusic | genre | Abradab
    hipHopMusic |",10.738049745559692
1915,"
    Ace_Wilder | birthPlace | Sweden
    Ace_Wilder | nationality | Sweden
    Ace_Wilder | selectedByNasa | 1963
    Ace_Wilder | mission | Apollo_11
    Ace_Wilder | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Ace_Wilder | birthDate | 1930-01-20
    Ace_Wilder | birthPlace | Sweden
    Ace_Wilder | alternativeName | Ace Wilder
    Ace_Wilder | nationality | Sweden
    Ace_Wilder | selectedByNasa | 1963
    Ace_Wilder | mission | Apollo_11
    Ace_Wilder | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Ace_Wilder | birthDate | 1930-01-20
    Ace_Wilder | birthPlace | Sweden
    Ace_Wilder | alternativeName | Ace Wilder
    Ace_Wilder | nationality | Sweden
    Ace_Wilder | selectedByNasa | 1963
    Ace_Wilder | mission | Apollo_11",10.735220670700073
1916,"
    Ace_Wilder | nationality | Sweden
    Ace_Wilder | recordLabel | Warner Music Group
    Ace_Wilder | soloSinger | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    Ace_Wilder | recordLabel | 
    ",10.73462176322937
1917,"
    Sweden | birthplace | Ace Wilder
    Ace Wilder | soloSinger | Ace Wilder
    Ace Wilder | background | Ace Wilder
    Ace Wilder | recordLabel | Warner Music group
    Warner Music group | recordLabel | Ace Wilder

    """"""
    def __init__(self, ontology_file, examples_file, output_file):
        self.ontology = Ontology(ontology_file)
        self.examples = self.load_examples(examples_file)
        self.output_file = output_file

    def load_examples(self, examples_file):
        examples = []
        with open(examples_file, 'r') as f:
            for line in f:
                line = line.strip()
                if line:
                    examples.append(line)
        return examples

    def extract_triples(self):
        with open(self.output_file, 'w') as f:
            for example in self.examples:
                triples = self.extract_triples_from_example(example",10.742833852767944
1918,"
    Agustin_Barboza | soloSinger | Guarania
    Agustin_Barboza | signedTo | PhilipsRecords

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TODO: Add more test entities
    # TODO: Add more test relations
    # TOD",10.739526510238647
1919,"
    Agustin_Barboza | soloSinger | Guarania_artiste
    Agustin_Barboza | startedOutAs | soloSinger
    Agustin_Barboza | is | is
    Agustin_Barboza | a | Guarania_artiste
    Agustin_Barboza | artiste | Guarania_artiste
    Agustin_Barboza | under | recordLabels
    Agustin_Barboza | recordLabels | Philips_Records
    Agustin_Barboza | is | a
    Agustin_Barboza | a | Guarania_artiste
    Agustin_Barboza | under | recordLabels
    Agustin_Barboza | recordLabels | Philips_Records
    Agustin_Barboza | is | a
    Agustin_Barboza | a | Guarania_artiste
    Agustin_Barboza | under | recordLabels
    Agustin_Barboza | recordLabels | Philips_Records
    Agustin_Barbo",10.744887828826904
1920,"
    Agustin_Barboza | background | solo_singing
    Agustin_Barboza | background | Guarania_style
    Agustin_Barboza | background | Philips_Records
    Agustin_Barboza | background | solo_singing
    Agustin_Barboza | background | Guarania_style
    Agustin_Barboza | background | Philips_Records
    Agustin_Barboza | background | solo_singing
    Agustin_Barboza | background | Guarania_style
    Agustin_Barboza | background | Philips_Records
    Agustin_Barboza | background | solo_singing
    Agustin_Barboza | background | Guarania_style
    Agustin_Barboza | background | Philips_Records
    Agustin_Barboza | background | solo_singing
    Agustin_Barboza | background | Guarania_style
    Agustin_Barboza | background | Philips_Records
    Agustin_Barboza | background",10.751919031143188
1921,"
    Agustin_Barboza | birthPlace | Asuncion,_Paraguay
    Agustin_Barboza | birthDate | 1913-05-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthYear | 1913
    Agustin_Barboza | nationality | Paraguay
    Agustin_Barboza | birthPlace | Asuncion
    Agustin_Barboza | birthDate | 1913-05-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthYear | 1913
    Agustin_Barboza | nationality | Paraguay
    Agustin_Barboza | birthPlace | Asuncion
    Agustin_Barboza | birthDate | 1913-05-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthYear | 1913
    Agustin_Barboza | nationality | Paraguay
    Agustin_Barboza | birthPlace | Asuncion
    Agust",10.731378078460693
1922,"
    Agustin_Barboza | birthPlace | Asuncion,_Paraguay
    Agustin_Barboza | birthDate | 1913-03-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | nationality | Paraguay
    Agustin_Barboza | birthDate | 1913-03-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthDate | 1913-03-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthDate | 1913-03-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthDate | 1913-03-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthDate | 1913-03-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthDate | 1913-03-05
    Agustin",10.736149072647095
1923,"
    Agustin_Barboza | birthPlace | Asuncion_Paraguay
    Agustin_Barboza | birthDate | 1913-03-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthYear | 1913
    Agustin_Barboza | nationality | Paraguay
    Agustin_Barboza | birthDate | 1913-03-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthYear | 1913
    Agustin_Barboza | nationality | Paraguay
    Agustin_Barboza | birthDate | 1913-03-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthYear | 1913
    Agustin_Barboza | nationality | Paraguay
    Agustin_Barboza | birthDate | 1913-03-05
    Agustin_Barboza | birthPlace | Paraguay
    Agustin_Barboza | birthYear | 1913
    Agustin_",10.729158401489258
1924,"
    Ahmet_Ertegun | bluesMusic | United_States
    Ahmet_Ertegun | Washington_D_C | United_States
    """"""
    def __init__(self, ontology_file_path, output_file_path):
        self.ontology = Ontology(ontology_file_path)
        self.output_file_path = output_file_path

    def extract_triples(self, sentence):
        triples = []
        for word in sentence.split():
            if word in self.ontology.concepts:
                for relation in self.ontology.concepts[word].relations:
                    if relation in sentence:
                        triples.append((word, relation, sentence.split()[sentence.split().index(relation) + 1]))
        return triples

    def run(self):
        with open(self.output_file_path, 'w') as output_file:
            for sentence in self.ontology.sentences:
                triples = self.extract_triples(sentence)
                for triple in triples:
                    output",10.820871353149414
1925,"
    Ahmet_Ertegun | birthPlace | Washington_D_C,_United_States
    Ahmet_Ertegun | nationality | United_States
    Ahmet_Ertegun | selectedByNasa | 1963
    Ahmet_Ertegun | mission | Apollo_11
    Ahmet_Ertegun | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Ahmet_Ertegun | birthDate | 1930-01-20
    Ahmet_Ertegun | birthPlace | Washington_D_C,_United_States
    Ahmet_Ertegun | alternativeName | Ahmet Ertegun, Jr.
    Ahmet_Ertegun | nationality | United_States
    Ahmet_Ertegun | selectedByNasa | 1963
    Ahmet_Ertegun | mission | Apollo_11
    Ahmet_Ertegun | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Ahmet_Ertegun | birthDate | 1930-01-20
    Ahmet_Ertegun | birthPlace | Washington_D_C,_United_States
    ",10.744138240814209
1926,"
    Al_Anderson | bandMember | NRBQ
    Al_Anderson | bandMember | The_Wildweeds
    Al_Anderson | bandMember | NRQB
    Al_Anderson | bandMember | 1966
    Al_Anderson | bandMember | Al_Aderson
    Al_Anderson | bandMember | The_Wildweeds
    Al_Anderson | bandMember | NRQB
    Al_Anderson | bandMember | 1966
    Al_Anderson | bandMember | Al_Aderson
    Al_Anderson | bandMember | The_Wildweeds
    Al_Anderson | bandMember | NRQB
    Al_Anderson | bandMember | 1966
    Al_Anderson | bandMember | Al_Aderson
    Al_Anderson | bandMember | The_Wildweeds
    Al_Anderson | bandMember | NRQB
    Al_Anderson | bandMember | 1966
    Al_Anderson | bandMember | Al_Aderson
    Al_Anderson | bandMember | The_Wildweeds
    Al_Anderson | bandMember | NRQB
    Al_Anderson | bandMember | 1966
    Al_Anderson | bandMember | Al_Aderson
    Al_",10.751713275909424
1927,"
    Al_Anderson | birthPlace | San_Diego,_California
    Al_Anderson | birthDate | 1966-01-01
    Al_Anderson | birthPlace | San_Diego,_California
    Al_Anderson | birthDate | 1966-01-01
    Al_Anderson | birthPlace | San_Diego,_California
    Al_Anderson | birthDate | 1966-01-01
    Al_Anderson | birthPlace | San_Diego,_California
    Al_Anderson | birthDate | 1966-01-01
    Al_Anderson | birthPlace | San_Diego,_California
    Al_Anderson | birthDate | 1966-01-01
    Al_Anderson | birthPlace | San_Diego,_California
    Al_Anderson | birthDate | 1966-01-01
    Al_Anderson | birthPlace | San_Diego,_California
    Al_Anderson | birthDate | 1966-01-01
    Al_Anderson | birthPlace | San_Diego,_California
    Al_Anderson | birthDate | 1966-01-01
    Al_Anderson | birthPlace | San_Diego,_California",10.738219022750854
1928,"
    Al_Anderson | activeYearsStartDate | 1966
    Al_Anderson | activeYearsEndDate | -
    Al_Anderson | activeYearsStartYear | 1966
    Al_Anderson | birthDate | -
    Al_Anderson | birthPlace | -
    Al_Anderson | birthYear | -
    Al_Anderson | nationality | -
    Al_Anderson | selectedByNasa | -
    Al_Anderson | mission | -
    Al_Anderson | almaMater | -
    Al_Anderson | alternativeName | -
    Al_Anderson | birthDate | -
    Al_Anderson | birthPlace | -
    Al_Anderson | birthYear | -
    Al_Anderson | nationality | -
    Al_Anderson | selectedByNasa | -
    Al_Anderson | mission | -
    Al_Anderson | almaMater | -
    Al_Anderson | alternativeName | -
    Al_Anderson | birthDate | -
    Al_Anderson | birthPlace | -
    Al_Anderson | birthYear | -
    Al_Anderson | nationality | -
    Al_Anderson | selectedByNasa | -
    Al_Anderson",10.725142002105713
1929,"
    Alan_Frews | musicalGenre | rock
    Alan_Frews | musicalGenreOrigin | country
    Alan_Frews | musicalGenreStylisticOrigin | folk
    Alan_Frews | musicalGenreOrigin | country
    Alan_Frews | musicalGenreStylisticOrigin | folk
    Alan_Frews | musicalGenreOrigin | country
    Alan_Frews | musicalGenreStylisticOrigin | folk
    Alan_Frews | musicalGenreOrigin | country
    Alan_Frews | musicalGenreStylisticOrigin | folk
    Alan_Frews | musicalGenreOrigin | country
    Alan_Frews | musicalGenreStylisticOrigin | folk
    Alan_Frews | musicalGenreOrigin | country
    Alan_Frews | musicalGenreStylisticOrigin | folk
    Alan_Frews | musicalGenreOrigin | country
    Alan_Frews | musicalGenreStylisticOrigin | folk
    Alan_Frews | musicalGenreOrigin | country
    Alan_Frews | musicalGenreSt",10.754228830337524
1930,"
    Alan_Frew | genre | Rock
    Alan_Frew | origin | country
    Alan_Frew | origin | folk
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew | origin | 
    Alan_Frew",10.739824771881104
1931,"
    Alan_Frew | performs | Rock_music
    Alan_Frew | originatedFrom | Folk_music
    Alan_Frew | originatedFrom | Country_music

    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    triples.append(self.extract_triple(sentence, example, relation))
        return triples

    def extract_triple(self, sentence, example, relation):
        """"""
        Extracts the triples from the sentence according to the relations in the ontology. In the output, only include the 
        triples in the given output format

        Input: sentence, example, relation

        Output: entity_1 | relation | entity_2

        """"""
        entity_1 = example.get_entity_1(sentence)
",10.76527738571167
1932,"
    Albennie_Jones | birthPlace | Errata,_Mississippi
    Albennie_Jones | nationality | United_States
    Albennie_Jones | birthDate | 
    Albennie_Jones | alternativeName | Albennie Jones
    Albennie_Jones | profession | Jazz musician and solo singer
    Albennie_Jones | almaMater | 
    Albennie_Jones | education | 
    Albennie_Jones | birthPlace | 
    Albennie_Jones | birthDate | 
    Albennie_Jones | alternativeName | Albennie Jones
    Albennie_Jones | nationality | United_States
    Albennie_Jones | birthPlace | 
    Albennie_Jones | birthDate | 
    Albennie_Jones | alternativeName | Albennie Jones
    Albennie_Jones | nationality | United_States
    Albennie_Jones | birthPlace | 
    Albennie_Jones | birthDate | 
    Albennie_Jones | alternativeName | Alb",10.745127201080322
1933,"
    Albennie_Jones | birthPlace | Errata,_Mississippi
    Albennie_Jones | alternativeName | Albennie Jones
    Albennie_Jones | nationality | United_States
    Albennie_Jones | selectedByNasa | 1963
    Albennie_Jones | mission | Apollo_11
    Albennie_Jones | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Albennie_Jones | birthDate | 1930-01-20
    Albennie_Jones | birthPlace | Errata,_Mississippi
    Albennie_Jones | birthYear | 1930
    Albennie_Jones | alternativeName | Albennie Jones
    Albennie_Jones | nationality | United_States
    Albennie_Jones | selectedByNasa | 1963
    Albennie_Jones | mission | Apollo_11
    Albennie_Jones | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Albennie_Jones | birthDate | 1930-01-20
    Albenn",10.741634845733643
1934,"
    Albennie_Jones | birthPlace | Errata,_Mississippi
    Albennie_Jones | nationality | United_States
    Albennie_Jones | selectedByNasa | 1963
    Albennie_Jones | mission | Apollo_11
    Albennie_Jones | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Albennie_Jones | birthDate | 1930-01-20
    Albennie_Jones | birthPlace | Errata,_Mississippi
    Albennie_Jones | alternativeName | Albennie Jones
    Albennie_Jones | nationality | United_States
    Albennie_Jones | selectedByNasa | 1963
    Albennie_Jones | mission | Apollo_11
    Albennie_Jones | almaMater | Massachusetts Institute of Technology, Sc.D. 1963
    Albennie_Jones | birthDate | 1930-01-20
    Albennie_Jones | birthPlace | Errata,_Mississippi
    Albennie_Jones | alternativeName | Albennie",10.75865626335144
1935,"
    Albennie_Jones | musicFusionGenre | Jazz
    Albennie_Jones | musicSubgenre | Afrobeat
    Albennie_Jones | musicFusionGenre | Jazz
    Albennie_Jones | musicSubgenre | Afrobeat
    Albennie_Jones | musicFusionGenre | Jazz
    Albennie_Jones | musicSubgenre | Afrobeat
    Albennie_Jones | musicFusionGenre | Jazz
    Albennie_Jones | musicSubgenre | Afrobeat
    Albennie_Jones | musicFusionGenre | Jazz
    Albennie_Jones | musicSubgenre | Afrobeat
    Albennie_Jones | musicFusionGenre | Jazz
    Albennie_Jones | musicSubgenre | Afrobeat
    Albennie_Jones | musicFusionGenre | Jazz
    Albennie_Jones | musicSubgenre | Afrobeat
    Albennie_Jones | musicFusionGenre | Jazz
    Albennie_Jones | musicSubgenre | Afrobeat",10.818542003631592
1936,"
    Albennie_Jones | jazz | Jazz
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | blues | blues
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones | afrobeat | afrobeat
    Albennie_Jones",10.786576747894287
1937,"
    Albennie_Jones | jazz | Blues
    Albennie_Jones | afrobeat | Jazz
    """"""
    
    # Create a list of all the entities in the sentence
    entities = []
    for word in sentence.split():
        if word in ontology:
            entities.append(word)
    
    # Create a list of all the relations in the ontology
    relations = []
    for relation in ontology:
        if relation in sentence:
            relations.append(relation)
    
    # Create a list of all the triples in the sentence
    triples = []
    for entity1 in entities:
        for relation in relations:
            for entity2 in entities:
                if entity2!= entity1 and relation in sentence:
                    triples.append((entity1, relation, entity2))
    
    # Convert the triples to the desired output format
    output = []
    for triple in triples:
        output.append(f""{triple[0]} | {triple[1]} | {triple[2]}"")
    
    return output

",10.7638521194458
1938,"
    Aleksandra_Kovač | genre | Pop
    Aleksandra_Kovač | bandMember | Kornelije_Kovač
    Aleksandra_Kovač | associatedMusicalArtist | Bebi_Dol
    """"""
    
    # TODO: Add more relations
    relations = ['1stRunwaySurfaceType', '2ndRunwaySurfaceType', '3rdRunwaySurfaceType', '4thRunwaySurfaceType', 'LCCN_number', 'NationalRegisterOfHistoricPlacesReferenceNumber', 'abbreviation', 'academicDiscipline', 'academicStaffSize', 'activeYearsEndDate', 'activeYearsStartDate', 'activeYearsStartYear', 'addedToTheNationalRegisterOfHistoricPlaces', 'address', 'affiliation', 'aircraftFighter', 'almaMater', 'alternativeName', 'apoapsis', 'architect', 'architecturalStyle', 'areaCode', 'areaOfLand', 'areaOfWater', 'areaTotal', 'assembly', 'associatedBand/associatedMusicalArtist', 'associatedRocket', 'attackAircraft', 'author', '",10.780041217803955
1939,"
    Aleksandra_Kovač | performer | popMusic
    Bebi_Dol | musicalArtist | popMusic
    Kornelije_Kovač | musicalArtist | popMusic

    """"""
    # TODO: Add more relations
    # TODO: Add more entities
    # TODO: Add more examples
    # TODO: Add more sentences
    # TODO: Add more test sentences
    # TODO: Add more test outputs
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    # TODO: Add more test cases
    ",10.74921464920044
1940,"
    Aleksandra_Kovač | associatedBand/associatedMusicalArtist | Bebi_Dol,_Kornelije_Kovac
    Aleksandra_Kovač | musicalGenre | Pop
    """"""
    def __init__(self, ontology, examples, sentences):
        self.ontology = ontology
        self.examples = examples
        self.sentences = sentences

    def extract_triples(self):
        triples = []
        for sentence in self.sentences:
            for example in self.examples:
                for relation in self.ontology.relations:
                    if relation in sentence:
                        triples.append(self.ontology.get_triple(sentence, example, relation))
        return triples

    def get_triples_output(self):
        triples = self.extract_triples()
        triples_output = []
        for triple in triples:
            triples_output.append(triple.to_output_format())
        return triples_output


class Ontology:
    """"""
    This class",10.760651111602783
